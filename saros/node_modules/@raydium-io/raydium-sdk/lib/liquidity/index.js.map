{"version":3,"sources":["../../src/liquidity/index.ts","../../src/liquidity/id.ts","../../src/marshmallow/index.ts","../../src/marshmallow/buffer-layout.ts","../../src/liquidity/layout.ts","../../src/liquidity/liquidity.ts","../../src/entity/amount.ts","../../src/common/convert-json.ts","../../src/common/pubkey.ts","../../src/common/logger.ts","../../src/version.ts","../../src/common/inspect.ts","../../src/common/lodash.ts","../../src/common/web3.ts","../../src/entity/bignumber.ts","../../src/entity/constant.ts","../../src/token/sol.ts","../../src/token/mainnet.ts","../../src/token/devnet.ts","../../src/token/testnet.ts","../../src/token/util.ts","../../src/entity/currency.ts","../../src/entity/fraction.ts","../../src/entity/to-format.ts","../../src/entity/percent.ts","../../src/entity/price.ts","../../src/spl/layout.ts","../../src/spl/spl.ts","../../src/base/base.ts","../../src/serum/id.ts","../../src/serum/layout.ts","../../src/serum/serum.ts","../../src/liquidity/stable.ts","../../src/liquidity/pool.ts"],"sourcesContent":["export * from \"./id\";\nexport * from \"./layout\";\nexport * from \"./liquidity\";\nexport * from \"./pool\";\nexport * from \"./type\";\n","import { PublicKey } from \"@solana/web3.js\";\n\nimport { SerumVersion } from \"../serum\";\n\nimport { LiquidityVersion } from \"./type\";\n\n/* ================= program public keys ================= */\nexport const _LIQUIDITY_PROGRAM_ID_V4 = \"675kPX9MHTjS2zt1qfr1NYHuzeLXfQM9H24wFSUt1Mp8\";\nexport const LIQUIDITY_PROGRAM_ID_V4 = new PublicKey(_LIQUIDITY_PROGRAM_ID_V4);\n\nexport const _LIQUIDITY_PROGRAM_ID_V5 = \"5quBtoiQqxF9Jv6KYKctB59NT3gtJD2Y65kdnB1Uev3h\";\nexport const LIQUIDITY_PROGRAM_ID_V5 = new PublicKey(_LIQUIDITY_PROGRAM_ID_V5);\n\n// liquidity program id string => liquidity version\nexport const LIQUIDITY_PROGRAMID_TO_VERSION: {\n  [key: string]: LiquidityVersion;\n} = {\n  [_LIQUIDITY_PROGRAM_ID_V4]: 4,\n  [_LIQUIDITY_PROGRAM_ID_V5]: 5,\n};\n\n// liquidity version => liquidity program id\nexport const LIQUIDITY_VERSION_TO_PROGRAMID: { [key in LiquidityVersion]?: PublicKey } & {\n  [K: number]: PublicKey;\n} = {\n  4: LIQUIDITY_PROGRAM_ID_V4,\n  5: LIQUIDITY_PROGRAM_ID_V5,\n};\n\n// liquidity version => serum version\nexport const LIQUIDITY_VERSION_TO_SERUM_VERSION: {\n  [key in LiquidityVersion]?: SerumVersion;\n} & {\n  [K: number]: SerumVersion;\n} = {\n  4: 3,\n  5: 3,\n};\n","import { PublicKey } from \"@solana/web3.js\";\nimport BN, { isBN } from \"bn.js\";\n\nimport {\n  bits, blob, Blob, Layout, offset as _offset, seq as _seq, Structure as _Structure, u32 as _u32, u8 as _u8, UInt,\n  union as _union, Union as _Union,\n} from \"./buffer-layout\";\n\nexport * from \"./buffer-layout\";\nexport { blob };\n\nexport class BNLayout<P extends string = \"\"> extends Layout<BN, P> {\n  blob: Layout<Buffer>;\n  signed: boolean;\n\n  constructor(span: number, signed: boolean, property?: P) {\n    //@ts-expect-error type wrong for super()'s type different from extends, but it desn't matter\n    super(span, property);\n    this.blob = blob(span);\n    this.signed = signed;\n  }\n\n  /** @override */\n  decode(b: Buffer, offset = 0) {\n    const num = new BN(this.blob.decode(b, offset), 10, \"le\");\n    if (this.signed) {\n      return num.fromTwos(this.span * 8).clone();\n    }\n    return num;\n  }\n\n  /** @override */\n  encode(src: BN, b: Buffer, offset = 0) {\n    if (typeof src === \"number\") src = new BN(src); // src will pass a number accidently in union\n    if (this.signed) {\n      src = src.toTwos(this.span * 8);\n    }\n    return this.blob.encode(src.toArrayLike(Buffer, \"le\", this.span), b, offset);\n  }\n}\n\nexport class WideBits<P extends string = \"\"> extends Layout<Record<string, boolean>, P> {\n  _lower: any;\n  _upper: any;\n  // TODO: unknown\n  constructor(property?: P) {\n    //@ts-expect-error type wrong for super()'s type different from extends , but it desn't matter\n    super(8, property);\n    this._lower = bits(_u32(), false);\n    this._upper = bits(_u32(), false);\n  }\n\n  addBoolean(property: string) {\n    if (this._lower.fields.length < 32) {\n      this._lower.addBoolean(property);\n    } else {\n      this._upper.addBoolean(property);\n    }\n  }\n\n  decode(b: Buffer, offset = 0): Record<string, boolean> {\n    const lowerDecoded = this._lower.decode(b, offset);\n    const upperDecoded = this._upper.decode(b, offset + this._lower.span);\n    return { ...lowerDecoded, ...upperDecoded };\n  }\n\n  encode(src: any /* TEMP */, b: Buffer, offset = 0) {\n    return this._lower.encode(src, b, offset) + this._upper.encode(src, b, offset + this._lower.span);\n  }\n}\n\nexport function u8<P extends string = \"\">(property?: P): UInt<number, P> {\n  return new UInt(1, property);\n}\n\nexport function u32<P extends string = \"\">(property?: P): UInt<number, P> {\n  return new UInt(4, property);\n}\n\nexport function u64<P extends string = \"\">(property?: P): BNLayout<P> {\n  return new BNLayout(8, false, property);\n}\n\nexport function u128<P extends string = \"\">(property?: P): BNLayout<P> {\n  return new BNLayout(16, false, property);\n}\n\nexport function i64<P extends string = \"\">(property?: P): BNLayout<P> {\n  return new BNLayout(8, true, property);\n}\n\nexport function i128<P extends string = \"\">(property?: P): BNLayout<P> {\n  return new BNLayout(16, true, property);\n}\n\nexport class WrappedLayout<T, U, P extends string = \"\"> extends Layout<U, P> {\n  layout: Layout<T>;\n  decoder: (data: T) => U;\n  encoder: (src: U) => T;\n\n  constructor(layout: Layout<T>, decoder: (data: T) => U, encoder: (src: U) => T, property?: P) {\n    //@ts-expect-error type wrong for super()'s type different from extends , but it desn't matter\n    super(layout.span, property);\n    this.layout = layout;\n    this.decoder = decoder;\n    this.encoder = encoder;\n  }\n\n  decode(b: Buffer, offset?: number): U {\n    return this.decoder(this.layout.decode(b, offset));\n  }\n\n  encode(src: U, b: Buffer, offset?: number): number {\n    return this.layout.encode(this.encoder(src), b, offset);\n  }\n\n  getSpan(b: Buffer, offset?: number): number {\n    return this.layout.getSpan(b, offset);\n  }\n}\n\nexport function publicKey<P extends string = \"\">(property?: P): Layout<PublicKey, P> {\n  return new WrappedLayout(\n    blob(32),\n    (b: Buffer) => new PublicKey(b),\n    (key: PublicKey) => key.toBuffer(),\n    property,\n  );\n}\n\nexport class OptionLayout<T, P> extends Layout<T | null, P> {\n  layout: Layout<T>;\n  discriminator: Layout<number>;\n\n  constructor(layout: Layout<T>, property?: P) {\n    //@ts-expect-error type wrong for super()'s type different from extends , but it desn't matter\n    super(-1, property);\n    this.layout = layout;\n    this.discriminator = _u8();\n  }\n\n  encode(src: T | null, b: Buffer, offset = 0): number {\n    if (src === null || src === undefined) {\n      return this.discriminator.encode(0, b, offset);\n    }\n    this.discriminator.encode(1, b, offset);\n    return this.layout.encode(src, b, offset + 1) + 1;\n  }\n\n  decode(b: Buffer, offset = 0): T | null {\n    const discriminator = this.discriminator.decode(b, offset);\n    if (discriminator === 0) {\n      return null;\n    } else if (discriminator === 1) {\n      return this.layout.decode(b, offset + 1);\n    }\n    throw new Error(\"Invalid option \" + this.property);\n  }\n\n  getSpan(b: Buffer, offset = 0): number {\n    const discriminator = this.discriminator.decode(b, offset);\n    if (discriminator === 0) {\n      return 1;\n    } else if (discriminator === 1) {\n      return this.layout.getSpan(b, offset + 1) + 1;\n    }\n    throw new Error(\"Invalid option \" + this.property);\n  }\n}\n\nexport function option<T, P extends string = \"\">(layout: Layout<T>, property?: P): Layout<T | null, P> {\n  return new OptionLayout<T, P>(layout, property);\n}\n\nexport function bool<P extends string = \"\">(property?: P): Layout<boolean, P> {\n  return new WrappedLayout(_u8(), decodeBool, encodeBool, property);\n}\n\nexport function decodeBool(value: number): boolean {\n  if (value === 0) {\n    return false;\n  } else if (value === 1) {\n    return true;\n  }\n  throw new Error(\"Invalid bool: \" + value);\n}\n\nexport function encodeBool(value: boolean): number {\n  return value ? 1 : 0;\n}\n\nexport function vec<T, P extends string = \"\">(elementLayout: Layout<T>, property?: P): Layout<T[], P> {\n  const length = _u32(\"length\");\n  const layout: Layout<{ values: T[] }> = struct([\n    length,\n    seq(elementLayout, _offset(length, -length.span), \"values\"),\n  ]) as any; // Something I don't know\n  return new WrappedLayout(\n    layout,\n    ({ values }) => values,\n    (values) => ({ values }),\n    property,\n  );\n}\n\nexport function tagged<T, P extends string = \"\">(tag: BN, layout: Layout<T>, property?: P): Layout<T, P> {\n  const wrappedLayout: Layout<{ tag: BN; data: T }> = struct([u64(\"tag\"), layout.replicate(\"data\")]) as any; // Something I don't know\n\n  function decodeTag({ tag: receivedTag, data }: { tag: BN; data: T }) {\n    if (!receivedTag.eq(tag)) {\n      throw new Error(\"Invalid tag, expected: \" + tag.toString(\"hex\") + \", got: \" + receivedTag.toString(\"hex\"));\n    }\n    return data;\n  }\n\n  return new WrappedLayout(wrappedLayout, decodeTag, (data) => ({ tag, data }), property);\n}\n\nexport function vecU8<P extends string = \"\">(property?: P): Layout<Buffer, P> {\n  const length = _u32(\"length\");\n  const layout: Layout<{ data: Buffer }> = struct([length, blob(_offset(length, -length.span), \"data\")]) as any; // Something I don't know\n  return new WrappedLayout(\n    layout,\n    ({ data }) => data,\n    (data) => ({ data }),\n    property,\n  );\n}\n\nexport function str<P extends string = \"\">(property?: P): Layout<string, P> {\n  return new WrappedLayout(\n    vecU8(),\n    (data) => data.toString(\"utf-8\"),\n    (s) => Buffer.from(s, \"utf-8\"),\n    property,\n  );\n}\n\nexport interface EnumLayout<T, P extends string = \"\"> extends Layout<T, P> {\n  registry: Record<string, Layout<any>>;\n}\n\nexport function rustEnum<T, P extends string = \"\">(variants: Layout<any>[], property?: P): EnumLayout<T, P> {\n  const unionLayout = _union(_u8(), property);\n  variants.forEach((variant, index) => unionLayout.addVariant(index, variant, variant.property));\n  return unionLayout as any; // ?why use UnionLayout? This must be a fault\n}\n\nexport function array<T, P extends string = \"\">(\n  elementLayout: Layout<T>,\n  length: number,\n  property?: P,\n): Layout<T[], P> {\n  const layout = struct([seq(elementLayout, length, \"values\")]) as any as Layout<{ values: T[] }>; // Something I don't know\n  return new WrappedLayout(\n    layout,\n    ({ values }) => values,\n    (values) => ({ values }),\n    property,\n  );\n}\n\nexport class Structure<T, P, D> extends _Structure<T, P, D> {\n  /** @override */\n  decode(b: Buffer, offset?: number) {\n    return super.decode(b, offset);\n  }\n}\n\nexport function struct<T, P extends string = \"\">(\n  fields: T,\n  property?: P,\n  decodePrefixes?: boolean,\n): T extends Layout<infer Value, infer Property>[]\n  ? Structure<\n      Value,\n      P,\n      {\n        [K in Exclude<Extract<Property, string>, \"\">]: Extract<T[number], Layout<any, K>> extends Layout<infer V, any>\n          ? V\n          : any;\n      }\n    >\n  : any {\n  //@ts-expect-error this type is not quite satisfied the define, but, never no need to worry about.\n  return new Structure(fields, property, decodePrefixes);\n}\n\nexport type GetLayoutSchemaFromStructure<T extends Structure<any, any, any>> = T extends Structure<any, any, infer S>\n  ? S\n  : any;\nexport type GetStructureFromLayoutSchema<S> = Structure<any, any, S>;\n\nexport class Union<Schema> extends _Union<Schema> {\n  encodeInstruction(instruction: any): Buffer {\n    const instructionMaxSpan = Math.max(...Object.values(this.registry).map((r) => r.span));\n    const b = Buffer.alloc(instructionMaxSpan);\n    return b.slice(0, this.encode(instruction, b));\n  }\n\n  decodeInstruction(instruction: any) {\n    return this.decode(instruction);\n  }\n}\nexport function union<UnionSchema extends { [key: string]: any } = any>(\n  discr: any,\n  defaultLayout?: any,\n  property?: string,\n): Union<UnionSchema> {\n  return new Union(discr, defaultLayout, property);\n}\n\nclass Zeros extends Blob {\n  decode(b: Buffer, offset: number) {\n    const slice = super.decode(b, offset);\n    if (!slice.every((v) => v === 0)) {\n      throw new Error(\"nonzero padding bytes\");\n    }\n    return slice;\n  }\n}\n\nexport function zeros(length: number) {\n  return new Zeros(length);\n}\n\nexport function seq<T, P extends string = \"\", AnotherP extends string = \"\">(\n  elementLayout: Layout<T, P>,\n  count: number | BN | Layout<BN | number, P>,\n  property?: AnotherP,\n): Layout<T[], AnotherP> {\n  let parsedCount: number;\n  const superCount =\n    typeof count === \"number\"\n      ? count\n      : isBN(count)\n      ? count.toNumber()\n      : new Proxy(count as unknown as Layout<number> /* pretend to be Layout<number> */, {\n          get(target, property) {\n            if (!parsedCount) {\n              // get count in targetLayout. note that count may be BN\n              const countProperty = Reflect.get(target, \"count\");\n\n              // let targetLayout's  property:count be a number\n              parsedCount = isBN(countProperty) ? countProperty.toNumber() : countProperty;\n\n              // record the count\n              Reflect.set(target, \"count\", parsedCount);\n            }\n            return Reflect.get(target, property);\n          },\n          set(target, property, value) {\n            if (property === \"count\") {\n              parsedCount = value;\n            }\n            return Reflect.set(target, property, value);\n          },\n        });\n\n  // @ts-expect-error force type\n  return _seq(elementLayout, superCount, property);\n}\n","import {\n  bits as _bits, BitStructure as _BitStructure, blob as _blob, Blob as _Blob, cstr as _cstr, f32 as _f32,\n  f32be as _f32be, f64 as _f64, f64be as _f64be, greedy as _greedy, Layout as _Layout, ns64 as _ns64, ns64be as _ns64be,\n  nu64 as _nu64, nu64be as _nu64be, offset as _offset, s16 as _s16, s16be as _s16be, s24 as _s24, s24be as _s24be,\n  s32 as _s32, s32be as _s32be, s40 as _s40, s40be as _s40be, s48 as _s48, s48be as _s48be, s8 as _s8, seq as _seq,\n  struct as _struct, Structure as _Structure, u16 as _u16, u16be as _u16be, u24 as _u24, u24be as _u24be, u32 as _u32,\n  u32be as _u32be, u40 as _u40, u40be as _u40be, u48 as _u48, u48be as _u48be, u8 as _u8, UInt as _UInt,\n  union as _union, Union as _Union, unionLayoutDiscriminator as _unionLayoutDiscriminator, utf8 as _utf8,\n} from \"@solana/buffer-layout\";\n\n//#region ------------------- Layout -------------------\nexport interface Layout<T = any, P = \"\"> {\n  span: number;\n  property?: P;\n  decode(b: Buffer, offset?: number): T;\n  encode(src: T, b: Buffer, offset?: number): number;\n  getSpan(b: Buffer, offset?: number): number;\n  replicate<AP extends string>(name: AP): Layout<T, AP>;\n}\nexport interface LayoutConstructor {\n  new <T, P>(): Layout<T, P>; // for class extends syntex\n  new <T, P>(span?: T, property?: P): Layout<T, P>;\n  readonly prototype: Layout;\n}\nexport const Layout = _Layout as unknown as LayoutConstructor;\n//#endregion\n\n//#region ------------------- Structure -------------------\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nexport interface Structure<T = any, P = \"\", DecodeSchema extends { [key: string]: any } = any>\n  extends Layout<DecodeSchema, P> {\n  span: number;\n  decode(b: Buffer, offset?: number): DecodeSchema;\n  layoutFor<AP extends string>(property: AP): Layout<DecodeSchema[AP]>;\n  offsetOf<AP extends string>(property: AP): number;\n}\ninterface StructureConstructor {\n  new <T = any, P = \"\", DecodeSchema extends { [key: string]: any } = any>(): Structure<T, P, DecodeSchema>;\n  new <T = any, P = \"\", DecodeSchema extends { [key: string]: any } = any>(\n    fields: T,\n    property?: P,\n    decodePrefixes?: boolean,\n  ): Structure<T, P, DecodeSchema>;\n}\nexport const Structure = _Structure as unknown as StructureConstructor;\n//#endregion\n\n//#region ------------------- Union -------------------\nexport interface Union<UnionSchema extends { [key: string]: any } = any> extends Layout {\n  registry: object;\n  decode(b: Buffer, offset?: number): Partial<UnionSchema>;\n  addVariant(\n    variant: number,\n    layout: Structure<any, any, Partial<UnionSchema>> | Layout<any, keyof UnionSchema>,\n    property?: string,\n  ): any /* TEMP: code in Layout.js 1809 */;\n}\ninterface UnionConstructor {\n  new <UnionSchema extends { [key: string]: any } = any>(): Union<UnionSchema>;\n  new <UnionSchema extends { [key: string]: any } = any>(\n    discr: Layout<any, any>,\n    defaultLayout: Layout<any, any>,\n    property?: string,\n  ): Union<UnionSchema>;\n}\nexport const Union = _Union as unknown as UnionConstructor;\n//#endregion\n\n//#region ------------------- BitStructure -------------------\nexport type BitStructure<T = unknown /* TEMP */, P = \"\"> = Layout<T, P>;\ninterface BitStructureConstructor {\n  new (...params: any[]): BitStructure;\n}\nexport const BitStructure = _BitStructure as BitStructureConstructor;\n//#endregion\n\n//#region ------------------- UInt -------------------\nexport type UInt<T = any, P = \"\"> = Layout<T, P>;\ninterface UIntConstructor {\n  new <T, P>(span?: T, property?: P): UInt<T, P>;\n}\nexport const UInt = _UInt as UIntConstructor;\n//#endregion\n\n//#region ------------------- Blob -------------------\nexport type Blob<P extends string = \"\"> = Layout<Buffer, P>;\ninterface BlobConstructor {\n  new (...params: ConstructorParameters<LayoutConstructor>): Blob;\n}\nexport const Blob = _Blob as unknown as BlobConstructor;\n//#endregion\n\nexport const greedy = _greedy as <P extends string = \"\">(elementSpan?: number, property?: P) => Layout<number, P>;\nexport const u8 = _u8 as <P extends string = \"\">(property?: P) => Layout<number, P>;\nexport const u16 = _u16 as <P extends string = \"\">(property?: P) => Layout<number, P>;\nexport const u24 = _u24 as <P extends string = \"\">(property?: P) => Layout<number, P>;\nexport const u32 = _u32 as <P extends string = \"\">(property?: P) => Layout<number, P>;\nexport const u40 = _u40 as <P extends string = \"\">(property?: P) => Layout<number, P>;\nexport const u48 = _u48 as <P extends string = \"\">(property?: P) => Layout<number, P>;\nexport const nu64 = _nu64 as <P extends string = \"\">(property?: P) => Layout<number, P>;\nexport const u16be = _u16be as <P extends string = \"\">(property?: P) => Layout<number, P>;\nexport const u24be = _u24be as <P extends string = \"\">(property?: P) => Layout<number, P>;\nexport const u32be = _u32be as <P extends string = \"\">(property?: P) => Layout<number, P>;\nexport const u40be = _u40be as <P extends string = \"\">(property?: P) => Layout<number, P>;\nexport const u48be = _u48be as <P extends string = \"\">(property?: P) => Layout<number, P>;\nexport const nu64be = _nu64be as <P extends string = \"\">(property?: P) => Layout<number, P>;\nexport const s8 = _s8 as <P extends string = \"\">(property?: P) => Layout<number, P>;\nexport const s16 = _s16 as <P extends string = \"\">(property?: P) => Layout<number, P>;\nexport const s24 = _s24 as <P extends string = \"\">(property?: P) => Layout<number, P>;\nexport const s32 = _s32 as <P extends string = \"\">(property?: P) => Layout<number, P>;\nexport const s40 = _s40 as <P extends string = \"\">(property?: P) => Layout<number, P>;\nexport const s48 = _s48 as <P extends string = \"\">(property?: P) => Layout<number, P>;\nexport const ns64 = _ns64 as <P extends string = \"\">(property?: P) => Layout<number, P>;\nexport const s16be = _s16be as <P extends string = \"\">(property?: P) => Layout<number, P>;\nexport const s24be = _s24be as <P extends string = \"\">(property?: P) => Layout<number, P>;\nexport const s32be = _s32be as <P extends string = \"\">(property?: P) => Layout<number, P>;\nexport const s40be = _s40be as <P extends string = \"\">(property?: P) => Layout<number, P>;\nexport const s48be = _s48be as <P extends string = \"\">(property?: P) => Layout<number, P>;\nexport const ns64be = _ns64be as <P extends string = \"\">(property?: P) => Layout<number, P>;\nexport const f32 = _f32 as <P extends string = \"\">(property?: P) => Layout<number, P>;\nexport const f32be = _f32be as <P extends string = \"\">(property?: P) => Layout<number, P>;\nexport const f64 = _f64 as <P extends string = \"\">(property?: P) => Layout<number, P>;\nexport const f64be = _f64be as <P extends string = \"\">(property?: P) => Layout<number, P>;\nexport const struct = _struct as <T, P extends string = \"\">(\n  fields: T,\n  property?: P,\n  decodePrefixes?: boolean,\n) => T extends Layout<infer Value, infer Property>[]\n  ? Structure<\n      Value,\n      P,\n      {\n        [K in Exclude<Extract<Property, string>, \"\">]: Extract<T[number], Layout<any, K>> extends Layout<infer V, any>\n          ? V\n          : any;\n      }\n    >\n  : any;\n\nexport const seq = _seq as unknown as <T, P>(\n  elementLayout: Layout<T, string>,\n  count: number | Layout<number, string>,\n  property?: P,\n) => Layout<T[]>;\nexport const union = _union as <UnionSchema extends { [key: string]: any } = any>(\n  discr: Layout<any, any>,\n  defaultLayout?: any,\n  property?: string,\n) => Union<UnionSchema>;\nexport const unionLayoutDiscriminator = _unionLayoutDiscriminator as <P extends string = \"\">(\n  layout: Layout<any, P>,\n  property?: P,\n) => any;\nexport const blob = _blob as unknown as <P extends string = \"\">(length: number | Layout<number, P>, property?: P) => Blob<P>;\nexport const cstr = _cstr as <P extends string = \"\">(property?: P) => Layout<string, P>;\nexport const utf8 = _utf8 as <P extends string = \"\">(maxSpan: number, property?: P) => Layout<string, P>;\nexport const bits = _bits as unknown as <T, P extends string = \"\">(\n  word: Layout<T>,\n  msb?: boolean,\n  property?: P,\n) => BitStructure<T, P>; // TODO: not quite sure\nexport const offset = _offset as unknown as <T, P extends string = \"\">(\n  layout: Layout<T, P>,\n  offset?: number,\n  property?: P,\n) => Layout<T, P>;\n\nexport type GetStructureSchema<T extends Structure> = T extends Structure<any, any, infer S> ? S : unknown;\n","import { GetStructureSchema, publicKey, seq, struct, u128, u64 } from \"../marshmallow\";\n\n/* ================= state layouts ================= */\nexport const LIQUIDITY_STATE_LAYOUT_V4 = struct([\n  u64(\"status\"),\n  u64(\"nonce\"),\n  u64(\"maxOrder\"),\n  u64(\"depth\"),\n  u64(\"baseDecimal\"),\n  u64(\"quoteDecimal\"),\n  u64(\"state\"),\n  u64(\"resetFlag\"),\n  u64(\"minSize\"),\n  u64(\"volMaxCutRatio\"),\n  u64(\"amountWaveRatio\"),\n  u64(\"baseLotSize\"),\n  u64(\"quoteLotSize\"),\n  u64(\"minPriceMultiplier\"),\n  u64(\"maxPriceMultiplier\"),\n  u64(\"systemDecimalValue\"),\n  u64(\"minSeparateNumerator\"),\n  u64(\"minSeparateDenominator\"),\n  u64(\"tradeFeeNumerator\"),\n  u64(\"tradeFeeDenominator\"),\n  u64(\"pnlNumerator\"),\n  u64(\"pnlDenominator\"),\n  u64(\"swapFeeNumerator\"),\n  u64(\"swapFeeDenominator\"),\n  u64(\"baseNeedTakePnl\"),\n  u64(\"quoteNeedTakePnl\"),\n  u64(\"quoteTotalPnl\"),\n  u64(\"baseTotalPnl\"),\n  u128(\"quoteTotalDeposited\"),\n  u128(\"baseTotalDeposited\"),\n  u128(\"swapBaseInAmount\"),\n  u128(\"swapQuoteOutAmount\"),\n  u64(\"swapBase2QuoteFee\"),\n  u128(\"swapQuoteInAmount\"),\n  u128(\"swapBaseOutAmount\"),\n  u64(\"swapQuote2BaseFee\"),\n  // amm vault\n  publicKey(\"baseVault\"),\n  publicKey(\"quoteVault\"),\n  // mint\n  publicKey(\"baseMint\"),\n  publicKey(\"quoteMint\"),\n  publicKey(\"lpMint\"),\n  // market\n  publicKey(\"openOrders\"),\n  publicKey(\"marketId\"),\n  publicKey(\"marketProgramId\"),\n  publicKey(\"targetOrders\"),\n  publicKey(\"withdrawQueue\"),\n  publicKey(\"lpVault\"),\n  publicKey(\"owner\"),\n  // true circulating supply without lock up\n  u64(\"lpReserve\"),\n  seq(u64(), 3, \"padding\"),\n]);\n\nexport type LiquidityStateLayoutV4 = typeof LIQUIDITY_STATE_LAYOUT_V4;\nexport type LiquidityStateV4 = GetStructureSchema<LiquidityStateLayoutV4>;\n\nexport const LIQUIDITY_STATE_LAYOUT_V5 = struct([\n  u64(\"accountType\"),\n  u64(\"status\"),\n  u64(\"nonce\"),\n  u64(\"maxOrder\"),\n  u64(\"depth\"),\n  u64(\"baseDecimal\"),\n  u64(\"quoteDecimal\"),\n  u64(\"state\"),\n  u64(\"resetFlag\"),\n  u64(\"minSize\"),\n  u64(\"volMaxCutRatio\"),\n  u64(\"amountWaveRatio\"),\n  u64(\"baseLotSize\"),\n  u64(\"quoteLotSize\"),\n  u64(\"minPriceMultiplier\"),\n  u64(\"maxPriceMultiplier\"),\n  u64(\"systemDecimalsValue\"),\n  u64(\"abortTradeFactor\"),\n  u64(\"priceTickMultiplier\"),\n  u64(\"priceTick\"),\n  // Fees\n  u64(\"minSeparateNumerator\"),\n  u64(\"minSeparateDenominator\"),\n  u64(\"tradeFeeNumerator\"),\n  u64(\"tradeFeeDenominator\"),\n  u64(\"pnlNumerator\"),\n  u64(\"pnlDenominator\"),\n  u64(\"swapFeeNumerator\"),\n  u64(\"swapFeeDenominator\"),\n  // OutPutData\n  u64(\"baseNeedTakePnl\"),\n  u64(\"quoteNeedTakePnl\"),\n  u64(\"quoteTotalPnl\"),\n  u64(\"baseTotalPnl\"),\n  u64(\"poolOpenTime\"),\n  u64(\"punishPcAmount\"),\n  u64(\"punishCoinAmount\"),\n  u64(\"orderbookToInitTime\"),\n  u128(\"swapBaseInAmount\"),\n  u128(\"swapQuoteOutAmount\"),\n  u128(\"swapQuoteInAmount\"),\n  u128(\"swapBaseOutAmount\"),\n  u64(\"swapQuote2BaseFee\"),\n  u64(\"swapBase2QuoteFee\"),\n\n  publicKey(\"baseVault\"),\n  publicKey(\"quoteVault\"),\n  publicKey(\"baseMint\"),\n  publicKey(\"quoteMint\"),\n  publicKey(\"lpMint\"),\n\n  publicKey(\"modelDataAccount\"),\n  publicKey(\"openOrders\"),\n  publicKey(\"marketId\"),\n  publicKey(\"marketProgramId\"),\n  publicKey(\"targetOrders\"),\n  publicKey(\"owner\"),\n  seq(u64(), 64, \"padding\"),\n]);\n\nexport type LiquidityStateLayoutV5 = typeof LIQUIDITY_STATE_LAYOUT_V5;\nexport type LiquidityStateV5 = GetStructureSchema<LiquidityStateLayoutV5>;\n\nexport type LiquidityState = LiquidityStateV4 | LiquidityStateV5;\nexport type LiquidityStateLayout = LiquidityStateLayoutV4 | LiquidityStateLayoutV5;\n\n/* ================= index ================= */\n// version => liquidity state layout\nexport const LIQUIDITY_VERSION_TO_STATE_LAYOUT: {\n  [version: number]: LiquidityStateLayout;\n} = {\n  4: LIQUIDITY_STATE_LAYOUT_V4,\n  5: LIQUIDITY_STATE_LAYOUT_V5,\n};\n","import { AccountInfo, Connection, PublicKey, Signer, Transaction, TransactionInstruction } from \"@solana/web3.js\";\nimport BN from \"bn.js\";\n\nimport { Base, TokenAccount } from \"../base\";\nimport {\n  AccountMeta, AccountMetaReadonly, findProgramAddress, getMultipleAccountsInfo, GetMultipleAccountsInfoConfig, Logger,\n  parseSimulateLogToJson, parseSimulateValue, simulateMultipleInstruction, SYSTEM_PROGRAM_ID, SYSVAR_RENT_PUBKEY,\n  TOKEN_PROGRAM_ID,\n} from \"../common\";\nimport {\n  BigNumberish, Currency, CurrencyAmount, divCeil, ONE, parseBigNumberish, Percent, Price, Token, TokenAmount, ZERO,\n} from \"../entity\";\nimport { struct, u64, u8 } from \"../marshmallow\";\nimport { Market } from \"../serum\";\nimport { Spl } from \"../spl\";\n\nimport {\n  LIQUIDITY_PROGRAMID_TO_VERSION, LIQUIDITY_VERSION_TO_PROGRAMID, LIQUIDITY_VERSION_TO_SERUM_VERSION,\n} from \"./id\";\nimport { LIQUIDITY_VERSION_TO_STATE_LAYOUT, LiquidityStateLayout, LiquidityStateV4 } from \"./layout\";\nimport {\n  formatLayout, getDxByDyBaseIn, getDyByDxBaseIn, getStablePrice, ModelDataPubkey, stableModelLayout,\n} from \"./stable\";\nimport { LiquidityPoolJsonInfo } from \"./type\";\n\nconst logger = Logger.from(\"Liquidity\");\n\nlet modelData: stableModelLayout = {\n  accountType: 0,\n  status: 0,\n  multiplier: 0,\n  validDataCount: 0,\n  DataElement: [],\n};\n\nasync function initStableModelLayout(connection: Connection) {\n  if (modelData.validDataCount === 0) {\n    if (connection) {\n      const acc = await connection.getAccountInfo(ModelDataPubkey);\n      if (acc) modelData = formatLayout(acc?.data);\n    }\n  }\n}\n\n// buy: quote => base\n// sell: base => quote\n// export type TradeSide = \"buy\" | \"sell\";\n\nexport type SwapSide = \"in\" | \"out\";\nexport type LiquiditySide = \"a\" | \"b\";\n// for inner instruction\nexport type AmountSide = \"base\" | \"quote\";\n\n/* ================= pool keys ================= */\nexport type LiquidityPoolKeysV4 = {\n  [T in keyof LiquidityPoolJsonInfo]: string extends LiquidityPoolJsonInfo[T] ? PublicKey : LiquidityPoolJsonInfo[T];\n};\n\n/**\n * Full liquidity pool keys that build transaction need\n */\nexport type LiquidityPoolKeys = LiquidityPoolKeysV4;\n\nexport interface LiquidityAssociatedPoolKeysV4\n  extends Omit<\n    LiquidityPoolKeysV4,\n    \"marketBaseVault\" | \"marketQuoteVault\" | \"marketBids\" | \"marketAsks\" | \"marketEventQueue\"\n  > {\n  nonce: number;\n}\n\n/**\n * Associated liquidity pool keys\n * @remarks\n * without partial markets keys\n */\nexport type LiquidityAssociatedPoolKeys = LiquidityAssociatedPoolKeysV4;\n\nexport enum LiquidityPoolStatus {\n  Uninitialized,\n  Initialized,\n  Disabled,\n  RemoveLiquidityOnly,\n  LiquidityOnly,\n  OrderBook,\n  Swap,\n  WaitingForStart,\n}\n\n/* ================= pool info ================= */\n/**\n * Liquidity pool info\n * @remarks\n * same data type with layouts\n */\nexport interface LiquidityPoolInfo {\n  status: BN;\n  baseDecimals: number;\n  quoteDecimals: number;\n  lpDecimals: number;\n  baseReserve: BN;\n  quoteReserve: BN;\n  lpSupply: BN;\n  startTime: BN;\n}\n\n/* ================= user keys ================= */\n/**\n * Full user keys that build transaction need\n */\nexport interface LiquidityUserKeys {\n  baseTokenAccount: PublicKey;\n  quoteTokenAccount: PublicKey;\n  lpTokenAccount: PublicKey;\n  owner: PublicKey;\n}\n\n// liquidity class\n// export interface LiquidityLoadParams {\n//   connection: Connection;\n//   poolKeys: LiquidityPoolKeys;\n//   poolInfo?: LiquidityPoolInfo;\n// }\n\n// export type LiquidityConstructParams = Required<LiquidityLoadParams>;\n\n/* ================= make instruction and transaction ================= */\nexport interface LiquidityAddInstructionParamsV4 {\n  poolKeys: LiquidityPoolKeys;\n  userKeys: LiquidityUserKeys;\n  baseAmountIn: BigNumberish;\n  quoteAmountIn: BigNumberish;\n  fixedSide: AmountSide;\n}\n\n/**\n * Add liquidity instruction params\n */\nexport type LiquidityAddInstructionParams = LiquidityAddInstructionParamsV4;\n\n/**\n * Add liquidity transaction params\n */\nexport interface LiquidityAddTransactionParams {\n  connection: Connection;\n  poolKeys: LiquidityPoolKeys;\n  userKeys: {\n    tokenAccounts: TokenAccount[];\n    owner: PublicKey;\n    payer?: PublicKey;\n  };\n  amountInA: CurrencyAmount | TokenAmount;\n  amountInB: CurrencyAmount | TokenAmount;\n  fixedSide: LiquiditySide;\n  config?: {\n    bypassAssociatedCheck?: boolean;\n  };\n}\n\nexport interface LiquidityRemoveInstructionParamsV4 {\n  poolKeys: LiquidityPoolKeys;\n  userKeys: LiquidityUserKeys;\n  amountIn: BigNumberish;\n}\n\n/**\n * Remove liquidity instruction params\n */\nexport type LiquidityRemoveInstructionParams = LiquidityRemoveInstructionParamsV4;\n\n/**\n * Remove liquidity transaction params\n */\nexport interface LiquidityRemoveTransactionParams {\n  connection: Connection;\n  poolKeys: LiquidityPoolKeys;\n  userKeys: {\n    tokenAccounts: TokenAccount[];\n    owner: PublicKey;\n    payer?: PublicKey;\n  };\n  amountIn: TokenAmount;\n  config?: {\n    bypassAssociatedCheck?: boolean;\n  };\n}\n\nexport interface LiquiditySwapFixedInInstructionParamsV4 {\n  poolKeys: LiquidityPoolKeys;\n  userKeys: {\n    tokenAccountIn: PublicKey;\n    tokenAccountOut: PublicKey;\n    owner: PublicKey;\n  };\n  amountIn: BigNumberish;\n  // minimum amount out\n  minAmountOut: BigNumberish;\n}\n\nexport interface LiquiditySwapFixedOutInstructionParamsV4 {\n  poolKeys: LiquidityPoolKeys;\n  userKeys: {\n    tokenAccountIn: PublicKey;\n    tokenAccountOut: PublicKey;\n    owner: PublicKey;\n  };\n  // maximum amount in\n  maxAmountIn: BigNumberish;\n  amountOut: BigNumberish;\n}\n\n/**\n * Swap instruction params\n */\nexport interface LiquiditySwapInstructionParams {\n  poolKeys: LiquidityPoolKeys;\n  userKeys: {\n    tokenAccountIn: PublicKey;\n    tokenAccountOut: PublicKey;\n    owner: PublicKey;\n  };\n  amountIn: BigNumberish;\n  amountOut: BigNumberish;\n  fixedSide: SwapSide;\n}\n\n/**\n * Swap transaction params\n */\nexport interface LiquiditySwapTransactionParams {\n  connection: Connection;\n  poolKeys: LiquidityPoolKeys;\n  userKeys: {\n    tokenAccounts: TokenAccount[];\n    owner: PublicKey;\n    payer?: PublicKey;\n  };\n  amountIn: CurrencyAmount | TokenAmount;\n  amountOut: CurrencyAmount | TokenAmount;\n  fixedSide: SwapSide;\n  config?: {\n    bypassAssociatedCheck?: boolean;\n  };\n}\n\nexport interface LiquidityCreatePoolInstructionParamsV4 {\n  poolKeys: LiquidityAssociatedPoolKeysV4;\n  userKeys: {\n    payer: PublicKey;\n  };\n}\n\n/**\n * Create pool instruction params\n */\nexport type LiquidityCreatePoolInstructionParams = LiquidityCreatePoolInstructionParamsV4;\n\n/**\n * Create pool transaction params\n */\nexport type LiquidityCreatePoolTransactionParams = LiquidityCreatePoolInstructionParams;\n\nexport interface LiquidityInitPoolInstructionParamsV4 {\n  poolKeys: LiquidityAssociatedPoolKeysV4;\n  userKeys: {\n    lpTokenAccount: PublicKey;\n    payer: PublicKey;\n  };\n  startTime: BigNumberish;\n}\n\n/**\n * Init pool instruction params\n */\nexport type LiquidityInitPoolInstructionParams = LiquidityInitPoolInstructionParamsV4;\n\n/**\n * Init pool transaction params\n */\nexport interface LiquidityInitPoolTransactionParams {\n  connection: Connection;\n  poolKeys: LiquidityAssociatedPoolKeysV4;\n  userKeys: {\n    tokenAccounts: TokenAccount[];\n    owner: PublicKey;\n    payer?: PublicKey;\n  };\n  baseAmount: CurrencyAmount | TokenAmount;\n  quoteAmount: CurrencyAmount | TokenAmount;\n  startTime?: BigNumberish;\n  config?: {\n    bypassAssociatedCheck?: boolean;\n  };\n}\n\n/* ================= fetch data ================= */\n/**\n * Fetch liquidity pool info params\n */\nexport interface LiquidityFetchInfoParams {\n  connection: Connection;\n  poolKeys: LiquidityPoolKeys;\n}\n\n/**\n * Fetch liquidity multiple pool info params\n */\nexport interface LiquidityFetchMultipleInfoParams {\n  connection: Connection;\n  pools: LiquidityPoolKeys[];\n  config?: GetMultipleAccountsInfoConfig;\n}\n\n/* ================= compute data ================= */\nexport interface LiquidityComputeAnotherAmountParams {\n  poolKeys: LiquidityPoolKeys;\n  poolInfo: LiquidityPoolInfo;\n  amount: CurrencyAmount | TokenAmount;\n  anotherCurrency: Currency | Token;\n  slippage: Percent;\n}\n\nexport const LIQUIDITY_FEES_NUMERATOR = new BN(25);\nexport const LIQUIDITY_FEES_DENOMINATOR = new BN(10000);\n\nexport interface LiquidityComputeAmountOutParams {\n  poolKeys: LiquidityPoolKeys;\n  poolInfo: LiquidityPoolInfo;\n  amountIn: CurrencyAmount | TokenAmount;\n  currencyOut: Currency | Token;\n  slippage: Percent;\n}\n\nexport interface LiquidityComputeAmountInParams\n  extends Omit<LiquidityComputeAmountOutParams, \"amountIn\" | \"currencyOut\"> {\n  amountOut: CurrencyAmount | TokenAmount;\n  currencyIn: Currency | Token;\n}\n\nexport class Liquidity extends Base {\n  // public connection: Connection;\n  // public poolKeys: LiquidityPoolKeys;\n  // public poolInfo: LiquidityPoolInfo;\n\n  // constructor({ connection, poolKeys, poolInfo }: LiquidityConstructParams) {\n  //   this.connection = connection;\n  //   this.poolKeys = poolKeys;\n  //   this.poolInfo = poolInfo;\n  // }\n\n  // static async load({ connection, poolKeys, poolInfo }: LiquidityLoadParams) {\n  //   const _poolInfo = poolInfo || (await this.fetchInfo({ connection, poolKeys }));\n\n  //   return new Liquidity({ connection, poolKeys, poolInfo: _poolInfo });\n  // }\n\n  /* ================= get version and program id ================= */\n  static getProgramId(version: number) {\n    const programId = LIQUIDITY_VERSION_TO_PROGRAMID[version];\n    logger.assertArgument(!!programId, \"invalid version\", \"version\", version);\n\n    return programId;\n  }\n\n  static getVersion(programId: PublicKey) {\n    const programIdString = programId.toBase58();\n\n    const version = LIQUIDITY_PROGRAMID_TO_VERSION[programIdString];\n    logger.assertArgument(!!version, \"invalid program id\", \"programId\", programIdString);\n\n    return version;\n  }\n\n  static getSerumVersion(version: number) {\n    const serumVersion = LIQUIDITY_VERSION_TO_SERUM_VERSION[version];\n    logger.assertArgument(!!serumVersion, \"invalid version\", \"version\", version);\n\n    return serumVersion;\n  }\n\n  /* ================= get layout ================= */\n  static getStateLayout(version: number) {\n    const STATE_LAYOUT = LIQUIDITY_VERSION_TO_STATE_LAYOUT[version];\n    logger.assertArgument(!!STATE_LAYOUT, \"invalid version\", \"version\", version);\n\n    return STATE_LAYOUT;\n  }\n\n  static getLayouts(version: number) {\n    return { state: this.getStateLayout(version) };\n  }\n\n  /* ================= get key ================= */\n  static async getAssociatedId({ programId, marketId }: { programId: PublicKey; marketId: PublicKey }) {\n    const { publicKey } = await findProgramAddress(\n      [programId.toBuffer(), marketId.toBuffer(), Buffer.from(\"amm_associated_seed\", \"utf-8\")],\n      programId,\n    );\n    return publicKey;\n  }\n\n  static async getAssociatedAuthority({ programId }: { programId: PublicKey }) {\n    return findProgramAddress(\n      // new Uint8Array(Buffer.from('amm authority'.replace('\\u00A0', ' '), 'utf-8'))\n      [Buffer.from([97, 109, 109, 32, 97, 117, 116, 104, 111, 114, 105, 116, 121])],\n      programId,\n    );\n  }\n\n  static async getAssociatedBaseVault({ programId, marketId }: { programId: PublicKey; marketId: PublicKey }) {\n    const { publicKey } = await findProgramAddress(\n      [programId.toBuffer(), marketId.toBuffer(), Buffer.from(\"coin_vault_associated_seed\", \"utf-8\")],\n      programId,\n    );\n    return publicKey;\n  }\n\n  static async getAssociatedQuoteVault({ programId, marketId }: { programId: PublicKey; marketId: PublicKey }) {\n    const { publicKey } = await findProgramAddress(\n      [programId.toBuffer(), marketId.toBuffer(), Buffer.from(\"pc_vault_associated_seed\", \"utf-8\")],\n      programId,\n    );\n    return publicKey;\n  }\n\n  static async getAssociatedLpMint({ programId, marketId }: { programId: PublicKey; marketId: PublicKey }) {\n    const { publicKey } = await findProgramAddress(\n      [programId.toBuffer(), marketId.toBuffer(), Buffer.from(\"lp_mint_associated_seed\", \"utf-8\")],\n      programId,\n    );\n    return publicKey;\n  }\n\n  static async getAssociatedLpVault({ programId, marketId }: { programId: PublicKey; marketId: PublicKey }) {\n    const { publicKey } = await findProgramAddress(\n      [programId.toBuffer(), marketId.toBuffer(), Buffer.from(\"temp_lp_token_associated_seed\", \"utf-8\")],\n      programId,\n    );\n    return publicKey;\n  }\n\n  static async getAssociatedTargetOrders({ programId, marketId }: { programId: PublicKey; marketId: PublicKey }) {\n    const { publicKey } = await findProgramAddress(\n      [programId.toBuffer(), marketId.toBuffer(), Buffer.from(\"target_associated_seed\", \"utf-8\")],\n      programId,\n    );\n    return publicKey;\n  }\n\n  static async getAssociatedWithdrawQueue({ programId, marketId }: { programId: PublicKey; marketId: PublicKey }) {\n    const { publicKey } = await findProgramAddress(\n      [programId.toBuffer(), marketId.toBuffer(), Buffer.from(\"withdraw_associated_seed\", \"utf-8\")],\n      programId,\n    );\n    return publicKey;\n  }\n\n  static async getAssociatedOpenOrders({ programId, marketId }: { programId: PublicKey; marketId: PublicKey }) {\n    const { publicKey } = await findProgramAddress(\n      [programId.toBuffer(), marketId.toBuffer(), Buffer.from(\"open_order_associated_seed\", \"utf-8\")],\n      programId,\n    );\n    return publicKey;\n  }\n\n  static async getAssociatedPoolKeys({\n    version,\n    marketId,\n    baseMint,\n    quoteMint,\n  }: {\n    version: number;\n    marketId: PublicKey;\n    baseMint: PublicKey;\n    quoteMint: PublicKey;\n  }): Promise<LiquidityAssociatedPoolKeys> {\n    const programId = this.getProgramId(version);\n\n    const id = await this.getAssociatedId({ programId, marketId });\n    const lpMint = await this.getAssociatedLpMint({ programId, marketId });\n    const { publicKey: authority, nonce } = await this.getAssociatedAuthority({ programId });\n    const baseVault = await this.getAssociatedBaseVault({ programId, marketId });\n    const quoteVault = await this.getAssociatedQuoteVault({ programId, marketId });\n    const lpVault = await this.getAssociatedLpVault({ programId, marketId });\n    const openOrders = await this.getAssociatedOpenOrders({ programId, marketId });\n    const targetOrders = await this.getAssociatedTargetOrders({ programId, marketId });\n    const withdrawQueue = await this.getAssociatedWithdrawQueue({ programId, marketId });\n\n    const serumVersion = this.getSerumVersion(version);\n    const serumProgramId = Market.getProgramId(serumVersion);\n    const { publicKey: marketAuthority } = await Market.getAssociatedAuthority({\n      programId: serumProgramId,\n      marketId,\n    });\n\n    return {\n      // base\n      id,\n      baseMint,\n      quoteMint,\n      lpMint,\n      // version\n      version,\n      programId,\n      // keys\n      authority,\n      nonce,\n      baseVault,\n      quoteVault,\n      lpVault,\n      openOrders,\n      targetOrders,\n      withdrawQueue,\n      // market version\n      marketVersion: serumVersion,\n      marketProgramId: serumProgramId,\n      // market keys\n      marketId,\n      marketAuthority,\n    };\n  }\n\n  /* ================= make instruction and transaction ================= */\n  static makeAddLiquidityInstruction(params: LiquidityAddInstructionParams) {\n    const { poolKeys, userKeys, baseAmountIn, quoteAmountIn, fixedSide } = params;\n    const { version } = poolKeys;\n\n    if (version === 4 || version === 5) {\n      const LAYOUT = struct([u8(\"instruction\"), u64(\"baseAmountIn\"), u64(\"quoteAmountIn\"), u64(\"fixedSide\")]);\n      const data = Buffer.alloc(LAYOUT.span);\n      LAYOUT.encode(\n        {\n          instruction: 3,\n          baseAmountIn: parseBigNumberish(baseAmountIn),\n          quoteAmountIn: parseBigNumberish(quoteAmountIn),\n          fixedSide: parseBigNumberish(fixedSide === \"base\" ? 0 : 1),\n        },\n        data,\n      );\n\n      const keys = [\n        // system\n        AccountMetaReadonly(TOKEN_PROGRAM_ID, false),\n        // amm\n        AccountMeta(poolKeys.id, false),\n        AccountMetaReadonly(poolKeys.authority, false),\n        AccountMetaReadonly(poolKeys.openOrders, false),\n        AccountMeta(poolKeys.targetOrders, false),\n        AccountMeta(poolKeys.lpMint, false),\n        AccountMeta(poolKeys.baseVault, false),\n        AccountMeta(poolKeys.quoteVault, false),\n      ];\n\n      if (version === 5) {\n        keys.push(AccountMeta(ModelDataPubkey, false));\n      }\n\n      keys.push(\n        // serum\n        AccountMetaReadonly(poolKeys.marketId, false),\n        // user\n        AccountMeta(userKeys.baseTokenAccount, false),\n        AccountMeta(userKeys.quoteTokenAccount, false),\n        AccountMeta(userKeys.lpTokenAccount, false),\n        AccountMetaReadonly(userKeys.owner, true),\n      );\n\n      return new TransactionInstruction({\n        programId: poolKeys.programId,\n        keys,\n        data,\n      });\n    }\n\n    return logger.throwArgumentError(\"invalid version\", \"poolKeys.version\", version);\n  }\n\n  static async makeAddLiquidityTransaction(params: LiquidityAddTransactionParams) {\n    const { connection, poolKeys, userKeys, amountInA, amountInB, fixedSide, config } = params;\n    const { lpMint } = poolKeys;\n    const { tokenAccounts, owner, payer = owner } = userKeys;\n\n    logger.debug(\"amountInA:\", amountInA);\n    logger.debug(\"amountInB:\", amountInB);\n    logger.assertArgument(\n      !amountInA.isZero() && !amountInB.isZero(),\n      \"amounts must greater than zero\",\n      \"amountInA & amountInB\",\n      {\n        amountInA: amountInA.toFixed(),\n        amountInB: amountInB.toFixed(),\n      },\n    );\n\n    const { bypassAssociatedCheck } = {\n      // default\n      ...{ bypassAssociatedCheck: false },\n      // custom\n      ...config,\n    };\n\n    // handle currency a & b (convert SOL to WSOL)\n    const tokenA = amountInA instanceof TokenAmount ? amountInA.token : Token.WSOL;\n    const tokenB = amountInB instanceof TokenAmount ? amountInB.token : Token.WSOL;\n\n    const tokenAccountA = await this._selectTokenAccount({\n      tokenAccounts,\n      mint: tokenA.mint,\n      owner,\n      config: { associatedOnly: false },\n    });\n    const tokenAccountB = await this._selectTokenAccount({\n      tokenAccounts,\n      mint: tokenB.mint,\n      owner,\n      config: { associatedOnly: false },\n    });\n    logger.assertArgument(\n      !!tokenAccountA || !!tokenAccountB,\n      \"cannot found target token accounts\",\n      \"tokenAccounts\",\n      tokenAccounts,\n    );\n    const lpTokenAccount = await this._selectTokenAccount({\n      tokenAccounts,\n      mint: lpMint,\n      owner,\n    });\n\n    const tokens = [tokenA, tokenB];\n    const _tokenAccounts = [tokenAccountA, tokenAccountB];\n    const rawAmounts = [amountInA.raw, amountInB.raw];\n\n    // handle amount a & b and direction\n    const [sideA] = this._getAmountsSide(amountInA, amountInB, poolKeys);\n    let _fixedSide: AmountSide = \"base\";\n    if (sideA === \"quote\") {\n      // reverse\n      tokens.reverse();\n      _tokenAccounts.reverse();\n      rawAmounts.reverse();\n\n      if (fixedSide === \"a\") _fixedSide = \"quote\";\n      else if (fixedSide === \"b\") _fixedSide = \"base\";\n      else return logger.throwArgumentError(\"invalid fixedSide\", \"fixedSide\", fixedSide);\n    } else if (sideA === \"base\") {\n      if (fixedSide === \"a\") _fixedSide = \"base\";\n      else if (fixedSide === \"b\") _fixedSide = \"quote\";\n      else return logger.throwArgumentError(\"invalid fixedSide\", \"fixedSide\", fixedSide);\n    } else return logger.throwArgumentError(\"invalid fixedSide\", \"fixedSide\", fixedSide);\n\n    const [baseToken, quoteToken] = tokens;\n    const [baseTokenAccount, quoteTokenAccount] = _tokenAccounts;\n    const [baseAmountRaw, quoteAmountRaw] = rawAmounts;\n\n    const frontInstructions: TransactionInstruction[] = [];\n    const endInstructions: TransactionInstruction[] = [];\n    const signers: Signer[] = [];\n\n    const _baseTokenAccount = await this._handleTokenAccount({\n      connection,\n      side: \"in\",\n      amount: baseAmountRaw,\n      mint: baseToken.mint,\n      tokenAccount: baseTokenAccount,\n      owner,\n      payer,\n      frontInstructions,\n      endInstructions,\n      signers,\n      bypassAssociatedCheck,\n    });\n    const _quoteTokenAccount = await this._handleTokenAccount({\n      connection,\n      side: \"in\",\n      amount: quoteAmountRaw,\n      mint: quoteToken.mint,\n      tokenAccount: quoteTokenAccount,\n      owner,\n      payer,\n      frontInstructions,\n      endInstructions,\n      signers,\n      bypassAssociatedCheck,\n    });\n    const _lpTokenAccount = await this._handleTokenAccount({\n      connection,\n      side: \"out\",\n      amount: 0,\n      mint: lpMint,\n      tokenAccount: lpTokenAccount,\n      owner,\n      payer,\n      frontInstructions,\n      endInstructions,\n      signers,\n      bypassAssociatedCheck,\n    });\n\n    frontInstructions.push(\n      this.makeAddLiquidityInstruction({\n        poolKeys,\n        userKeys: {\n          baseTokenAccount: _baseTokenAccount,\n          quoteTokenAccount: _quoteTokenAccount,\n          lpTokenAccount: _lpTokenAccount,\n          owner,\n        },\n        baseAmountIn: baseAmountRaw,\n        quoteAmountIn: quoteAmountRaw,\n        fixedSide: _fixedSide,\n      }),\n    );\n\n    const transaction = new Transaction();\n    transaction.add(...[...frontInstructions, ...endInstructions]);\n\n    return { transaction, signers };\n  }\n\n  static makeRemoveLiquidityInstruction(params: LiquidityRemoveInstructionParams) {\n    const { poolKeys, userKeys, amountIn } = params;\n    const { version } = poolKeys;\n\n    if (version === 4 || version === 5) {\n      const LAYOUT = struct([u8(\"instruction\"), u64(\"amountIn\")]);\n      const data = Buffer.alloc(LAYOUT.span);\n      LAYOUT.encode(\n        {\n          instruction: 4,\n          amountIn: parseBigNumberish(amountIn),\n        },\n        data,\n      );\n\n      const keys = [\n        // system\n        AccountMetaReadonly(TOKEN_PROGRAM_ID, false),\n        // amm\n        AccountMeta(poolKeys.id, false),\n        AccountMetaReadonly(poolKeys.authority, false),\n        AccountMeta(poolKeys.openOrders, false),\n        AccountMeta(poolKeys.targetOrders, false),\n        AccountMeta(poolKeys.lpMint, false),\n        AccountMeta(poolKeys.baseVault, false),\n        AccountMeta(poolKeys.quoteVault, false),\n      ];\n\n      if (version === 5) {\n        keys.push(AccountMeta(ModelDataPubkey, false));\n      } else {\n        keys.push(AccountMeta(poolKeys.withdrawQueue, false));\n        keys.push(AccountMeta(poolKeys.lpVault, false));\n      }\n\n      keys.push(\n        // serum\n        AccountMetaReadonly(poolKeys.marketProgramId, false),\n        AccountMeta(poolKeys.marketId, false),\n        AccountMeta(poolKeys.marketBaseVault, false),\n        AccountMeta(poolKeys.marketQuoteVault, false),\n        AccountMetaReadonly(poolKeys.marketAuthority, false),\n        // user\n        AccountMeta(userKeys.lpTokenAccount, false),\n        AccountMeta(userKeys.baseTokenAccount, false),\n        AccountMeta(userKeys.quoteTokenAccount, false),\n        AccountMetaReadonly(userKeys.owner, true),\n        // serum orderbook\n        AccountMeta(poolKeys.marketEventQueue, false),\n        AccountMeta(poolKeys.marketBids, false),\n        AccountMeta(poolKeys.marketAsks, false),\n      );\n\n      return new TransactionInstruction({\n        programId: poolKeys.programId,\n        keys,\n        data,\n      });\n    }\n\n    return logger.throwArgumentError(\"invalid version\", \"poolKeys.version\", version);\n  }\n\n  static async makeRemoveLiquidityTransaction(params: LiquidityRemoveTransactionParams) {\n    const { connection, poolKeys, userKeys, amountIn, config } = params;\n    const { baseMint, quoteMint, lpMint } = poolKeys;\n    const { tokenAccounts, owner, payer = owner } = userKeys;\n\n    logger.debug(\"amountIn:\", amountIn);\n    logger.assertArgument(!amountIn.isZero(), \"amount must greater than zero\", \"amountIn\", amountIn.toFixed());\n    logger.assertArgument(\n      amountIn instanceof TokenAmount && amountIn.token.mint.equals(lpMint),\n      \"amountIn's token not match lpMint\",\n      \"amountIn\",\n      amountIn,\n    );\n    const lpTokenAccount = await this._selectTokenAccount({\n      tokenAccounts,\n      mint: lpMint,\n      owner,\n      config: { associatedOnly: false },\n    });\n    if (!lpTokenAccount)\n      return logger.throwArgumentError(\"cannot found lpTokenAccount\", \"tokenAccounts\", tokenAccounts);\n\n    const baseTokenAccount = await this._selectTokenAccount({\n      tokenAccounts,\n      mint: baseMint,\n      owner,\n    });\n    const quoteTokenAccount = await this._selectTokenAccount({\n      tokenAccounts,\n      mint: quoteMint,\n      owner,\n    });\n\n    const { bypassAssociatedCheck } = {\n      // default\n      ...{ bypassAssociatedCheck: false },\n      // custom\n      ...config,\n    };\n\n    const frontInstructions: TransactionInstruction[] = [];\n    const endInstructions: TransactionInstruction[] = [];\n    const signers: Signer[] = [];\n\n    const _lpTokenAccount = lpTokenAccount;\n    const _baseTokenAccount = await this._handleTokenAccount({\n      connection,\n      side: \"out\",\n      amount: 0,\n      mint: baseMint,\n      tokenAccount: baseTokenAccount,\n      owner,\n      payer,\n      frontInstructions,\n      endInstructions,\n      signers,\n      bypassAssociatedCheck,\n    });\n    const _quoteTokenAccount = await this._handleTokenAccount({\n      connection,\n      side: \"out\",\n      amount: 0,\n      mint: quoteMint,\n      tokenAccount: quoteTokenAccount,\n      owner,\n      payer,\n      frontInstructions,\n      endInstructions,\n      signers,\n      bypassAssociatedCheck,\n    });\n\n    frontInstructions.push(\n      this.makeRemoveLiquidityInstruction({\n        poolKeys,\n        userKeys: {\n          lpTokenAccount: _lpTokenAccount,\n          baseTokenAccount: _baseTokenAccount,\n          quoteTokenAccount: _quoteTokenAccount,\n          owner,\n        },\n        amountIn: amountIn.raw,\n      }),\n    );\n\n    const transaction = new Transaction();\n    transaction.add(...[...frontInstructions, ...endInstructions]);\n\n    return { transaction, signers };\n  }\n\n  static makeSwapInstruction(params: LiquiditySwapInstructionParams) {\n    const { poolKeys, userKeys, amountIn, amountOut, fixedSide } = params;\n    const { version } = poolKeys;\n\n    if (version === 4 || version === 5) {\n      if (fixedSide === \"in\") {\n        return this.makeSwapFixedInInstruction(\n          {\n            poolKeys,\n            userKeys,\n            amountIn,\n            minAmountOut: amountOut,\n          },\n          version,\n        );\n      } else if (fixedSide === \"out\") {\n        return this.makeSwapFixedOutInstruction(\n          {\n            poolKeys,\n            userKeys,\n            maxAmountIn: amountIn,\n            amountOut,\n          },\n          version,\n        );\n      }\n\n      return logger.throwArgumentError(\"invalid params\", \"params\", params);\n    }\n\n    return logger.throwArgumentError(\"invalid version\", \"poolKeys.version\", version);\n  }\n\n  static makeSwapFixedInInstruction(\n    { poolKeys, userKeys, amountIn, minAmountOut }: LiquiditySwapFixedInInstructionParamsV4,\n    version: number,\n  ) {\n    const LAYOUT = struct([u8(\"instruction\"), u64(\"amountIn\"), u64(\"minAmountOut\")]);\n    const data = Buffer.alloc(LAYOUT.span);\n    LAYOUT.encode(\n      {\n        instruction: 9,\n        amountIn: parseBigNumberish(amountIn),\n        minAmountOut: parseBigNumberish(minAmountOut),\n      },\n      data,\n    );\n\n    const keys = [\n      // system\n      AccountMetaReadonly(TOKEN_PROGRAM_ID, false),\n      // amm\n      AccountMeta(poolKeys.id, false),\n      AccountMetaReadonly(poolKeys.authority, false),\n      AccountMeta(poolKeys.openOrders, false),\n    ];\n\n    if (version === 4) {\n      keys.push(AccountMeta(poolKeys.targetOrders, false));\n    }\n\n    keys.push(AccountMeta(poolKeys.baseVault, false), AccountMeta(poolKeys.quoteVault, false));\n\n    if (version === 5) {\n      keys.push(AccountMeta(ModelDataPubkey, false));\n    }\n\n    keys.push(\n      // serum\n      AccountMetaReadonly(poolKeys.marketProgramId, false),\n      AccountMeta(poolKeys.marketId, false),\n      AccountMeta(poolKeys.marketBids, false),\n      AccountMeta(poolKeys.marketAsks, false),\n      AccountMeta(poolKeys.marketEventQueue, false),\n      AccountMeta(poolKeys.marketBaseVault, false),\n      AccountMeta(poolKeys.marketQuoteVault, false),\n      AccountMetaReadonly(poolKeys.marketAuthority, false),\n      // user\n      AccountMeta(userKeys.tokenAccountIn, false),\n      AccountMeta(userKeys.tokenAccountOut, false),\n      AccountMetaReadonly(userKeys.owner, true),\n    );\n\n    return new TransactionInstruction({\n      programId: poolKeys.programId,\n      keys,\n      data,\n    });\n  }\n\n  static makeSwapFixedOutInstruction(\n    { poolKeys, userKeys, maxAmountIn, amountOut }: LiquiditySwapFixedOutInstructionParamsV4,\n    version: number,\n  ) {\n    const LAYOUT = struct([u8(\"instruction\"), u64(\"maxAmountIn\"), u64(\"amountOut\")]);\n    const data = Buffer.alloc(LAYOUT.span);\n    LAYOUT.encode(\n      {\n        instruction: 11,\n        maxAmountIn: parseBigNumberish(maxAmountIn),\n        amountOut: parseBigNumberish(amountOut),\n      },\n      data,\n    );\n\n    const keys = [\n      // system\n      AccountMetaReadonly(TOKEN_PROGRAM_ID, false),\n      // amm\n      AccountMeta(poolKeys.id, false),\n      AccountMetaReadonly(poolKeys.authority, false),\n      AccountMeta(poolKeys.openOrders, false),\n      AccountMeta(poolKeys.targetOrders, false),\n      AccountMeta(poolKeys.baseVault, false),\n      AccountMeta(poolKeys.quoteVault, false),\n    ];\n\n    if (version === 5) {\n      keys.push(AccountMeta(ModelDataPubkey, false));\n    }\n\n    keys.push(\n      // serum\n      AccountMetaReadonly(poolKeys.marketProgramId, false),\n      AccountMeta(poolKeys.marketId, false),\n      AccountMeta(poolKeys.marketBids, false),\n      AccountMeta(poolKeys.marketAsks, false),\n      AccountMeta(poolKeys.marketEventQueue, false),\n      AccountMeta(poolKeys.marketBaseVault, false),\n      AccountMeta(poolKeys.marketQuoteVault, false),\n      AccountMetaReadonly(poolKeys.marketAuthority, false),\n      // user\n      AccountMeta(userKeys.tokenAccountIn, false),\n      AccountMeta(userKeys.tokenAccountOut, false),\n      AccountMetaReadonly(userKeys.owner, true),\n    );\n\n    return new TransactionInstruction({\n      programId: poolKeys.programId,\n      keys,\n      data,\n    });\n  }\n\n  static async makeSwapTransaction(params: LiquiditySwapTransactionParams) {\n    const { connection, poolKeys, userKeys, amountIn, amountOut, fixedSide, config } = params;\n    const { tokenAccounts, owner, payer = owner } = userKeys;\n\n    logger.debug(\"amountIn:\", amountIn);\n    logger.debug(\"amountOut:\", amountOut);\n    logger.assertArgument(\n      !amountIn.isZero() && !amountOut.isZero(),\n      \"amounts must greater than zero\",\n      \"currencyAmounts\",\n      {\n        amountIn: amountIn.toFixed(),\n        amountOut: amountOut.toFixed(),\n      },\n    );\n\n    const { bypassAssociatedCheck } = {\n      // default\n      ...{ bypassAssociatedCheck: false },\n      // custom\n      ...config,\n    };\n\n    // handle currency in & out (convert SOL to WSOL)\n    const tokenIn = amountIn instanceof TokenAmount ? amountIn.token : Token.WSOL;\n    const tokenOut = amountOut instanceof TokenAmount ? amountOut.token : Token.WSOL;\n\n    const tokenAccountIn = await this._selectTokenAccount({\n      tokenAccounts,\n      mint: tokenIn.mint,\n      owner,\n      config: { associatedOnly: false },\n    });\n    const tokenAccountOut = await this._selectTokenAccount({\n      tokenAccounts,\n      mint: tokenOut.mint,\n      owner,\n    });\n\n    const [amountInRaw, amountOutRaw] = [amountIn.raw, amountOut.raw];\n\n    const frontInstructions: TransactionInstruction[] = [];\n    const endInstructions: TransactionInstruction[] = [];\n    const signers: Signer[] = [];\n\n    const _tokenAccountIn = await this._handleTokenAccount({\n      connection,\n      side: \"in\",\n      amount: amountInRaw,\n      mint: tokenIn.mint,\n      tokenAccount: tokenAccountIn,\n      owner,\n      payer,\n      frontInstructions,\n      endInstructions,\n      signers,\n      bypassAssociatedCheck,\n    });\n    const _tokenAccountOut = await this._handleTokenAccount({\n      connection,\n      side: \"out\",\n      amount: 0,\n      mint: tokenOut.mint,\n      tokenAccount: tokenAccountOut,\n      owner,\n      payer,\n      frontInstructions,\n      endInstructions,\n      signers,\n      bypassAssociatedCheck,\n    });\n\n    frontInstructions.push(\n      this.makeSwapInstruction({\n        poolKeys,\n        userKeys: {\n          tokenAccountIn: _tokenAccountIn,\n          tokenAccountOut: _tokenAccountOut,\n          owner,\n        },\n        amountIn: amountInRaw,\n        amountOut: amountOutRaw,\n        fixedSide,\n      }),\n    );\n\n    const transaction = new Transaction();\n    transaction.add(...[...frontInstructions, ...endInstructions]);\n\n    return { transaction, signers };\n  }\n\n  static makeCreatePoolInstruction(params: LiquidityCreatePoolInstructionParams) {\n    const { poolKeys } = params;\n    const { version } = poolKeys;\n\n    if (version === 4) {\n      return this.makeCreatePoolInstructionV4(params);\n    }\n\n    return logger.throwArgumentError(\"invalid version\", \"poolKeys.version\", version);\n  }\n\n  static makeCreatePoolInstructionV4({ poolKeys, userKeys }: LiquidityCreatePoolInstructionParamsV4) {\n    const LAYOUT = struct([u8(\"instruction\"), u8(\"nonce\")]);\n    const data = Buffer.alloc(LAYOUT.span);\n    LAYOUT.encode(\n      {\n        instruction: 10,\n        nonce: poolKeys.nonce,\n      },\n      data,\n    );\n\n    const keys = [\n      // system\n      AccountMetaReadonly(TOKEN_PROGRAM_ID, false),\n      AccountMetaReadonly(SYSTEM_PROGRAM_ID, false),\n      AccountMetaReadonly(SYSVAR_RENT_PUBKEY, false),\n      // amm\n      AccountMeta(poolKeys.targetOrders, false),\n      AccountMeta(poolKeys.withdrawQueue, false),\n      AccountMetaReadonly(poolKeys.authority, false),\n      AccountMeta(poolKeys.lpMint, false),\n      AccountMetaReadonly(poolKeys.baseMint, false),\n      AccountMetaReadonly(poolKeys.quoteMint, false),\n      AccountMeta(poolKeys.baseVault, false),\n      AccountMeta(poolKeys.quoteVault, false),\n      AccountMeta(poolKeys.lpVault, false),\n      // serum\n      AccountMetaReadonly(poolKeys.marketId, false),\n      // user\n      AccountMeta(userKeys.payer, true),\n    ];\n\n    return new TransactionInstruction({\n      programId: poolKeys.programId,\n      keys,\n      data,\n    });\n  }\n\n  static makeCreatePoolTransaction(params: LiquidityCreatePoolTransactionParams) {\n    const transaction = new Transaction();\n    const signers: Signer[] = [];\n\n    transaction.add(this.makeCreatePoolInstruction(params));\n\n    return { transaction, signers };\n  }\n\n  static makeInitPoolInstruction(params: LiquidityInitPoolInstructionParams) {\n    const { poolKeys } = params;\n    const { version } = poolKeys;\n\n    if (version === 4) {\n      return this.makeInitPoolInstructionV4(params);\n    }\n\n    return logger.throwArgumentError(\"invalid version\", \"poolKeys.version\", version);\n  }\n\n  static makeInitPoolInstructionV4({ poolKeys, userKeys, startTime }: LiquidityInitPoolInstructionParamsV4) {\n    const LAYOUT = struct([u8(\"instruction\"), u8(\"nonce\"), u64(\"startTime\")]);\n    const data = Buffer.alloc(LAYOUT.span);\n    LAYOUT.encode(\n      {\n        instruction: 0,\n        nonce: poolKeys.nonce,\n        startTime: parseBigNumberish(startTime),\n      },\n      data,\n    );\n\n    const keys = [\n      // system\n      AccountMetaReadonly(TOKEN_PROGRAM_ID, false),\n      AccountMetaReadonly(SYSTEM_PROGRAM_ID, false),\n      AccountMetaReadonly(SYSVAR_RENT_PUBKEY, false),\n      // amm\n      AccountMeta(poolKeys.id, false),\n      AccountMetaReadonly(poolKeys.authority, false),\n      AccountMeta(poolKeys.openOrders, false),\n      AccountMeta(poolKeys.lpMint, false),\n      AccountMetaReadonly(poolKeys.baseMint, false),\n      AccountMetaReadonly(poolKeys.quoteMint, false),\n      AccountMetaReadonly(poolKeys.baseVault, false),\n      AccountMetaReadonly(poolKeys.quoteVault, false),\n      AccountMeta(poolKeys.withdrawQueue, false),\n      AccountMeta(poolKeys.targetOrders, false),\n      AccountMeta(userKeys.lpTokenAccount, false),\n      AccountMetaReadonly(poolKeys.lpVault, false),\n      // serum\n      AccountMetaReadonly(poolKeys.marketProgramId, false),\n      AccountMetaReadonly(poolKeys.marketId, false),\n      // user\n      AccountMeta(userKeys.payer, true),\n    ];\n\n    return new TransactionInstruction({\n      programId: poolKeys.programId,\n      keys,\n      data,\n    });\n  }\n\n  static async makeInitPoolTransaction(params: LiquidityInitPoolTransactionParams) {\n    const { connection, poolKeys, userKeys, baseAmount, quoteAmount, startTime = 0, config } = params;\n    const { baseMint, quoteMint, lpMint, baseVault, quoteVault } = poolKeys;\n    const { tokenAccounts, owner, payer = owner } = userKeys;\n\n    const { bypassAssociatedCheck } = {\n      // default\n      ...{ bypassAssociatedCheck: false },\n      // custom\n      ...config,\n    };\n\n    const baseTokenAccount = await this._selectTokenAccount({\n      tokenAccounts,\n      mint: baseMint,\n      owner,\n      config: { associatedOnly: false },\n    });\n    const quoteTokenAccount = await this._selectTokenAccount({\n      tokenAccounts,\n      mint: quoteMint,\n      owner,\n      config: { associatedOnly: false },\n    });\n    logger.assertArgument(\n      !!baseTokenAccount || !!quoteTokenAccount,\n      \"cannot found target token accounts\",\n      \"tokenAccounts\",\n      tokenAccounts,\n    );\n    const lpTokenAccount = await this._selectTokenAccount({\n      tokenAccounts,\n      mint: lpMint,\n      owner,\n    });\n\n    const frontInstructions: TransactionInstruction[] = [];\n    const endInstructions: TransactionInstruction[] = [];\n    const signers: Signer[] = [];\n\n    const _baseTokenAccount = await this._handleTokenAccount({\n      connection,\n      side: \"in\",\n      amount: baseAmount.raw,\n      mint: baseMint,\n      tokenAccount: baseTokenAccount,\n      owner,\n      payer,\n      frontInstructions,\n      endInstructions,\n      signers,\n      bypassAssociatedCheck,\n    });\n    const _quoteTokenAccount = await this._handleTokenAccount({\n      connection,\n      side: \"in\",\n      amount: quoteAmount.raw,\n      mint: quoteMint,\n      tokenAccount: quoteTokenAccount,\n      owner,\n      payer,\n      frontInstructions,\n      endInstructions,\n      signers,\n      bypassAssociatedCheck,\n    });\n    const _lpTokenAccount = await this._handleTokenAccount({\n      connection,\n      side: \"out\",\n      amount: 0,\n      mint: lpMint,\n      tokenAccount: lpTokenAccount,\n      owner,\n      payer,\n      frontInstructions,\n      endInstructions,\n      signers,\n      bypassAssociatedCheck,\n    });\n\n    frontInstructions.push(\n      Spl.makeTransferInstruction({\n        source: _baseTokenAccount,\n        destination: baseVault,\n        owner,\n        amount: baseAmount.raw,\n      }),\n    );\n    frontInstructions.push(\n      Spl.makeTransferInstruction({\n        source: _quoteTokenAccount,\n        destination: quoteVault,\n        owner,\n        amount: quoteAmount.raw,\n      }),\n    );\n    frontInstructions.push(\n      this.makeInitPoolInstruction({\n        poolKeys,\n        userKeys: {\n          lpTokenAccount: _lpTokenAccount,\n          payer,\n        },\n        startTime,\n      }),\n    );\n\n    const transaction = new Transaction();\n    transaction.add(...[...frontInstructions, ...endInstructions]);\n\n    return { transaction, signers };\n  }\n\n  static makeSimulatePoolInfoInstruction({ poolKeys }: { poolKeys: LiquidityPoolKeys }) {\n    const LAYOUT = struct([u8(\"instruction\"), u8(\"simulateType\")]);\n    const data = Buffer.alloc(LAYOUT.span);\n    LAYOUT.encode(\n      {\n        instruction: 12,\n        simulateType: 0,\n      },\n      data,\n    );\n\n    const keys = [\n      // amm\n      AccountMetaReadonly(poolKeys.id, false),\n      AccountMetaReadonly(poolKeys.authority, false),\n      AccountMetaReadonly(poolKeys.openOrders, false),\n      AccountMetaReadonly(poolKeys.baseVault, false),\n      AccountMetaReadonly(poolKeys.quoteVault, false),\n      AccountMetaReadonly(poolKeys.lpMint, false),\n      // serum\n      AccountMetaReadonly(poolKeys.marketId, false),\n    ];\n\n    return new TransactionInstruction({\n      programId: poolKeys.programId,\n      keys,\n      data,\n    });\n  }\n\n  static isV4(lsl: any): lsl is LiquidityStateV4 {\n    return lsl.withdrawQueue !== undefined;\n  }\n\n  /* ================= fetch data ================= */\n  /**\n   * Fetch all pools keys from on-chain data\n   */\n  static async fetchAllPoolKeys(\n    connection: Connection,\n    config?: GetMultipleAccountsInfoConfig,\n  ): Promise<LiquidityPoolKeys[]> {\n    // supported versions\n    const supported = Object.keys(LIQUIDITY_VERSION_TO_STATE_LAYOUT).map((v) => {\n      const version = Number(v);\n      const serumVersion = this.getSerumVersion(version);\n      const serumProgramId = Market.getProgramId(serumVersion);\n      return {\n        version,\n        programId: this.getProgramId(version),\n        serumVersion,\n        serumProgramId,\n        stateLayout: this.getStateLayout(version),\n      };\n    });\n\n    let poolsAccountInfo: {\n      pubkey: PublicKey;\n      account: AccountInfo<Buffer>;\n\n      version: number;\n      programId: PublicKey;\n      serumVersion: number;\n      serumProgramId: PublicKey;\n      stateLayout: LiquidityStateLayout;\n    }[][] = [];\n    try {\n      poolsAccountInfo = await Promise.all(\n        supported.map(({ programId, version, serumVersion, serumProgramId, stateLayout }) =>\n          connection\n            .getProgramAccounts(programId, {\n              filters: [{ dataSize: stateLayout.span }],\n            })\n            .then((accounts) => {\n              return accounts.map((info) => {\n                return {\n                  ...info,\n                  ...{ version, programId, serumVersion, serumProgramId, stateLayout },\n                };\n              });\n            }),\n        ),\n      );\n    } catch (error) {\n      if (error instanceof Error) {\n        return logger.throwError(\"failed to fetch all liquidity pools\", Logger.errors.RPC_ERROR, {\n          message: error.message,\n        });\n      }\n    }\n\n    const flatPoolsAccountInfo = poolsAccountInfo.flat();\n    // temp pool keys without market keys\n    const tempPoolsKeys: Omit<LiquidityAssociatedPoolKeys, \"nonce\">[] = [];\n\n    for (const {\n      pubkey,\n      account: accountInfo,\n      version,\n      programId,\n      serumVersion,\n      serumProgramId,\n      stateLayout: LIQUIDITY_STATE_LAYOUT,\n    } of flatPoolsAccountInfo) {\n      logger.assertArgument(!!accountInfo, \"empty state account info\", \"pool.id\", pubkey);\n\n      const { data } = accountInfo;\n      logger.assertArgument(\n        data.length === LIQUIDITY_STATE_LAYOUT.span,\n        \"invalid state data length\",\n        \"pool.id\",\n        pubkey,\n      );\n\n      const fields = LIQUIDITY_STATE_LAYOUT.decode(data);\n      const { status, nonce, baseMint, quoteMint, lpMint, openOrders, targetOrders, baseVault, quoteVault, marketId } =\n        fields;\n\n      let withdrawQueue, lpVault;\n      if (this.isV4(fields)) {\n        withdrawQueue = fields.withdrawQueue;\n        lpVault = fields.lpVault;\n      } else {\n        withdrawQueue = PublicKey.default;\n        lpVault = PublicKey.default;\n      }\n      // uninitialized\n      if (status.isZero()) {\n        continue;\n      }\n\n      const associatedPoolKeys = await Liquidity.getAssociatedPoolKeys({\n        version,\n        baseMint,\n        quoteMint,\n        marketId,\n      });\n      // double check keys with on-chain data\n      // logger.assert(Number(nonce) === associatedPoolKeys.nonce, \"invalid nonce\");\n\n      tempPoolsKeys.push({\n        id: pubkey,\n        baseMint,\n        quoteMint,\n        lpMint,\n        version,\n        programId,\n\n        authority: associatedPoolKeys.authority,\n        openOrders,\n        targetOrders,\n        baseVault,\n        quoteVault,\n        withdrawQueue,\n        lpVault,\n        marketVersion: serumVersion,\n        marketProgramId: serumProgramId,\n        marketId,\n        marketAuthority: associatedPoolKeys.marketAuthority,\n      });\n    }\n\n    // fetch market keys\n    let marketsInfo: (AccountInfo<Buffer> | null)[] = [];\n    try {\n      marketsInfo = await getMultipleAccountsInfo(\n        connection,\n        tempPoolsKeys.map(({ marketId }) => marketId),\n        config,\n      );\n    } catch (error) {\n      if (error instanceof Error) {\n        return logger.throwError(\"failed to fetch markets\", Logger.errors.RPC_ERROR, {\n          message: error.message,\n        });\n      }\n    }\n\n    logger.assertArgument(\n      marketsInfo.length === tempPoolsKeys.length,\n      \"markets count not equal to pools\",\n      \"markets.length\",\n      marketsInfo.length,\n    );\n\n    const poolsKeys: LiquidityPoolKeys[] = [];\n\n    for (const index in marketsInfo) {\n      const poolKeys = tempPoolsKeys[index];\n      const marketInfo = marketsInfo[index];\n\n      const { id, marketVersion } = poolKeys;\n\n      if (!marketInfo) {\n        return logger.throwArgumentError(\"empty market account info\", \"pool.id\", id);\n      }\n\n      const { data } = marketInfo;\n      const { state: MARKET_STATE_LAYOUT } = Market.getLayouts(marketVersion);\n      logger.assertArgument(data.length === MARKET_STATE_LAYOUT.span, \"invalid market data length\", \"pool.id\", id);\n\n      const {\n        baseVault: marketBaseVault,\n        quoteVault: marketQuoteVault,\n        bids: marketBids,\n        asks: marketAsks,\n        eventQueue: marketEventQueue,\n      } = MARKET_STATE_LAYOUT.decode(data);\n\n      poolsKeys.push({\n        ...poolKeys,\n        ...{\n          marketBaseVault,\n          marketQuoteVault,\n          marketBids,\n          marketAsks,\n          marketEventQueue,\n        },\n      });\n    }\n\n    return poolsKeys;\n  }\n\n  /**\n   * Fetch liquidity pool's info\n   */\n  static async fetchInfo({ connection, poolKeys }: LiquidityFetchInfoParams) {\n    const info = await this.fetchMultipleInfo({ connection, pools: [poolKeys] });\n\n    logger.assertArgument(\n      info.length === 1,\n      `fetchInfo failed, ${info.length} pools found`,\n      \"poolKeys.id\",\n      poolKeys.id,\n    );\n\n    return info[0];\n  }\n\n  /**\n   * Fetch multiple info of liquidity pools\n   */\n  static async fetchMultipleInfo({\n    connection,\n    pools,\n    config,\n  }: LiquidityFetchMultipleInfoParams): Promise<LiquidityPoolInfo[]> {\n    await initStableModelLayout(connection);\n\n    const instructions = pools.map((pool) => this.makeSimulatePoolInfoInstruction({ poolKeys: pool }));\n\n    const logs = await simulateMultipleInstruction(connection, instructions, \"GetPoolData\");\n\n    const poolsInfo = logs.map((log) => {\n      const json = parseSimulateLogToJson(log, \"GetPoolData\");\n\n      const status = new BN(parseSimulateValue(json, \"status\"));\n      const baseDecimals = Number(parseSimulateValue(json, \"coin_decimals\"));\n      const quoteDecimals = Number(parseSimulateValue(json, \"pc_decimals\"));\n      const lpDecimals = Number(parseSimulateValue(json, \"lp_decimals\"));\n      const baseReserve = new BN(parseSimulateValue(json, \"pool_coin_amount\"));\n      const quoteReserve = new BN(parseSimulateValue(json, \"pool_pc_amount\"));\n      const lpSupply = new BN(parseSimulateValue(json, \"pool_lp_supply\"));\n      // TODO fix it when split stable\n      let startTime = \"0\";\n      try {\n        startTime = parseSimulateValue(json, \"pool_open_time\");\n      } catch (error) {\n        //\n      }\n\n      return {\n        status,\n        baseDecimals,\n        quoteDecimals,\n        lpDecimals,\n        baseReserve,\n        quoteReserve,\n        lpSupply,\n        startTime: new BN(startTime),\n      };\n    });\n\n    return poolsInfo;\n  }\n\n  /* ================= compute data ================= */\n  static getEnabledFeatures(poolInfo: LiquidityPoolInfo) {\n    const { status } = poolInfo;\n    const _status = status.toNumber();\n\n    if (_status === LiquidityPoolStatus.Uninitialized)\n      return {\n        swap: false,\n        addLiquidity: false,\n        removeLiquidity: false,\n      };\n    else if (_status === LiquidityPoolStatus.Initialized)\n      return {\n        swap: true,\n        addLiquidity: true,\n        removeLiquidity: true,\n      };\n    else if (_status === LiquidityPoolStatus.Disabled)\n      return {\n        swap: false,\n        addLiquidity: false,\n        removeLiquidity: false,\n      };\n    else if (_status === LiquidityPoolStatus.RemoveLiquidityOnly)\n      return {\n        swap: false,\n        addLiquidity: false,\n        removeLiquidity: true,\n      };\n    else if (_status === LiquidityPoolStatus.LiquidityOnly)\n      return {\n        swap: false,\n        addLiquidity: true,\n        removeLiquidity: true,\n      };\n    else if (_status === LiquidityPoolStatus.OrderBook)\n      return {\n        swap: false,\n        addLiquidity: true,\n        removeLiquidity: true,\n      };\n    else if (_status === LiquidityPoolStatus.Swap)\n      return {\n        swap: true,\n        addLiquidity: true,\n        removeLiquidity: true,\n      };\n    else if (_status === LiquidityPoolStatus.WaitingForStart) {\n      // handle start time\n      const { startTime } = poolInfo;\n      if (Date.now() / 1000 < startTime.toNumber())\n        return {\n          swap: false,\n          addLiquidity: true,\n          removeLiquidity: true,\n        };\n\n      return {\n        swap: true,\n        addLiquidity: true,\n        removeLiquidity: true,\n      };\n    } else\n      return {\n        swap: false,\n        addLiquidity: false,\n        removeLiquidity: false,\n      };\n  }\n\n  static includesToken(token: Token, poolKeys: LiquidityPoolKeys) {\n    const { baseMint, quoteMint } = poolKeys;\n\n    return token.mint.equals(baseMint) || token.mint.equals(quoteMint);\n  }\n\n  /**\n   * Get token side of liquidity pool\n   * @param token - the token provided\n   * @param poolKeys - the pool keys\n   * @returns token side is `base` or `quote`\n   */\n  static _getTokenSide(token: Token, poolKeys: LiquidityPoolKeys): AmountSide {\n    const { baseMint, quoteMint } = poolKeys;\n\n    if (token.mint.equals(baseMint)) return \"base\";\n    else if (token.mint.equals(quoteMint)) return \"quote\";\n    else\n      return logger.throwArgumentError(\"token not match with pool\", \"params\", {\n        token: token.mint,\n        baseMint,\n        quoteMint,\n      });\n  }\n\n  /**\n   * Get tokens side of liquidity pool\n   * @param tokenA - the token provided\n   * @param tokenB - the token provided\n   * @param poolKeys - the pool keys\n   * @returns tokens side array\n   */\n  static _getTokensSide(tokenA: Token, tokenB: Token, poolKeys: LiquidityPoolKeys): AmountSide[] {\n    const { baseMint, quoteMint } = poolKeys;\n\n    const sideA = this._getTokenSide(tokenA, poolKeys);\n    const sideB = this._getTokenSide(tokenB, poolKeys);\n\n    logger.assertArgument(sideA !== sideB, \"tokens not match with pool\", \"params\", {\n      tokenA: tokenA.mint,\n      tokenB: tokenB.mint,\n      baseMint,\n      quoteMint,\n    });\n    return [sideA, sideB];\n  }\n\n  /**\n   * Get currency amount side of liquidity pool\n   * @param amount - the currency amount provided\n   * @param poolKeys - the pool keys\n   * @returns currency amount side is `base` or `quote`\n   */\n  static _getAmountSide(amount: CurrencyAmount | TokenAmount, poolKeys: LiquidityPoolKeys): AmountSide {\n    const token = amount instanceof TokenAmount ? amount.token : Token.WSOL;\n\n    return this._getTokenSide(token, poolKeys);\n  }\n\n  /**\n   * Get currencies amount side of liquidity pool\n   * @param amountA - the currency amount provided\n   * @param amountB - the currency amount provided\n   * @param poolKeys - the pool keys\n   * @returns currencies amount side array\n   */\n  static _getAmountsSide(\n    amountA: CurrencyAmount | TokenAmount,\n    amountB: CurrencyAmount | TokenAmount,\n    poolKeys: LiquidityPoolKeys,\n  ): AmountSide[] {\n    const tokenA = amountA instanceof TokenAmount ? amountA.token : Token.WSOL;\n    const tokenB = amountB instanceof TokenAmount ? amountB.token : Token.WSOL;\n\n    return this._getTokensSide(tokenA, tokenB, poolKeys);\n  }\n\n  /**\n   * Compute the another currency amount of add liquidity\n   *\n   * @param params - {@link LiquidityComputeAnotherAmountParams}\n   *\n   * @returns\n   * anotherCurrencyAmount - currency amount without slippage\n   * @returns\n   * maxAnotherCurrencyAmount - currency amount with slippage\n   *\n   * @returns {@link CurrencyAmount}\n   *\n   * @example\n   * ```\n   * Liquidity.computeAnotherAmount({\n   *   // 1%\n   *   slippage: new Percent(1, 100)\n   * })\n   * ```\n   */\n  static computeAnotherAmount({\n    poolKeys,\n    poolInfo,\n    amount,\n    anotherCurrency,\n    slippage,\n  }: LiquidityComputeAnotherAmountParams):\n    | { anotherAmount: CurrencyAmount; maxAnotherAmount: CurrencyAmount }\n    | { anotherAmount: TokenAmount; maxAnotherAmount: TokenAmount } {\n    const { baseReserve, quoteReserve } = poolInfo;\n    logger.debug(\"baseReserve:\", baseReserve.toString());\n    logger.debug(\"quoteReserve:\", quoteReserve.toString());\n\n    const currencyIn = amount instanceof TokenAmount ? amount.token : amount.currency;\n    logger.debug(\"currencyIn:\", currencyIn);\n    logger.debug(\"amount:\", amount.toFixed());\n    logger.debug(\"anotherCurrency:\", anotherCurrency);\n    logger.debug(\"slippage:\", `${slippage.toSignificant()}%`);\n\n    // input is fixed\n    const input = this._getAmountSide(amount, poolKeys);\n    logger.debug(\"input side:\", input);\n\n    // round up\n    let amountRaw = ZERO;\n    if (!amount.isZero()) {\n      amountRaw =\n        input === \"base\"\n          ? divCeil(amount.raw.mul(quoteReserve), baseReserve)\n          : divCeil(amount.raw.mul(baseReserve), quoteReserve);\n    }\n\n    const _slippage = new Percent(ONE).add(slippage);\n    const slippageAdjustedAmount = _slippage.mul(amountRaw).quotient;\n\n    const _anotherAmount =\n      anotherCurrency instanceof Token\n        ? new TokenAmount(anotherCurrency, amountRaw)\n        : new CurrencyAmount(anotherCurrency, amountRaw);\n    const _maxAnotherAmount =\n      anotherCurrency instanceof Token\n        ? new TokenAmount(anotherCurrency, slippageAdjustedAmount)\n        : new CurrencyAmount(anotherCurrency, slippageAdjustedAmount);\n    logger.debug(\"anotheAmount:\", _anotherAmount.toFixed());\n    logger.debug(\"maxAnotheAmount:\", _maxAnotherAmount.toFixed());\n\n    return {\n      anotherAmount: _anotherAmount,\n      maxAnotherAmount: _maxAnotherAmount,\n    };\n  }\n\n  static _computePriceImpact(currentPrice: Price, amountIn: BN, amountOut: BN) {\n    const exactQuote = currentPrice.raw.mul(amountIn);\n    // calculate slippage := (exactQuote - outputAmount) / exactQuote\n    const slippage = exactQuote.sub(amountOut).div(exactQuote);\n    return new Percent(slippage.numerator, slippage.denominator);\n  }\n\n  static getRate(poolInfo: LiquidityPoolInfo) {\n    const { baseReserve, quoteReserve, baseDecimals, quoteDecimals } = poolInfo;\n    const price = new Price(new Currency(baseDecimals), baseReserve, new Currency(quoteDecimals), quoteReserve);\n\n    return price;\n  }\n\n  /**\n   * Compute output currency amount of swap\n   *\n   * @param params - {@link LiquidityComputeAmountOutParams}\n   *\n   * @returns\n   * amountOut - currency amount without slippage\n   * @returns\n   * minAmountOut - currency amount with slippage\n   */\n  static computeAmountOut = ({\n    poolKeys,\n    poolInfo,\n    amountIn,\n    currencyOut,\n    slippage,\n  }: LiquidityComputeAmountOutParams):\n    | {\n        amountOut: CurrencyAmount;\n        minAmountOut: CurrencyAmount;\n        currentPrice: Price;\n        executionPrice: Price | null;\n        priceImpact: Percent;\n        fee: CurrencyAmount;\n      }\n    | {\n        amountOut: TokenAmount;\n        minAmountOut: TokenAmount;\n        currentPrice: Price;\n        executionPrice: Price | null;\n        priceImpact: Percent;\n        fee: CurrencyAmount;\n      } => {\n    const tokenIn = amountIn instanceof TokenAmount ? amountIn.token : Token.WSOL;\n    const tokenOut = currencyOut instanceof Token ? currencyOut : Token.WSOL;\n    logger.assertArgument(\n      this.includesToken(tokenIn, poolKeys) && this.includesToken(tokenOut, poolKeys),\n      \"token not match with pool\",\n      \"poolKeys\",\n      poolKeys,\n    );\n\n    const { baseReserve, quoteReserve } = poolInfo;\n    logger.debug(\"baseReserve:\", baseReserve.toString());\n    logger.debug(\"quoteReserve:\", quoteReserve.toString());\n\n    const currencyIn = amountIn instanceof TokenAmount ? amountIn.token : amountIn.currency;\n    logger.debug(\"currencyIn:\", currencyIn);\n    logger.debug(\"amountIn:\", amountIn.toFixed());\n    logger.debug(\"currencyOut:\", currencyOut);\n    logger.debug(\"slippage:\", `${slippage.toSignificant()}%`);\n\n    const reserves = [baseReserve, quoteReserve];\n\n    // input is fixed\n    const input = this._getAmountSide(amountIn, poolKeys);\n    if (input === \"quote\") {\n      reserves.reverse();\n    }\n    logger.debug(\"input side:\", input);\n\n    const [reserveIn, reserveOut] = reserves;\n\n    let currentPrice;\n    if (poolKeys.version === 4) {\n      currentPrice = new Price(currencyIn, reserveIn, currencyOut, reserveOut);\n    } else {\n      const p = getStablePrice(modelData, baseReserve.toNumber(), quoteReserve.toNumber(), false);\n      if (input === \"quote\") currentPrice = new Price(currencyIn, new BN(p * 1e6), currencyOut, new BN(1e6));\n      else currentPrice = new Price(currencyIn, new BN(1e6), currencyOut, new BN(p * 1e6));\n    }\n\n    logger.debug(\"currentPrice:\", `1 ${currencyIn.symbol} ≈ ${currentPrice.toFixed()} ${currencyOut.symbol}`);\n    logger.debug(\n      \"currentPrice invert:\",\n      `1 ${currencyOut.symbol} ≈ ${currentPrice.invert().toFixed()} ${currencyIn.symbol}`,\n    );\n\n    const amountInRaw = amountIn.raw;\n    let amountOutRaw = ZERO;\n    let feeRaw = ZERO;\n\n    if (!amountInRaw.isZero()) {\n      if (poolKeys.version === 4) {\n        feeRaw = amountInRaw.mul(LIQUIDITY_FEES_NUMERATOR).div(LIQUIDITY_FEES_DENOMINATOR);\n        const amountInWithFee = amountInRaw.sub(feeRaw);\n\n        const denominator = reserveIn.add(amountInWithFee);\n        amountOutRaw = reserveOut.mul(amountInWithFee).div(denominator);\n      } else {\n        feeRaw = amountInRaw.mul(new BN(2)).div(new BN(10000));\n        const amountInWithFee = amountInRaw.sub(feeRaw);\n        if (input === \"quote\")\n          amountOutRaw = new BN(\n            getDyByDxBaseIn(modelData, quoteReserve.toNumber(), baseReserve.toNumber(), amountInWithFee.toNumber()),\n          );\n        else {\n          amountOutRaw = new BN(\n            getDxByDyBaseIn(modelData, quoteReserve.toNumber(), baseReserve.toNumber(), amountInWithFee.toNumber()),\n          );\n        }\n      }\n    }\n\n    const _slippage = new Percent(ONE).add(slippage);\n    const minAmountOutRaw = _slippage.invert().mul(amountOutRaw).quotient;\n\n    const amountOut =\n      currencyOut instanceof Token\n        ? new TokenAmount(currencyOut, amountOutRaw)\n        : new CurrencyAmount(currencyOut, amountOutRaw);\n    const minAmountOut =\n      currencyOut instanceof Token\n        ? new TokenAmount(currencyOut, minAmountOutRaw)\n        : new CurrencyAmount(currencyOut, minAmountOutRaw);\n    logger.debug(\"amountOut:\", amountOut.toFixed());\n    logger.debug(\"minAmountOut:\", minAmountOut.toFixed());\n\n    let executionPrice = new Price(currencyIn, amountInRaw.sub(feeRaw), currencyOut, amountOutRaw);\n    if (!amountInRaw.isZero() && !amountOutRaw.isZero()) {\n      executionPrice = new Price(currencyIn, amountInRaw.sub(feeRaw), currencyOut, amountOutRaw);\n      logger.debug(\"executionPrice:\", `1 ${currencyIn.symbol} ≈ ${executionPrice.toFixed()} ${currencyOut.symbol}`);\n      logger.debug(\n        \"executionPrice invert:\",\n        `1 ${currencyOut.symbol} ≈ ${executionPrice.invert().toFixed()} ${currencyIn.symbol}`,\n      );\n    }\n\n    // const priceImpact = this._computePriceImpact(currentPrice, amountInRaw, amountOutRaw);\n    // TODO\n    const priceImpact = new Percent(\n      parseInt(String(Math.abs(parseFloat(executionPrice.toFixed()) - parseFloat(currentPrice.toFixed())) * 1e9)),\n      parseInt(String(parseFloat(currentPrice.toFixed()) * 1e9)),\n    );\n    logger.debug(\"priceImpact:\", `${priceImpact.toSignificant()}%`);\n\n    const fee =\n      currencyIn instanceof Token ? new TokenAmount(currencyIn, feeRaw) : new CurrencyAmount(currencyIn, feeRaw);\n\n    return {\n      amountOut,\n      minAmountOut,\n      currentPrice,\n      executionPrice,\n      priceImpact,\n      fee,\n    };\n  };\n\n  /**\n   * Compute input currency amount of swap\n   *\n   * @param params - {@link ComputeCurrencyAmountInParams}\n   *\n   * @returns\n   * amountIn - currency amount without slippage\n   * @returns\n   * maxAmountIn - currency amount with slippage\n   */\n  static computeAmountIn({ poolKeys, poolInfo, amountOut, currencyIn, slippage }: LiquidityComputeAmountInParams):\n    | {\n        amountIn: CurrencyAmount;\n        maxAmountIn: CurrencyAmount;\n        currentPrice: Price;\n        executionPrice: Price | null;\n        priceImpact: Percent;\n      }\n    | {\n        amountIn: TokenAmount;\n        maxAmountIn: TokenAmount;\n        currentPrice: Price;\n        executionPrice: Price | null;\n        priceImpact: Percent;\n      } {\n    const { baseReserve, quoteReserve } = poolInfo;\n    logger.debug(\"baseReserve:\", baseReserve.toString());\n    logger.debug(\"quoteReserve:\", quoteReserve.toString());\n\n    const currencyOut = amountOut instanceof TokenAmount ? amountOut.token : amountOut.currency;\n    logger.debug(\"currencyOut:\", currencyOut);\n    logger.debug(\"amountOut:\", amountOut.toFixed());\n    logger.debug(\"currencyIn:\", currencyIn);\n    logger.debug(\"slippage:\", `${slippage.toSignificant()}%`);\n\n    const reserves = [baseReserve, quoteReserve];\n\n    // output is fixed\n    const output = this._getAmountSide(amountOut, poolKeys);\n    if (output === \"base\") {\n      reserves.reverse();\n    }\n    logger.debug(\"output side:\", output);\n\n    const [reserveIn, reserveOut] = reserves;\n\n    const currentPrice = new Price(currencyIn, reserveIn, currencyOut, reserveOut);\n    logger.debug(\"currentPrice:\", `1 ${currencyIn.symbol} ≈ ${currentPrice.toFixed()} ${currencyOut.symbol}`);\n    logger.debug(\n      \"currentPrice invert:\",\n      `1 ${currencyOut.symbol} ≈ ${currentPrice.invert().toFixed()} ${currencyIn.symbol}`,\n    );\n\n    let amountInRaw = ZERO;\n    let amountOutRaw = amountOut.raw;\n    if (!amountOutRaw.isZero()) {\n      // if out > reserve, out = reserve - 1\n      if (amountOutRaw.gt(reserveOut)) {\n        amountOutRaw = reserveOut.sub(ONE);\n      }\n\n      const denominator = reserveOut.sub(amountOutRaw);\n      const amountInWithoutFee = reserveIn.mul(amountOutRaw).div(denominator);\n\n      amountInRaw = amountInWithoutFee\n        .mul(LIQUIDITY_FEES_DENOMINATOR)\n        .div(LIQUIDITY_FEES_DENOMINATOR.sub(LIQUIDITY_FEES_NUMERATOR));\n    }\n\n    const _slippage = new Percent(ONE).add(slippage);\n    const maxAmountInRaw = _slippage.mul(amountInRaw).quotient;\n\n    const amountIn =\n      currencyIn instanceof Token\n        ? new TokenAmount(currencyIn, amountInRaw)\n        : new CurrencyAmount(currencyIn, amountInRaw);\n    const maxAmountIn =\n      currencyIn instanceof Token\n        ? new TokenAmount(currencyIn, maxAmountInRaw)\n        : new CurrencyAmount(currencyIn, maxAmountInRaw);\n    logger.debug(\"amountIn:\", amountIn.toFixed());\n    logger.debug(\"maxAmountIn:\", maxAmountIn.toFixed());\n\n    let executionPrice: Price | null = null;\n    if (!amountInRaw.isZero() && !amountOutRaw.isZero()) {\n      executionPrice = new Price(currencyIn, amountInRaw, currencyOut, amountOutRaw);\n      logger.debug(\"executionPrice:\", `1 ${currencyIn.symbol} ≈ ${executionPrice.toFixed()} ${currencyOut.symbol}`);\n      logger.debug(\n        \"executionPrice invert:\",\n        `1 ${currencyOut.symbol} ≈ ${executionPrice.invert().toFixed()} ${currencyIn.symbol}`,\n      );\n    }\n\n    const priceImpact = this._computePriceImpact(currentPrice, amountInRaw, amountOutRaw);\n    logger.debug(\"priceImpact:\", `${priceImpact.toSignificant()}%`);\n\n    return {\n      amountIn,\n      maxAmountIn,\n      currentPrice,\n      executionPrice,\n      priceImpact,\n    };\n  }\n}\n","import _Big from \"big.js\";\nimport BN from \"bn.js\";\n\nimport { Logger } from \"../common\";\n\nimport { BigNumberish, parseBigNumberish } from \"./bignumber\";\nimport { Rounding, TEN } from \"./constant\";\nimport { Currency, currencyEquals, Token } from \"./currency\";\nimport { Fraction } from \"./fraction\";\nimport toFormat, { WrappedBig } from \"./to-format\";\n\nconst logger = Logger.from(\"entity/amount\");\n\nconst Big = toFormat(_Big);\ntype Big = WrappedBig;\n\nexport function splitNumber(num: string, decimals: number) {\n  let integral = \"0\";\n  let fractional = \"0\";\n\n  if (num.includes(\".\")) {\n    const splited = num.split(\".\");\n    if (splited.length === 2) {\n      [integral, fractional] = splited;\n      fractional = fractional.padEnd(decimals, \"0\");\n    } else {\n      return logger.throwArgumentError(\"invalid number string\", \"num\", num);\n    }\n  } else {\n    integral = num;\n  }\n\n  // fix decimals is 0\n  return [integral, fractional.slice(0, decimals) || fractional];\n}\n\nexport class CurrencyAmount extends Fraction {\n  public readonly currency: Currency;\n\n  public constructor(currency: Currency, amount: BigNumberish, isRaw = true) {\n    let parsedAmount = new BN(0);\n    const multiplier = TEN.pow(new BN(currency.decimals));\n\n    if (isRaw) {\n      parsedAmount = parseBigNumberish(amount);\n    } else {\n      let integralAmount = new BN(0);\n      let fractionalAmount = new BN(0);\n\n      // parse fractional string\n      if (typeof amount === \"string\" || typeof amount === \"number\" || typeof amount === \"bigint\") {\n        const [integral, fractional] = splitNumber(amount.toString(), currency.decimals);\n\n        integralAmount = parseBigNumberish(integral);\n        fractionalAmount = parseBigNumberish(fractional);\n      }\n      // else {\n      //   integralAmount = parseBigNumberish(amount);\n      // }\n\n      integralAmount = integralAmount.mul(multiplier);\n      parsedAmount = integralAmount.add(fractionalAmount);\n    }\n\n    super(parsedAmount, multiplier);\n    this.currency = currency;\n  }\n\n  public get raw() {\n    return this.numerator;\n  }\n\n  public isZero() {\n    return this.raw.isZero();\n  }\n\n  /**\n   * a greater than b\n   */\n  public gt(other: CurrencyAmount) {\n    logger.assert(currencyEquals(this.currency, other.currency), \"gt currency not equals\");\n\n    return this.raw.gt(other.raw);\n  }\n\n  /**\n   * a less than b\n   */\n  public lt(other: CurrencyAmount) {\n    logger.assert(currencyEquals(this.currency, other.currency), \"lt currency not equals\");\n\n    return this.raw.lt(other.raw);\n  }\n\n  public add(other: CurrencyAmount): CurrencyAmount {\n    logger.assert(currencyEquals(this.currency, other.currency), \"add currency not equals\");\n\n    return new CurrencyAmount(this.currency, this.raw.add(other.raw));\n  }\n\n  public sub(other: CurrencyAmount): CurrencyAmount {\n    logger.assert(currencyEquals(this.currency, other.currency), \"sub currency not equals\");\n\n    return new CurrencyAmount(this.currency, this.raw.sub(other.raw));\n  }\n\n  public toSignificant(\n    significantDigits = this.currency.decimals,\n    format?: object,\n    rounding: Rounding = Rounding.ROUND_DOWN,\n  ): string {\n    return super.toSignificant(significantDigits, format, rounding);\n  }\n\n  /**\n   * To fixed\n   *\n   * @example\n   * ```\n   * 1 -> 1.000000000\n   * 1.234 -> 1.234000000\n   * 1.123456789876543 -> 1.123456789\n   * ```\n   */\n  public toFixed(\n    decimalPlaces = this.currency.decimals,\n    format?: object,\n    rounding: Rounding = Rounding.ROUND_DOWN,\n  ): string {\n    logger.assert(decimalPlaces <= this.currency.decimals, \"decimals overflow\");\n\n    return super.toFixed(decimalPlaces, format, rounding);\n  }\n\n  /**\n   * To exact\n   *\n   * @example\n   * ```\n   * 1 -> 1\n   * 1.234 -> 1.234\n   * 1.123456789876543 -> 1.123456789\n   * ```\n   */\n  public toExact(format: object = { groupSeparator: \"\" }): string {\n    Big.DP = this.currency.decimals;\n    return new Big(this.numerator.toString()).div(this.denominator.toString()).toFormat(format);\n  }\n}\n\nexport class TokenAmount extends CurrencyAmount {\n  public readonly token: Token;\n\n  public constructor(token: Token, amount: BigNumberish, isRaw = true) {\n    super(token, amount, isRaw);\n    this.token = token;\n  }\n\n  public add(other: TokenAmount): TokenAmount {\n    logger.assert(currencyEquals(this.token, other.token), \"add token not equals\");\n\n    return new TokenAmount(this.token, this.raw.add(other.raw));\n  }\n\n  public subtract(other: TokenAmount): TokenAmount {\n    logger.assert(currencyEquals(this.token, other.token), \"sub token not equals\");\n\n    return new TokenAmount(this.token, this.raw.sub(other.raw));\n  }\n}\n","import { Token } from \"@solana/spl-token\";\nimport { PublicKey } from \"@solana/web3.js\";\nimport { BN } from \"bn.js\";\nimport { Currency, CurrencyAmount, Fraction, Percent, Price, TokenAmount } from \"../entity\";\n\nimport { validateAndParsePublicKey } from \"./pubkey\";\n\ntype Primitive = boolean | number | string | null | undefined | PublicKey;\n\n/**\n *\n * @example\n * ```typescript\n * interface A {\n *   keyA: string;\n *   keyB: string;\n *   map: {\n *     hello: string;\n *     i: number;\n *   };\n *   list: (string | number)[];\n *   keyC: number;\n * }\n *\n * type WrappedA = ReplaceType<A, string, boolean> // {\n *   keyA: boolean;\n *   keyB: boolean;\n *   map: {\n *     hello: boolean;\n *     i: number;\n *   };\n *   list: (number | boolean)[];\n *   keyC: number;\n * }\n * ```\n */\nexport type ReplaceType<Old, From, To> = {\n  [T in keyof Old]: Old[T] extends From // to avoid case: Old[T] is an Object,\n    ? Exclude<Old[T], From> | To // when match,  directly replace\n    : Old[T] extends Primitive // judge whether need recursively replace\n    ? From extends Old[T] // it's an Object\n      ? Exclude<Old[T], From> | To // directly replace\n      : Old[T] // stay same\n    : ReplaceType<Old[T], From, To>; // recursively replace\n};\n\nconst baseInnerObjects = [Token, TokenAmount, PublicKey, Fraction, BN, Currency, CurrencyAmount, Price, Percent];\n\nfunction notInnerObject(v: unknown): v is Record<string, any> {\n  return typeof v === \"object\" && v !== null && !baseInnerObjects.some((o) => typeof o === \"object\" && v instanceof o);\n}\n\nexport function jsonInfo2PoolKeys<T>(jsonInfo: T): ReplaceType<T, string, PublicKey> {\n  // @ts-expect-error no need type for inner code\n  return typeof jsonInfo === \"string\"\n    ? validateAndParsePublicKey(jsonInfo)\n    : Array.isArray(jsonInfo)\n    ? jsonInfo.map((k) => jsonInfo2PoolKeys(k))\n    : notInnerObject(jsonInfo)\n    ? Object.fromEntries(Object.entries(jsonInfo).map(([k, v]) => [k, jsonInfo2PoolKeys(v)]))\n    : jsonInfo;\n}\n\nexport function poolKeys2JsonInfo<T>(jsonInfo: T): ReplaceType<T, PublicKey, string> {\n  // @ts-expect-error no need type for inner code\n  return jsonInfo instanceof PublicKey\n    ? jsonInfo.toBase58()\n    : Array.isArray(jsonInfo)\n    ? jsonInfo.map((k) => poolKeys2JsonInfo(k))\n    : notInnerObject(jsonInfo)\n    ? Object.fromEntries(Object.entries(jsonInfo).map(([k, v]) => [k, poolKeys2JsonInfo(v)]))\n    : jsonInfo;\n}\n","import { PublicKey, SystemProgram } from \"@solana/web3.js\";\n\nimport { Logger } from \"./logger\";\n\nconst logger = Logger.from(\"common/pubkey\");\n\n/* ================= global public keys ================= */\nexport { ASSOCIATED_TOKEN_PROGRAM_ID, TOKEN_PROGRAM_ID } from \"@solana/spl-token\";\nexport { SYSVAR_CLOCK_PUBKEY, SYSVAR_RENT_PUBKEY } from \"@solana/web3.js\";\n\nexport const SYSTEM_PROGRAM_ID = SystemProgram.programId;\nexport const MEMO_PROGRAM_ID = new PublicKey(\"Memo1UhkJRfHyvLMcVucJwxXeuD728EqVDDwQDxFMNo\");\n\n/* ================= validate public key ================= */\nexport type PublicKeyish = PublicKey | string;\n\nexport function validateAndParsePublicKey(publicKey: PublicKeyish) {\n  if (publicKey instanceof PublicKey) {\n    return publicKey;\n  }\n\n  if (typeof publicKey === \"string\") {\n    try {\n      const key = new PublicKey(publicKey);\n      return key;\n    } catch {\n      return logger.throwArgumentError(\"invalid public key\", \"publicKey\", publicKey);\n    }\n  }\n\n  return logger.throwArgumentError(\"invalid public key\", \"publicKey\", publicKey);\n}\n\nexport async function findProgramAddress(seeds: Array<Buffer | Uint8Array>, programId: PublicKey) {\n  const [publicKey, nonce] = await PublicKey.findProgramAddress(seeds, programId);\n  return { publicKey, nonce };\n}\n\nexport function AccountMeta(publicKey: PublicKey, isSigner: boolean) {\n  return {\n    pubkey: publicKey,\n    isWritable: true,\n    isSigner,\n  };\n}\n\nexport function AccountMetaReadonly(publicKey: PublicKey, isSigner: boolean) {\n  return {\n    pubkey: publicKey,\n    isWritable: false,\n    isSigner,\n  };\n}\n","import { PublicKey } from \"@solana/web3.js\";\n\nimport { version } from \"../version\";\n\n// https://github.com/DABH/colors.js\nimport \"@colors/colors\";\n\nlet _permanentCensorErrors = false;\nlet _censorErrors = false;\n\nconst LogLevels: { [name: string]: number } = { debug: 1, default: 2, info: 2, warning: 3, error: 4, off: 5 };\nconst _moduleLogLevel: { [name: string]: number } = {};\n\nlet _globalLogger: Logger;\n\nfunction _checkNormalize(): string {\n  try {\n    const missing: Array<string> = [];\n\n    // Make sure all forms of normalization are supported\n    [\"NFD\", \"NFC\", \"NFKD\", \"NFKC\"].forEach((form) => {\n      try {\n        if (\"test\".normalize(form) !== \"test\") {\n          throw new Error(\"bad normalize\");\n        }\n      } catch (error) {\n        missing.push(form);\n      }\n    });\n\n    if (missing.length) {\n      throw new Error(\"missing \" + missing.join(\", \"));\n    }\n\n    if (String.fromCharCode(0xe9).normalize(\"NFD\") !== String.fromCharCode(0x65, 0x0301)) {\n      throw new Error(\"broken implementation\");\n    }\n  } catch (error) {\n    if (error instanceof Error) {\n      return error.message;\n    }\n  }\n\n  return \"\";\n}\n\nconst _normalizeError = _checkNormalize();\n\nexport enum LogLevel {\n  DEBUG = \"DEBUG\",\n  INFO = \"INFO\",\n  WARNING = \"WARNING\",\n  ERROR = \"ERROR\",\n  OFF = \"OFF\",\n}\n\nexport enum ErrorCode {\n  ///////////////////\n  // Generic Errors\n\n  // Unknown Error\n  UNKNOWN_ERROR = \"UNKNOWN_ERROR\",\n\n  // Not Implemented\n  NOT_IMPLEMENTED = \"NOT_IMPLEMENTED\",\n\n  // Unsupported Operation\n  //   - operation\n  UNSUPPORTED_OPERATION = \"UNSUPPORTED_OPERATION\",\n\n  // Network Error (i.e. Ethereum Network, such as an invalid chain ID)\n  //   - event (\"noNetwork\" is not re-thrown in provider.ready; otherwise thrown)\n  NETWORK_ERROR = \"NETWORK_ERROR\",\n\n  // Some sort of bad response from the server\n  RPC_ERROR = \"RPC_ERROR\",\n\n  // Timeout\n  TIMEOUT = \"TIMEOUT\",\n\n  ///////////////////\n  // Operational  Errors\n\n  // Buffer Overrun\n  BUFFER_OVERRUN = \"BUFFER_OVERRUN\",\n\n  // Numeric Fault\n  //   - operation: the operation being executed\n  //   - fault: the reason this faulted\n  NUMERIC_FAULT = \"NUMERIC_FAULT\",\n\n  ///////////////////\n  // Argument Errors\n\n  // Missing new operator to an object\n  //  - name: The name of the class\n  MISSING_NEW = \"MISSING_NEW\",\n\n  // Invalid argument (e.g. value is incompatible with type) to a function:\n  //   - argument: The argument name that was invalid\n  //   - value: The value of the argument\n  INVALID_ARGUMENT = \"INVALID_ARGUMENT\",\n\n  // Missing argument to a function:\n  //   - count: The number of arguments received\n  //   - expectedCount: The number of arguments expected\n  MISSING_ARGUMENT = \"MISSING_ARGUMENT\",\n\n  // Too many arguments\n  //   - count: The number of arguments received\n  //   - expectedCount: The number of arguments expected\n  UNEXPECTED_ARGUMENT = \"UNEXPECTED_ARGUMENT\",\n\n  ///////////////////\n  // Blockchain Errors\n\n  // Insufficien funds (< value + gasLimit * gasPrice)\n  //   - transaction: the transaction attempted\n  INSUFFICIENT_FUNDS = \"INSUFFICIENT_FUNDS\",\n}\n\nconst HEX = \"0123456789abcdef\";\n\nfunction perfectDisplay(value: any, deeping = false) {\n  let _value = value;\n\n  try {\n    if (value instanceof Uint8Array) {\n      let hex = \"\";\n      for (let i = 0; i < value.length; i++) {\n        hex += HEX[value[i] >> 4];\n        hex += HEX[value[i] & 0x0f];\n      }\n      _value = `Uint8Array(0x${hex})`;\n    } else if (value instanceof PublicKey) {\n      _value = `PublicKey(${value.toBase58()})`;\n    } else if (value instanceof Object && !deeping) {\n      const obj = {};\n      Object.entries(value).forEach(([k, v]) => {\n        obj[k] = perfectDisplay(v, true);\n      });\n      _value = JSON.stringify(obj);\n    } else if (!deeping) {\n      _value = JSON.stringify(value);\n    }\n  } catch (error) {\n    _value = JSON.stringify(value.toString());\n  }\n\n  return _value;\n}\n\nexport class Logger {\n  readonly version: string = version;\n  readonly moduleName: string;\n\n  static errors = ErrorCode;\n\n  static levels = LogLevel;\n\n  constructor(moduleName: string) {\n    this.moduleName = moduleName;\n  }\n\n  _log(logLevel: LogLevel, args: Array<any>): void {\n    const level = logLevel.toLowerCase();\n    if (LogLevels[level] == null) {\n      this.throwArgumentError(\"invalid log level name\", \"logLevel\", logLevel);\n    }\n    const _logLevel = _moduleLogLevel[this.moduleName] || LogLevels[\"default\"];\n    if (_logLevel > LogLevels[level]) {\n      return;\n    }\n    console.log(...args);\n  }\n\n  debug(...args: Array<any>): void {\n    this._log(Logger.levels.DEBUG, [\"[DEBUG]\".blue, ...args]);\n  }\n\n  info(...args: Array<any>): void {\n    this._log(Logger.levels.INFO, [\"[INFO]\".green, ...args]);\n  }\n\n  warn(...args: Array<any>): void {\n    this._log(Logger.levels.WARNING, [\"[WARN]\".yellow, ...args]);\n  }\n\n  makeError(message: string, code?: ErrorCode, params?: any): Error {\n    // Errors are being censored\n    if (_censorErrors) {\n      return this.makeError(\"censored error\", code, {});\n    }\n\n    if (!code) {\n      code = Logger.errors.UNKNOWN_ERROR;\n    }\n    if (!params) {\n      params = {};\n    }\n\n    const messageDetails: Array<string> = [];\n    Object.entries(params).forEach(([key, value]) => {\n      messageDetails.push(`${key}=${perfectDisplay(value)})`);\n    });\n    messageDetails.push(`code=${code}`);\n    messageDetails.push(`module=${this.moduleName}`);\n    messageDetails.push(`version=${this.version}`);\n\n    const reason = message;\n    if (messageDetails.length) {\n      message += \" (\" + messageDetails.join(\", \") + \")\";\n    }\n\n    // @TODO: Any??\n    const error: any = new Error(message);\n    error.reason = reason;\n    error.code = code;\n\n    Object.entries(params).forEach(([key, value]) => {\n      error[key] = value;\n    });\n\n    return error;\n  }\n\n  throwError(message: string, code?: ErrorCode, params?: any): never {\n    throw this.makeError(message, code, params);\n  }\n\n  throwArgumentError(message: string, name: string, value: any): never {\n    return this.throwError(message, Logger.errors.INVALID_ARGUMENT, {\n      argument: name,\n      value,\n    });\n  }\n\n  assert(condition: any, message: string, code?: ErrorCode, params?: any): void {\n    if (condition) {\n      return;\n    }\n    this.throwError(message, code, params);\n  }\n\n  assertArgument(condition: any, message: string, name: string, value: any): void {\n    if (condition) {\n      return;\n    }\n    this.throwArgumentError(message, name, value);\n  }\n\n  checkNormalize(message?: string): void {\n    if (message == null) {\n      message = \"platform missing String.prototype.normalize\";\n    }\n    if (_normalizeError) {\n      this.throwError(\"platform missing String.prototype.normalize\", Logger.errors.UNSUPPORTED_OPERATION, {\n        operation: \"String.prototype.normalize\",\n        form: _normalizeError,\n      });\n    }\n  }\n\n  checkSafeUint53(value: number, message?: string): void {\n    if (typeof value !== \"number\") {\n      return;\n    }\n\n    if (message == null) {\n      message = \"value not safe\";\n    }\n\n    if (value < 0 || value >= 0x1fffffffffffff) {\n      this.throwError(message, Logger.errors.NUMERIC_FAULT, {\n        operation: \"checkSafeInteger\",\n        fault: \"out-of-safe-range\",\n        value,\n      });\n    }\n\n    if (value % 1) {\n      this.throwError(message, Logger.errors.NUMERIC_FAULT, {\n        operation: \"checkSafeInteger\",\n        fault: \"non-integer\",\n        value,\n      });\n    }\n  }\n\n  checkArgumentCount(count: number, expectedCount: number, message?: string): void {\n    if (message) {\n      message = \": \" + message;\n    } else {\n      message = \"\";\n    }\n\n    if (count < expectedCount) {\n      this.throwError(\"missing argument\" + message, Logger.errors.MISSING_ARGUMENT, {\n        count,\n        expectedCount,\n      });\n    }\n\n    if (count > expectedCount) {\n      this.throwError(\"too many arguments\" + message, Logger.errors.UNEXPECTED_ARGUMENT, {\n        count,\n        expectedCount,\n      });\n    }\n  }\n\n  checkNew(target: any, kind: any): void {\n    if (target === Object || target == null) {\n      this.throwError(\"missing new\", Logger.errors.MISSING_NEW, { name: kind.name });\n    }\n  }\n\n  checkAbstract(target: any, kind: any): void {\n    if (target === kind) {\n      this.throwError(\n        \"cannot instantiate abstract class \" + JSON.stringify(kind.name) + \" directly; use a sub-class\",\n        Logger.errors.UNSUPPORTED_OPERATION,\n        { name: target.name, operation: \"new\" },\n      );\n    } else if (target === Object || target == null) {\n      this.throwError(\"missing new\", Logger.errors.MISSING_NEW, { name: kind.name });\n    }\n  }\n\n  static globalLogger(): Logger {\n    if (!_globalLogger) {\n      _globalLogger = new Logger(version);\n    }\n    return _globalLogger;\n  }\n\n  static setCensorship(censorship: boolean, permanent?: boolean): void {\n    if (!censorship && permanent) {\n      this.globalLogger().throwError(\"cannot permanently disable censorship\", Logger.errors.UNSUPPORTED_OPERATION, {\n        operation: \"setCensorship\",\n      });\n    }\n\n    if (_permanentCensorErrors) {\n      if (!censorship) {\n        return;\n      }\n      this.globalLogger().throwError(\"error censorship permanent\", Logger.errors.UNSUPPORTED_OPERATION, {\n        operation: \"setCensorship\",\n      });\n    }\n\n    _censorErrors = !!censorship;\n    _permanentCensorErrors = !!permanent;\n  }\n\n  static setLogLevel(moduleName: string, logLevel: \"DEBUG\" | \"INFO\" | \"WARNING\" | \"ERROR\" | \"OFF\"): void {\n    const level = LogLevels[logLevel.toLowerCase()];\n    if (level == null) {\n      Logger.globalLogger().warn(\"invalid log level - \" + logLevel);\n      return;\n    }\n    _moduleLogLevel[moduleName] = level;\n  }\n\n  static from(version: string): Logger {\n    return new Logger(version);\n  }\n}\n","export const version = \"1.1.0-beta.5\";\n","/* eslint-disable @typescript-eslint/ban-ts-comment */\n\nimport { PublicKey } from \"@solana/web3.js\";\nimport BN from \"bn.js\";\n\nexport function inspectPublicKey() {\n  if (typeof Symbol !== \"undefined\" && typeof Symbol.for === \"function\") {\n    try {\n      PublicKey.prototype[Symbol.for(\"nodejs.util.inspect.custom\")] = function () {\n        return `<PublicKey: ${this.toString()}>`;\n      };\n    } catch (e) {\n      // @ts-ignore\n      PublicKey.prototype.inspect = function () {\n        return `<PublicKey: ${this.toString()}>`;\n      };\n    }\n  } else {\n    // @ts-ignore\n    PublicKey.prototype.inspect = function () {\n      return `<PublicKey: ${this.toString()}>`;\n    };\n  }\n}\n\nexport function inspectBN() {\n  if (typeof Symbol !== \"undefined\" && typeof Symbol.for === \"function\") {\n    try {\n      BN.prototype[Symbol.for(\"nodejs.util.inspect.custom\")] = function () {\n        // @ts-ignore\n        return `<${this.red ? \"BN-R\" : \"BN\"}: ${this.toString()}>`;\n      };\n    } catch (e) {\n      // @ts-ignore\n      BN.prototype.inspect = function () {\n        // @ts-ignore\n        return `<${this.red ? \"BN-R\" : \"BN\"}: ${this.toString()}>`;\n      };\n    }\n  } else {\n    // @ts-ignore\n    BN.prototype.inspect = function () {\n      // @ts-ignore\n      return `<${this.red ? \"BN-R\" : \"BN\"}: ${this.toString()}>`;\n    };\n  }\n}\n\nexport function inspectAll() {\n  inspectPublicKey();\n  inspectBN();\n}\n","/**\n * https://youmightnotneed.com/lodash/\n */\n\nexport function chunkArray<T>(arr: T[], chunkSize = 1, cache: T[][] = []): T[][] {\n  const tmp = [...arr];\n  if (chunkSize <= 0) return cache;\n  while (tmp.length) cache.push(tmp.splice(0, chunkSize));\n  return cache;\n}\n\nexport function intersection<T>(arr: T[], ...args: T[][]) {\n  return arr.filter((item) => args.every((arr) => arr.includes(item)));\n}\n\nexport function xor<T>(arr: T[], ...args: T[][]) {\n  return arr.filter((item) => args.every((arr) => !arr.includes(item)));\n}\n\nexport function uniq<T>(arr: T[]) {\n  return [...new Set(arr)];\n}\n","// import BN from 'bn.js';\n\n// import { Spl, SPL_ACCOUNT_LAYOUT } from '../spl';\n// import { TOKEN_PROGRAM_ID } from './id';\n\nimport {\n  AccountInfo, Commitment, Connection, PACKET_DATA_SIZE, PublicKey, RpcResponseAndContext, SimulatedTransactionResponse,\n  Transaction, TransactionInstruction,\n} from \"@solana/web3.js\";\n\nimport { chunkArray } from \"./lodash\";\nimport { Logger } from \"./logger\";\n\nconst logger = Logger.from(\"common/web3\");\n\ninterface MultipleAccountsJsonRpcResponse {\n  jsonrpc: string;\n  id: string;\n  error?: {\n    code: number;\n    message: string;\n  };\n  result: {\n    context: { slot: number };\n    value: { data: Array<string>; executable: boolean; lamports: number; owner: string; rentEpoch: number }[];\n  };\n}\n\nexport interface GetMultipleAccountsInfoConfig {\n  batchRequest?: boolean;\n  commitment?: Commitment;\n}\n\n// export async function batchGetMultipleAccountsInfo() {}\n\nexport async function getMultipleAccountsInfo(\n  connection: Connection,\n  publicKeys: PublicKey[],\n  config?: GetMultipleAccountsInfoConfig,\n): Promise<(AccountInfo<Buffer> | null)[]> {\n  const { batchRequest, commitment } = {\n    // default\n    ...{\n      batchRequest: false,\n    },\n    // custom\n    ...config,\n  };\n\n  const chunkedKeys = chunkArray(publicKeys, 100);\n  let results: (AccountInfo<Buffer> | null)[][] = new Array(chunkedKeys.length).fill([]);\n\n  if (batchRequest) {\n    const batch = chunkedKeys.map((keys) => {\n      const args = connection._buildArgs([keys.map((key) => key.toBase58())], commitment, \"base64\");\n      return {\n        methodName: \"getMultipleAccounts\",\n        args,\n      };\n    });\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    const unsafeResponse: MultipleAccountsJsonRpcResponse[] = await connection._rpcBatchRequest(batch);\n    results = unsafeResponse.map((unsafeRes: MultipleAccountsJsonRpcResponse) => {\n      if (unsafeRes.error) {\n        return logger.throwError(\"failed to get info for multiple accounts\", Logger.errors.RPC_ERROR, {\n          message: unsafeRes.error.message,\n        });\n      }\n\n      return unsafeRes.result.value.map((accountInfo) => {\n        if (accountInfo) {\n          const { data, executable, lamports, owner, rentEpoch } = accountInfo;\n\n          if (data.length !== 2 && data[1] !== \"base64\") {\n            return logger.throwError(\"info must be base64 encoded\", Logger.errors.RPC_ERROR);\n          }\n\n          return {\n            data: Buffer.from(data[0], \"base64\"),\n            executable,\n            lamports,\n            owner: new PublicKey(owner),\n            rentEpoch,\n          };\n        } else {\n          return null;\n        }\n      });\n    });\n  } else {\n    try {\n      results = (await Promise.all(\n        chunkedKeys.map((keys) => connection.getMultipleAccountsInfo(keys, commitment)),\n      )) as (AccountInfo<Buffer> | null)[][];\n    } catch (error) {\n      if (error instanceof Error) {\n        return logger.throwError(\"failed to get info for multiple accounts\", Logger.errors.RPC_ERROR, {\n          message: error.message,\n        });\n      }\n    }\n  }\n\n  return results.flat();\n}\n\nexport async function getMultipleAccountsInfoWithCustomFlags<T extends { pubkey: PublicKey }>(\n  connection: Connection,\n  publicKeysWithCustomFlag: T[],\n  config?: GetMultipleAccountsInfoConfig,\n): Promise<({ accountInfo: AccountInfo<Buffer> | null } & T)[]> {\n  const multipleAccountsInfo = await getMultipleAccountsInfo(\n    connection,\n    publicKeysWithCustomFlag.map((o) => o.pubkey),\n    config,\n  );\n\n  return publicKeysWithCustomFlag.map((o, idx) => ({ ...o, accountInfo: multipleAccountsInfo[idx] }));\n}\n\nexport interface GetTokenAccountsByOwnerConfig {\n  commitment?: Commitment;\n}\n\n// export async function getTokenAccountsByOwner(\n//   connection: Connection,\n//   owner: PublicKey,\n//   config?: GetTokenAccountsByOwnerConfig\n// ) {\n//   const defaultConfig = {};\n//   const customConfig = { ...defaultConfig, ...config };\n\n//   const solReq = connection.getAccountInfo(owner, customConfig.commitment);\n//   const tokenReq = connection.getTokenAccountsByOwner(\n//     owner,\n//     {\n//       programId: TOKEN_PROGRAM_ID\n//     },\n//     customConfig.commitment\n//   );\n\n//   const [solResp, tokenResp] = await Promise.all([solReq, tokenReq]);\n\n//   const accounts: {\n//     publicKey?: PublicKey;\n//     mint?: PublicKey;\n//     isAssociated?: boolean;\n//     amount: BN;\n//     isNative: boolean;\n//   }[] = [];\n\n//   for (const { pubkey, account } of tokenResp.value) {\n//     // double check layout length\n//     if (account.data.length !== SPL_ACCOUNT_LAYOUT.span) {\n//       return logger.throwArgumentError('invalid token account layout length', 'publicKey', pubkey);\n//     }\n\n//     const { mint, amount } = SPL_ACCOUNT_LAYOUT.decode(account.data);\n//     const associatedTokenAddress = await Spl.getAssociatedTokenAddress({ mint, owner });\n\n//     accounts.push({\n//       publicKey: pubkey,\n//       mint,\n//       isAssociated: associatedTokenAddress.equals(pubkey),\n//       amount,\n//       isNative: false\n//     });\n//   }\n\n//   if (solResp) {\n//     accounts.push({\n//       amount: new BN(solResp.lamports),\n//       isNative: true\n//     });\n//   }\n\n//   return accounts;\n// }\n\n/**\n * Forecast transaction size\n */\nexport function forecastTransactionSize(instructions: TransactionInstruction[], signers: PublicKey[]) {\n  if (instructions.length < 1) {\n    return logger.throwArgumentError(\"no instructions provided\", \"instructions\", instructions);\n  }\n  if (signers.length < 1) {\n    return logger.throwArgumentError(\"no signers provided\", \"signers\", signers);\n  }\n\n  const transaction = new Transaction({\n    recentBlockhash: \"11111111111111111111111111111111\",\n    feePayer: signers[0],\n  });\n\n  transaction.add(...instructions);\n\n  const message = transaction.compileMessage().serialize();\n  // SIGNATURE_LENGTH = 64\n  const transactionLength = signers.length + signers.length * 64 + message.length;\n\n  return transactionLength;\n}\n\n/**\n * Simulates multiple instruction\n */\nexport async function simulateMultipleInstruction(\n  connection: Connection,\n  instructions: TransactionInstruction[],\n  keyword: string,\n) {\n  const feePayer = new PublicKey(\"RaydiumSimuLateTransaction11111111111111111\");\n\n  const transactions: Transaction[] = [];\n\n  let transaction = new Transaction({ feePayer });\n\n  for (const instruction of instructions) {\n    if (forecastTransactionSize([...transaction.instructions, instruction], [feePayer]) > PACKET_DATA_SIZE) {\n      transactions.push(transaction);\n      transaction = new Transaction({ feePayer });\n      transaction.add(instruction);\n    } else {\n      transaction.add(instruction);\n    }\n  }\n  if (transaction.instructions.length > 0) {\n    transactions.push(transaction);\n  }\n\n  let results: RpcResponseAndContext<SimulatedTransactionResponse>[] = [];\n\n  try {\n    results = await Promise.all(transactions.map((transaction) => connection.simulateTransaction(transaction)));\n  } catch (error) {\n    if (error instanceof Error) {\n      return logger.throwError(\"failed to simulate for instructions\", Logger.errors.RPC_ERROR, {\n        message: error.message,\n      });\n    }\n  }\n\n  const logs: string[] = [];\n  for (const result of results) {\n    const { value } = result;\n    logger.debug(\"simulate result:\", result);\n\n    if (value.logs) {\n      const filteredLog = value.logs.filter((log) => log && log.includes(keyword));\n      logger.debug(\"filteredLog:\", logs);\n\n      logger.assertArgument(filteredLog.length !== 0, \"simulate log not match keyword\", \"keyword\", keyword);\n\n      logs.push(...filteredLog);\n    }\n  }\n\n  return logs;\n}\n\nexport function parseSimulateLogToJson(log: string, keyword: string) {\n  const results = log.match(/{[\"\\w:,]+}/g);\n  if (!results || results.length !== 1) {\n    return logger.throwArgumentError(\"simulate log fail to match json\", \"keyword\", keyword);\n  }\n\n  return results[0];\n}\n\nexport function parseSimulateValue(log: string, key: string) {\n  const reg = new RegExp(`\"${key}\":(\\\\d+)`, \"g\");\n\n  const results = reg.exec(log);\n  if (!results || results.length !== 2) {\n    return logger.throwArgumentError(\"simulate log fail to match key\", \"key\", key);\n  }\n\n  return results[1];\n}\n","import BN from \"bn.js\";\n\nimport { Logger } from \"../common\";\n\nimport { TEN } from \"./constant\";\n\nconst logger = Logger.from(\"entity/bignumber\");\n\nexport type BigNumberish = BN | string | number | bigint;\n\nconst MAX_SAFE = 0x1fffffffffffff;\n\nexport function parseBigNumberish(value: BigNumberish) {\n  // BN\n  if (value instanceof BN) {\n    return value;\n  }\n\n  // string\n  if (typeof value === \"string\") {\n    if (value.match(/^-?[0-9]+$/)) {\n      return new BN(value);\n    }\n\n    return logger.throwArgumentError(\"invalid BigNumberish string\", \"value\", value);\n  }\n\n  // number\n  if (typeof value === \"number\") {\n    if (value % 1) {\n      return logger.throwArgumentError(\"BigNumberish number underflow\", \"value\", value);\n    }\n\n    if (value >= MAX_SAFE || value <= -MAX_SAFE) {\n      return logger.throwArgumentError(\"BigNumberish number overflow\", \"value\", value);\n    }\n\n    return new BN(String(value));\n  }\n\n  // bigint\n  if (typeof value === \"bigint\") {\n    return new BN(value.toString());\n  }\n\n  return logger.throwArgumentError(\"invalid BigNumberish value\", \"value\", value);\n}\n\nexport function tenExponentiate(shift: BigNumberish) {\n  return TEN.pow(parseBigNumberish(shift));\n}\n\n// round up\nexport function divCeil(a: BN, b: BN): BN {\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore\n  const dm = a.divmod(b);\n\n  // Fast case - exact division\n  if (dm.mod.isZero()) return dm.div;\n\n  // Round up\n  return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n}\n","import BN from \"bn.js\";\n\nexport enum Rounding {\n  ROUND_DOWN,\n  ROUND_HALF_UP,\n  ROUND_UP,\n}\n\nexport const ZERO = new BN(0);\nexport const ONE = new BN(1);\nexport const TWO = new BN(2);\nexport const THREE = new BN(3);\nexport const FIVE = new BN(5);\nexport const TEN = new BN(10);\nexport const _100 = new BN(100);\nexport const _1000 = new BN(1000);\nexport const _10000 = new BN(10000);\n","import { NativeTokenInfo, SplTokenInfo } from \"./type\";\n\nexport const SOL: NativeTokenInfo = {\n  symbol: \"SOL\",\n  name: \"Solana\",\n  decimals: 9,\n};\n\nexport const WSOL: SplTokenInfo = {\n  symbol: \"WSOL\",\n  name: \"Wrapped SOL\",\n  mint: \"So11111111111111111111111111111111111111112\",\n  decimals: 9,\n  extensions: {\n    coingeckoId: \"solana\",\n  },\n};\n","import { WSOL } from \"./sol\";\nimport { LpTokens, SplTokens } from \"./type\";\n\nexport const MAINNET_SPL_TOKENS: SplTokens = {\n  *[Symbol.iterator]() {\n    yield* Object.values(this);\n  },\n  WSOL: {\n    ...WSOL,\n  },\n  BTC: {\n    symbol: \"BTC\",\n    name: \"Bitcoin\",\n    mint: \"9n4nbM75f5Ui33ZbPYXn59EwSgE8CGsHtAeTH5YFeJ9E\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"bitcoin\",\n    },\n  },\n  ETH: {\n    symbol: \"ETH\",\n    name: \"Ethereum\",\n    mint: \"2FPyTwcZLUg1MDrwsyoP4D6s1tM7hAkHYRjkNb5w6Pxk\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"ethereum\",\n    },\n  },\n  USDT: {\n    symbol: \"USDT\",\n    name: \"Tether\",\n    mint: \"Es9vMFrzaCERmJfrF4H2FYD4KCoNkY11McCe8BenwNYB\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"tether\",\n    },\n  },\n  WUSDT: {\n    symbol: \"WUSDT\",\n    name: \"Wrapped USDT\",\n    mint: \"BQcdHdAQW1hczDbBi9hiegXAR7A98Q9jx3X3iBBBDiq4\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"tether\",\n    },\n  },\n  USDC: {\n    symbol: \"USDC\",\n    name: \"USD Coin\",\n    mint: \"EPjFWdd5AufqSSqeM2qN1xzybapC8G4wEGGkZwyTDt1v\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"usd-coin\",\n    },\n  },\n  WUSDC: {\n    symbol: \"WUSDC\",\n    name: \"Wrapped USDC\",\n    mint: \"BXXkv6z8ykpG1yuvUDPgh732wzVHB69RnB9YgSYh3itW\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"usd-coin\",\n    },\n  },\n  YFI: {\n    symbol: \"YFI\",\n    name: \"YFI\",\n    mint: \"3JSf5tPeuscJGtaCp5giEiDhv51gQ4v3zWg8DGgyLfAB\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"yearn-finance\",\n    },\n  },\n  LINK: {\n    symbol: \"LINK\",\n    name: \"Chainlink\",\n    mint: \"CWE8jPTUYhdCTZYWPTe1o5DFqfdjzWKc9WKz6rSjQUdG\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"chainlink\",\n    },\n  },\n  XRP: {\n    symbol: \"XRP\",\n    name: \"XRP\",\n    mint: \"Ga2AXHpfAF6mv2ekZwcsJFqu7wB4NV331qNH7fW9Nst8\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"ripple\",\n    },\n  },\n  SUSHI: {\n    symbol: \"SUSHI\",\n    name: \"SUSHI\",\n    mint: \"AR1Mtgh7zAtxuxGd2XPovXPVjcSdY3i4rQYisNadjfKy\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"sushi\",\n    },\n  },\n  ALEPH: {\n    symbol: \"ALEPH\",\n    name: \"ALEPH\",\n    mint: \"CsZ5LZkDS7h9TDKjrbL7VAwQZ9nsRu8vJLhRYfmGaN8K\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"aleph\",\n    },\n  },\n  SXP: {\n    symbol: \"SXP\",\n    name: \"SXP\",\n    mint: \"SF3oTvfWzEP3DTwGSvUXRrGTvr75pdZNnBLAH9bzMuX\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"swipe\",\n    },\n  },\n  HGET: {\n    symbol: \"HGET\",\n    name: \"HGET\",\n    mint: \"BtZQfWqDGbk9Wf2rXEiWyQBdBY1etnUUn6zEphvVS7yN\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"hedget\",\n    },\n  },\n  CREAM: {\n    symbol: \"CREAM\",\n    name: \"CREAM\",\n    mint: \"5Fu5UUgbjpUvdBveb3a1JTNirL8rXtiYeSMWvKjtUNQv\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"cream-2\",\n    },\n  },\n  UNI: {\n    symbol: \"UNI\",\n    name: \"UNI\",\n    mint: \"DEhAasscXF4kEGxFgJ3bq4PpVGp5wyUxMRvn6TzGVHaw\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"uniswap\",\n    },\n  },\n  SRM: {\n    symbol: \"SRM\",\n    name: \"Serum\",\n    mint: \"SRMuApVNdxXokk5GT7XD5cUUgXMBCoAz2LHeuAoKWRt\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"serum\",\n    },\n  },\n  FTT: {\n    symbol: \"FTT\",\n    name: \"FTX Token\",\n    mint: \"AGFEad2et2ZJif9jaGpdMixQqvW5i81aBdvKe7PHNfz3\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"ftx-token\",\n    },\n  },\n  MSRM: {\n    symbol: \"MSRM\",\n    name: \"MegaSerum\",\n    mint: \"MSRMcoVyrFxnSgo5uXwone5SKcGhT1KEJMFEkMEWf9L\",\n    decimals: 0,\n    extensions: {\n      coingeckoId: \"megaserum\",\n    },\n  },\n  TOMO: {\n    symbol: \"TOMO\",\n    name: \"TOMO\",\n    mint: \"GXMvfY2jpQctDqZ9RoU3oWPhufKiCcFEfchvYumtX7jd\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"tomochain\",\n    },\n  },\n  KARMA: {\n    symbol: \"KARMA\",\n    name: \"KARMA\",\n    mint: \"EcqExpGNFBve2i1cMJUTR4bPXj4ZoqmDD2rTkeCcaTFX\",\n    decimals: 4,\n    extensions: {\n      coingeckoId: \"karma-dao\",\n    },\n  },\n  LUA: {\n    symbol: \"LUA\",\n    name: \"LUA\",\n    mint: \"EqWCKXfs3x47uVosDpTRgFniThL9Y8iCztJaapxbEaVX\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"lua-token\",\n    },\n  },\n  MATH: {\n    symbol: \"MATH\",\n    name: \"MATH\",\n    mint: \"GeDS162t9yGJuLEHPWXXGrb1zwkzinCgRwnT8vHYjKza\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"math\",\n    },\n  },\n  KEEP: {\n    symbol: \"KEEP\",\n    name: \"KEEP\",\n    mint: \"GUohe4DJUA5FKPWo3joiPgsB7yzer7LpDmt1Vhzy3Zht\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"keep-network\",\n    },\n  },\n  SWAG: {\n    symbol: \"SWAG\",\n    name: \"SWAG\",\n    mint: \"9F9fNTT6qwjsu4X4yWYKZpsbw5qT7o6yR2i57JF2jagy\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"swag-finance\",\n    },\n  },\n  FIDA: {\n    symbol: \"FIDA\",\n    name: \"Bonfida\",\n    mint: \"EchesyfXePKdLtoiZSL8pBe8Myagyy8ZRqsACNCFGnvp\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"bonfida\",\n    },\n  },\n  KIN: {\n    symbol: \"KIN\",\n    name: \"Kin\",\n    mint: \"kinXdEcpDQeHPEuQnqmUgtYykqKGVFq6CeVX5iAHJq6\",\n    decimals: 5,\n    extensions: {\n      coingeckoId: \"kin\",\n    },\n  },\n  MAPS: {\n    symbol: \"MAPS\",\n    name: \"MAPS\",\n    mint: \"MAPS41MDahZ9QdKXhVa4dWB9RuyfV4XqhyAZ8XcYepb\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"maps\",\n    },\n  },\n  OXY: {\n    symbol: \"OXY\",\n    name: \"Oxygen\",\n    mint: \"z3dn17yLaGMKffVogeFHQ9zWVcXgqgf3PQnDsNs2g6M\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"oxygen\",\n    },\n  },\n  RAY: {\n    symbol: \"RAY\",\n    name: \"Raydium\",\n    mint: \"4k3Dyjzvzp8eMZWUXbBCjEvwSkkk59S5iCNLY3QrkX6R\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"raydium\",\n    },\n  },\n  xCOPE: {\n    symbol: \"xCOPE\",\n    name: \"xCOPE\",\n    mint: \"3K6rftdAaQYMPunrtNRHgnK2UAtjm2JwyT2oCiTDouYE\",\n    decimals: 0,\n    extensions: {\n      coingeckoId: \"cope\",\n    },\n  },\n  COPE: {\n    symbol: \"COPE\",\n    name: \"Cope\",\n    mint: \"8HGyAAB1yoM1ttS7pXjHMa3dukTFGQggnFFH3hJZgzQh\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"cope\",\n    },\n  },\n  STEP: {\n    symbol: \"STEP\",\n    name: \"Step Finance\",\n    mint: \"StepAscQoEioFxxWGnh2sLBDFp9d8rvKz2Yp39iDpyT\",\n    decimals: 9,\n    extensions: {\n      coingeckoId: \"step-finance\",\n    },\n  },\n  MEDIA: {\n    symbol: \"MEDIA\",\n    name: \"Media Network\",\n    mint: \"ETAtLmCmsoiEEKfNrHKJ2kYy3MoABhU6NQvpSfij5tDs\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"media-network\",\n    },\n  },\n  ROPE: {\n    symbol: \"ROPE\",\n    name: \"Rope Token\",\n    mint: \"8PMHT4swUMtBzgHnh5U564N5sjPSiUz2cjEQzFnnP1Fo\",\n    decimals: 9,\n    extensions: {\n      coingeckoId: \"rope-token\",\n    },\n  },\n  MER: {\n    symbol: \"MER\",\n    name: \"Mercurial\",\n    mint: \"MERt85fc5boKw3BW1eYdxonEuJNvXbiMbs6hvheau5K\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"mercurial\",\n    },\n  },\n  TULIP: {\n    symbol: \"TULIP\",\n    name: \"Tulip Protocol\",\n    mint: \"TuLipcqtGVXP9XR62wM8WWCm6a9vhLs7T1uoWBk6FDs\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"solfarm\",\n    },\n  },\n  SNY: {\n    symbol: \"SNY\",\n    name: \"SNY\",\n    mint: \"4dmKkXNHdgYsXqBHCuMikNQWwVomZURhYvkkX5c4pQ7y\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"synthetify-token\",\n    },\n  },\n  SLRS: {\n    symbol: \"SLRS\",\n    name: \"SLRS\",\n    mint: \"SLRSSpSLUTP7okbCUBYStWCo1vUgyt775faPqz8HUMr\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"solrise-finance\",\n    },\n  },\n  WOO: {\n    symbol: \"WOO\",\n    name: \"WOO Network\",\n    mint: \"E5rk3nmgLUuKUiS94gg4bpWwWwyjCMtddsAXkTFLtHEy\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"woo-network\",\n    },\n  },\n  BOP: {\n    symbol: \"BOP\",\n    name: \"Boring Protocol\",\n    mint: \"BLwTnYKqf7u4qjgZrrsKeNs2EzWkMLqVCu6j8iHyrNA3\",\n    decimals: 8,\n    extensions: {\n      coingeckoId: \"boring-protocol\",\n    },\n  },\n  SAMO: {\n    symbol: \"SAMO\",\n    name: \"Samoyedcoin\",\n    mint: \"7xKXtg2CW87d97TXJSDpbD5jBkheTqA83TZRuJosgAsU\",\n    decimals: 9,\n    extensions: {\n      coingeckoId: \"samoyedcoin\",\n    },\n  },\n  renBTC: {\n    symbol: \"renBTC\",\n    name: \"renBTC\",\n    mint: \"CDJWUqTcYTVAKXAVXoQZFes5JUFc7owSeq7eMQcDSbo5\",\n    decimals: 8,\n    extensions: {\n      coingeckoId: \"renbtc\",\n    },\n  },\n  renDOGE: {\n    symbol: \"renDOGE\",\n    name: \"renDOGE\",\n    mint: \"ArUkYE2XDKzqy77PRRGjo4wREWwqk6RXTfM9NeqzPvjU\",\n    decimals: 8,\n    extensions: {\n      coingeckoId: \"rendoge\",\n    },\n  },\n  LIKE: {\n    symbol: \"LIKE\",\n    name: \"Only1\",\n    mint: \"3bRTivrVsitbmCTGtqwp7hxXPsybkjn4XLNtPsHqa3zR\",\n    decimals: 9,\n    extensions: {\n      coingeckoId: \"only1\",\n    },\n  },\n  DXL: {\n    symbol: \"DXL\",\n    name: \"Dexlab\",\n    mint: \"GsNzxJfFn6zQdJGeYsupJWzUAm57Ba7335mfhWvFiE9Z\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"dexlab\",\n    },\n  },\n  mSOL: {\n    symbol: \"mSOL\",\n    name: \"Marinade staked SOL\",\n    mint: \"mSoLzYCxHdYgdzU16g5QSh3i5K3z3KZK7ytfqcJm7So\",\n    decimals: 9,\n    extensions: {\n      coingeckoId: \"msol\",\n    },\n  },\n  PAI: {\n    symbol: \"PAI\",\n    name: \"Parrot USD\",\n    mint: \"Ea5SjE2Y6yvCeW5dYTn7PYMuW5ikXkvbGdcmSnXeaLjS\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"parrot-usd\",\n    },\n  },\n  PORT: {\n    symbol: \"PORT\",\n    name: \"Port Finance\",\n    mint: \"PoRTjZMPXb9T7dyU7tpLEZRQj7e6ssfAE62j2oQuc6y\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"port-finance\",\n    },\n  },\n  MNGO: {\n    symbol: \"MNGO\",\n    name: \"Mango\",\n    mint: \"MangoCzJ36AjZyKwVj3VnYU4GTonjfVEnJmvvWaxLac\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"mango-markets\",\n    },\n  },\n  CRP: {\n    symbol: \"CRP\",\n    name: \"CropperFinance\",\n    mint: \"DubwWZNWiNGMMeeQHPnMATNj77YZPZSAz2WVR5WjLJqz\",\n    decimals: 9,\n    extensions: {\n      coingeckoId: \"cropperfinance\",\n    },\n  },\n  ATLAS: {\n    symbol: \"ATLAS\",\n    name: \"Star Atlas\",\n    mint: \"ATLASXmbPQxBUYbxPsV97usA3fPQYEqzQBUHgiFCUsXx\",\n    decimals: 8,\n    extensions: {\n      coingeckoId: \"star-atlas\",\n    },\n  },\n  POLIS: {\n    symbol: \"POLIS\",\n    name: \"Star Atlas DAO\",\n    mint: \"poLisWXnNRwC6oBu1vHiuKQzFjGL4XDSu4g9qjz9qVk\",\n    decimals: 8,\n    extensions: {\n      coingeckoId: \"star-atlas-dao\",\n    },\n  },\n  GRAPE: {\n    symbol: \"GRAPE\",\n    name: \"Grape Protocol\",\n    mint: \"8upjSpvjcdpuzhfR1zriwg5NXkwDruejqNE9WNbPRtyA\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"grape-2\",\n    },\n  },\n  GENE: {\n    symbol: \"GENE\",\n    name: \"Genopets\",\n    mint: \"GENEtH5amGSi8kHAtQoezp1XEXwZJ8vcuePYnXdKrMYz\",\n    decimals: 9,\n    extensions: {\n      coingeckoId: \"genopets\",\n    },\n  },\n  DFL: {\n    symbol: \"DFL\",\n    name: \"DeFi Land\",\n    mint: \"DFL1zNkaGPWm1BqAVqRjCZvHmwTFrEaJtbzJWgseoNJh\",\n    decimals: 9,\n    extensions: {\n      coingeckoId: \"defi-land\",\n    },\n  },\n  CHEEMS: {\n    symbol: \"CHEEMS\",\n    name: \"Cheems\",\n    mint: \"3FoUAsGDbvTD6YZ4wVKJgTB76onJUKz7GPEBNiR5b8wc\",\n    decimals: 4,\n    extensions: {\n      coingeckoId: \"cheems\",\n    },\n  },\n  stSOL: {\n    symbol: \"stSOL\",\n    name: \"Lido Staked SOL\",\n    mint: \"7dHbWXmci3dT8UFYWYZweBLXgycu7Y3iL6trKn1Y7ARj\",\n    decimals: 9,\n    extensions: {\n      coingeckoId: \"lido-staked-sol\",\n    },\n  },\n  LARIX: {\n    symbol: \"LARIX\",\n    name: \"Larix\",\n    mint: \"Lrxqnh6ZHKbGy3dcrCED43nsoLkM1LTzU2jRfWe8qUC\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"larix\",\n    },\n  },\n  RIN: {\n    symbol: \"RIN\",\n    name: \"Aldrin\",\n    mint: \"E5ndSkaB17Dm7CsD22dvcjfrYSDLCxFcMd6z8ddCk5wp\",\n    decimals: 9,\n    extensions: {\n      coingeckoId: \"aldrin\",\n    },\n  },\n  APEX: {\n    symbol: \"APEX\",\n    name: \"ApeXit Finance\",\n    mint: \"51tMb3zBKDiQhNwGqpgwbavaGH54mk8fXFzxTc1xnasg\",\n    decimals: 9,\n    extensions: {\n      coingeckoId: \"apexit-finance\",\n    },\n  },\n  MNDE: {\n    symbol: \"MNDE\",\n    name: \"Marinade\",\n    mint: \"MNDEFzGvMt87ueuHvVU9VcTqsAP5b3fTGPsHuuPA5ey\",\n    decimals: 9,\n    extensions: {\n      coingeckoId: \"marinade\",\n    },\n  },\n  LIQ: {\n    symbol: \"LIQ\",\n    name: \"LIQ Protocol\",\n    mint: \"4wjPQJ6PrkC4dHhYghwJzGBVP78DkBzA2U3kHoFNBuhj\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"liq-protocol\",\n    },\n  },\n  WAG: {\n    symbol: \"WAG\",\n    name: \"Waggle Network\",\n    mint: \"5tN42n9vMi6ubp67Uy4NnmM5DMZYN8aS8GeB3bEDHr6E\",\n    decimals: 9,\n    extensions: {\n      coingeckoId: \"waggle-network\",\n    },\n  },\n  wLDO: {\n    symbol: \"wLDO\",\n    name: \"wLDO\",\n    mint: \"HZRCwxP2Vq9PCpPXooayhJ2bxTpo5xfpQrwB1svh332p\",\n    decimals: 8,\n    extensions: {},\n  },\n  SLIM: {\n    symbol: \"SLIM\",\n    name: \"Solanium\",\n    mint: \"xxxxa1sKNGwFtw2kFn8XauW9xq8hBZ5kVtcSesTT9fW\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"solanium\",\n    },\n  },\n  PRT: {\n    symbol: \"PRT\",\n    name: \"Parrot Protocol\",\n    mint: \"PRT88RkA4Kg5z7pKnezeNH4mafTvtQdfFgpQTGRjz44\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"parrot-protocol\",\n    },\n  },\n  SBR: {\n    symbol: \"SBR\",\n    name: \"SBR\",\n    mint: \"Saber2gLauYim4Mvftnrasomsv6NvAuncvMEZwcLpD1\",\n    decimals: 6,\n    extensions: {},\n  },\n  FAB: {\n    symbol: \"FAB\",\n    name: \"Fabric\",\n    mint: \"EdAhkbj5nF9sRM7XN7ewuW8C9XEUMs8P7cnoQ57SYE96\",\n    decimals: 9,\n    extensions: {\n      coingeckoId: \"fabric\",\n    },\n  },\n  ABR: {\n    symbol: \"ABR\",\n    name: \"Allbridge\",\n    mint: \"a11bdAAuV8iB2fu7X6AxAvDTo1QZ8FXB3kk5eecdasp\",\n    decimals: 9,\n    extensions: {\n      coingeckoId: \"allbridge\",\n    },\n  },\n  IVN: {\n    symbol: \"IVN\",\n    name: \"Investin\",\n    mint: \"iVNcrNE9BRZBC9Aqf753iZiZfbszeAVUoikgT9yvr2a\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"investin\",\n    },\n  },\n  CYS: {\n    symbol: \"CYS\",\n    name: \"Cyclos\",\n    mint: \"BRLsMczKuaR5w9vSubF4j8HwEGGprVAyyVgS4EX7DKEg\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"cyclos\",\n    },\n  },\n  FRKT: {\n    symbol: \"FRKT\",\n    name: \"FRAKT Token\",\n    mint: \"ErGB9xa24Szxbk1M28u2Tx8rKPqzL6BroNkkzk5rG4zj\",\n    decimals: 8,\n    extensions: {\n      coingeckoId: \"frakt-token\",\n    },\n  },\n  AURY: {\n    symbol: \"AURY\",\n    name: \"Aurory\",\n    mint: \"AURYydfxJib1ZkTir1Jn1J9ECYUtjb6rKQVmtYaixWPP\",\n    decimals: 9,\n    extensions: {\n      coingeckoId: \"aurory\",\n    },\n  },\n  SYP: {\n    symbol: \"SYP\",\n    name: \"Sypool\",\n    mint: \"FnKE9n6aGjQoNWRBZXy4RW6LZVao7qwBonUbiD7edUmZ\",\n    decimals: 9,\n    extensions: {\n      coingeckoId: \"sypool\",\n    },\n  },\n  WOOF: {\n    symbol: \"WOOF\",\n    name: \"WOOF\",\n    mint: \"9nEqaUcb16sQ3Tn1psbkWqyhPdLmfHWjKGymREjsAgTE\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"woof-token\",\n    },\n  },\n  ORCA: {\n    symbol: \"ORCA\",\n    name: \"Orca\",\n    mint: \"orcaEKTdK7LKz57vaAYr9QeNsVEPfiu6QeMU1kektZE\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"orca\",\n    },\n  },\n  SLND: {\n    symbol: \"SLND\",\n    name: \"Solend\",\n    mint: \"SLNDpmoWTVADgEdndyvWzroNL7zSi1dF9PC3xHGtPwp\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"solend\",\n    },\n  },\n  weWETH: {\n    symbol: \"weWETH\",\n    name: \"weWETH\",\n    mint: \"7vfCXTUXx5WJV5JADk17DUJ4ksgau7utNKj4b963voxs\",\n    decimals: 8,\n    extensions: {},\n  },\n  weUNI: {\n    symbol: \"weUNI\",\n    name: \"weUNI\",\n    mint: \"8FU95xFJhUUkyyCLU13HSzDLs7oC4QZdXQHL6SCeab36\",\n    decimals: 8,\n    extensions: {},\n  },\n  weSUSHI: {\n    symbol: \"weSUSHI\",\n    name: \"weSUSHI\",\n    mint: \"ChVzxWRmrTeSgwd3Ui3UumcN8KX7VK3WaD4KGeSKpypj\",\n    decimals: 8,\n    extensions: {},\n  },\n  GOFX: {\n    symbol: \"GOFX\",\n    name: \"GooseFX\",\n    mint: \"GFX1ZjR2P15tmrSwow6FjyDYcEkoFb4p4gJCpLBjaxHD\",\n    decimals: 9,\n    extensions: {\n      coingeckoId: \"goosefx\",\n    },\n  },\n  IN: {\n    symbol: \"IN\",\n    name: \"Invictus\",\n    mint: \"inL8PMVd6iiW3RCBJnr5AsrRN6nqr4BTrcNuQWQSkvY\",\n    decimals: 9,\n    extensions: {\n      coingeckoId: \"invictus\",\n    },\n  },\n  weDYDX: {\n    symbol: \"weDYDX\",\n    name: \"weDYDX\",\n    mint: \"4Hx6Bj56eGyw8EJrrheM6LBQAvVYRikYCWsALeTrwyRU\",\n    decimals: 8,\n    extensions: {},\n  },\n  STARS: {\n    symbol: \"STARS\",\n    name: \"StarLaunch\",\n    mint: \"HCgybxq5Upy8Mccihrp7EsmwwFqYZtrHrsmsKwtGXLgW\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"starlaunch\",\n    },\n  },\n  weAXS: {\n    symbol: \"weAXS\",\n    name: \"weAXS\",\n    mint: \"HysWcbHiYY9888pHbaqhwLYZQeZrcQMXKQWRqS7zcPK5\",\n    decimals: 8,\n    extensions: {},\n  },\n  weSHIB: {\n    symbol: \"weSHIB\",\n    name: \"weSHIB\",\n    mint: \"CiKu4eHsVrc1eueVQeHn7qhXTcVu95gSQmBpX4utjL9z\",\n    decimals: 8,\n    extensions: {},\n  },\n  OXS: {\n    symbol: \"OXS\",\n    name: \"Oxbull Solana\",\n    mint: \"4TGxgCSJQx2GQk9oHZ8dC5m3JNXTYZHjXumKAW3vLnNx\",\n    decimals: 9,\n    extensions: {\n      coingeckoId: \"oxbull-solana\",\n    },\n  },\n  CWAR: {\n    symbol: \"CWAR\",\n    name: \"Cryowar\",\n    mint: \"HfYFjMKNZygfMC8LsQ8LtpPsPxEJoXJx4M6tqi75Hajo\",\n    decimals: 9,\n    extensions: {\n      coingeckoId: \"cryowar-token\",\n    },\n  },\n  UPS: {\n    symbol: \"UPS\",\n    name: \"UPFI Network\",\n    mint: \"EwJN2GqUGXXzYmoAciwuABtorHczTA5LqbukKXV1viH7\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"upfi-network\",\n    },\n  },\n  weSAND: {\n    symbol: \"weSAND\",\n    name: \"weSAND\",\n    mint: \"49c7WuCZkQgc3M4qH8WuEUNXfgwupZf1xqWkDQ7gjRGt\",\n    decimals: 8,\n    extensions: {},\n  },\n  weMANA: {\n    symbol: \"weMANA\",\n    name: \"weMANA\",\n    mint: \"7dgHoN8wBZCc5wbnQ2C47TDnBMAxG4Q5L3KjP67z8kNi\",\n    decimals: 8,\n    extensions: {},\n  },\n  CAVE: {\n    symbol: \"CAVE\",\n    name: \"Crypto Cavemen\",\n    mint: \"4SZjjNABoqhbd4hnapbvoEPEqT8mnNkfbEoAwALf1V8t\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"cave\",\n    },\n  },\n  JSOL: {\n    symbol: \"JSOL\",\n    name: \"JPool\",\n    mint: \"7Q2afV64in6N6SeZsAAB81TJzwDoD6zpqmHkzi9Dcavn\",\n    decimals: 9,\n    extensions: {\n      coingeckoId: \"jpool\",\n    },\n  },\n  APT: {\n    symbol: \"APT\",\n    name: \"Apricot\",\n    mint: \"APTtJyaRX5yGTsJU522N4VYWg3vCvSb65eam5GrPT5Rt\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"apricot\",\n    },\n  },\n  SONAR: {\n    symbol: \"SONAR\",\n    name: \"SonarWatch\",\n    mint: \"sonarX4VtVkQemriJeLm6CKeW3GDMyiBnnAEMw1MRAE\",\n    decimals: 9,\n    extensions: {\n      coingeckoId: \"sonarwatch\",\n    },\n  },\n  SHILL: {\n    symbol: \"SHILL\",\n    name: \"SHILL Token\",\n    mint: \"6cVgJUqo4nmvQpbgrDZwyfd6RwWw5bfnCamS3M9N1fd\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"shill-token\",\n    },\n  },\n  TTT: {\n    symbol: \"TTT\",\n    name: \"TabTrader\",\n    mint: \"FNFKRV3V8DtA3gVJN6UshMiLGYA8izxFwkNWmJbFjmRj\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"tabtrader\",\n    },\n  },\n  BOKU: {\n    symbol: \"BOKU\",\n    name: \"Boryoku Dragonz\",\n    mint: \"CN7qFa5iYkHz99PTctvT4xXUHnxwjQ5MHxCuTJtPN5uS\",\n    decimals: 9,\n    extensions: {\n      coingeckoId: \"boku\",\n    },\n  },\n  MIMO: {\n    symbol: \"MIMO\",\n    name: \"Million Monke\",\n    mint: \"9TE7ebz1dsFo1uQ2T4oYAKSm39Y6fWuHrd6Uk6XaiD16\",\n    decimals: 9,\n    extensions: {\n      coingeckoId: \"million-monke\",\n    },\n  },\n  wbWBNB: {\n    symbol: \"wbWBNB\",\n    name: \"wbWBNB\",\n    mint: \"9gP2kCy3wA1ctvYWQk75guqXuHfrEomqydHLtcTCqiLa\",\n    decimals: 8,\n    extensions: {},\n  },\n  wePEOPLE: {\n    symbol: \"wePEOPLE\",\n    name: \"wePEOPLE\",\n    mint: \"CobcsUrt3p91FwvULYKorQejgsm5HoQdv5T8RUZ6PnLA\",\n    decimals: 8,\n    extensions: {},\n  },\n  XTAG: {\n    symbol: \"XTAG\",\n    name: \"xHashtag\",\n    mint: \"5gs8nf4wojB5EXgDUWNLwXpknzgV2YWDhveAeBZpVLbp\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"xhashtag\",\n    },\n  },\n  KKO: {\n    symbol: \"KKO\",\n    name: \"Kineko\",\n    mint: \"kiNeKo77w1WBEzFFCXrTDRWGRWGP8yHvKC9rX6dqjQh\",\n    decimals: 9,\n    extensions: {\n      coingeckoId: \"kineko\",\n    },\n  },\n  VI: {\n    symbol: \"VI\",\n    name: \"Vybit\",\n    mint: \"7zBWymxbZt7PVHQzfi3i85frc1YRiQc23K7bh3gos8ZC\",\n    decimals: 9,\n    extensions: {\n      coingeckoId: \"vybit\",\n    },\n  },\n  SOLC: {\n    symbol: \"SOLC\",\n    name: \"Solcubator\",\n    mint: \"Bx1fDtvTN6NvE4kjdPHQXtmGSg582bZx9fGy4DQNMmAT\",\n    decimals: 9,\n    extensions: {\n      coingeckoId: \"solcubator\",\n    },\n  },\n  STR: {\n    symbol: \"STR\",\n    name: \"Solster\",\n    mint: \"9zoqdwEBKWEi9G5Ze8BSkdmppxGgVv1Kw4LuigDiNr9m\",\n    decimals: 9,\n    extensions: {\n      coingeckoId: \"solster\",\n    },\n  },\n  SPWN: {\n    symbol: \"SPWN\",\n    name: \"Bitspawn\",\n    mint: \"5U9QqCPhqXAJcEv9uyzFJd5zhN93vuPk1aNNkXnUfPnt\",\n    decimals: 9,\n    extensions: {\n      coingeckoId: \"bitspawn\",\n    },\n  },\n  ISOLA: {\n    symbol: \"ISOLA\",\n    name: \"Intersola\",\n    mint: \"333iHoRM2Awhf9uVZtSyTfU8AekdGrgQePZsKMFPgKmS\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"intersola\",\n    },\n  },\n  RUN: {\n    symbol: \"RUN\",\n    name: \"Run\",\n    mint: \"6F9XriABHfWhit6zmMUYAQBSy6XK5VF1cHXuW5LDpRtC\",\n    decimals: 9,\n    extensions: {\n      coingeckoId: \"run\",\n    },\n  },\n  REAL: {\n    symbol: \"REAL\",\n    name: \"Realy Metaverse\",\n    mint: \"AD27ov5fVU2XzwsbvnFvb1JpCBaCB5dRXrczV9CqSVGb\",\n    decimals: 9,\n    extensions: {\n      coingeckoId: \"realy-metaverse\",\n    },\n  },\n  CRWNY: {\n    symbol: \"CRWNY\",\n    name: \"CRWNY\",\n    mint: \"CRWNYkqdgvhGGae9CKfNka58j6QQkaD5bLhKXvUYqnc1\",\n    decimals: 6,\n    extensions: {},\n  },\n  BLOCK: {\n    symbol: \"BLOCK\",\n    name: \"Blockasset\",\n    mint: \"NFTUkR4u7wKxy9QLaX2TGvd9oZSWoMo4jqSJqdMb7Nk\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"blockasset\",\n    },\n  },\n  SOLAR: {\n    symbol: \"SOLAR\",\n    name: \"Solar\",\n    mint: \"2wmKXX1xsxLfrvjEPrt2UHiqj8Gbzwxvffr9qmNjsw8g\",\n    decimals: 9,\n    extensions: {\n      coingeckoId: \"solar\",\n    },\n  },\n  BASIS: {\n    symbol: \"BASIS\",\n    name: \"basis.markets\",\n    mint: \"Basis9oJw9j8cw53oMV7iqsgo6ihi9ALw4QR31rcjUJa\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"basis-markets\",\n    },\n  },\n  SOLX: {\n    symbol: \"SOLX\",\n    name: \"Soldex\",\n    mint: \"CH74tuRLTYcxG7qNJCsV9rghfLXJCQJbsu7i52a8F1Gn\",\n    decimals: 9,\n    extensions: {\n      coingeckoId: \"soldex\",\n    },\n  },\n  CHICKS: {\n    symbol: \"CHICKS\",\n    name: \"SolChicks Token\",\n    mint: \"cxxShYRVcepDudXhe7U62QHvw8uBJoKFifmzggGKVC2\",\n    decimals: 9,\n    extensions: {\n      coingeckoId: \"solchicks-token\",\n    },\n  },\n  GST: {\n    symbol: \"GST\",\n    name: \"GST\",\n    mint: \"AFbX8oGjGpmVFywbVouvhQSRmiW2aR1mohfahi4Y2AdB\",\n    decimals: 9,\n    extensions: {\n      coingeckoId: \"gst\",\n    },\n  },\n  MBS: {\n    symbol: \"MBS\",\n    name: \"MonkeyBall\",\n    mint: \"Fm9rHUTF5v3hwMLbStjZXqNBBoZyGriQaFM6sTFz3K8A\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"monkeyball\",\n    },\n  },\n  PRISM: {\n    symbol: \"PRISM\",\n    name: \"Prism\",\n    mint: \"PRSMNsEPqhGVCH1TtWiJqPjJyh2cKrLostPZTNy1o5x\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"prism\",\n    },\n  },\n  MEAN: {\n    symbol: \"MEAN\",\n    name: \"Meanfi\",\n    mint: \"MEANeD3XDdUmNMsRGjASkSWdC8prLYsoRJ61pPeHctD\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"meanfi\",\n    },\n  },\n  TINY: {\n    symbol: \"TINY\",\n    name: \"Tiny Colony\",\n    mint: \"HKfs24UEDQpHS5hUyKYkHd9q7GY5UQ679q2bokeL2whu\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"tiny-colony\",\n    },\n  },\n  SHDW: {\n    symbol: \"SHDW\",\n    name: \"GenesysGo Shadow\",\n    mint: \"SHDWyBxihqiCj6YekG2GUr7wqKLeLAMK1gHZck9pL6y\",\n    decimals: 9,\n    extensions: {\n      coingeckoId: \"genesysgo-shadow\",\n    },\n  },\n  SCY: {\n    symbol: \"SCY\",\n    name: \"Synchrony\",\n    mint: \"SCYfrGCw8aDiqdgcpdGjV6jp4UVVQLuphxTDLNWu36f\",\n    decimals: 9,\n    extensions: {\n      coingeckoId: \"synchrony\",\n    },\n  },\n  SLC: {\n    symbol: \"SLC\",\n    name: \"Solice\",\n    mint: \"METAmTMXwdb8gYzyCPfXXFmZZw4rUsXX58PNsDg7zjL\",\n    decimals: 6,\n    extensions: {\n      coingeckoId: \"solice\",\n    },\n  },\n};\n\nexport const MAINNET_LP_TOKENS: LpTokens = {\n  *[Symbol.iterator]() {\n    yield* Object.values(this);\n  },\n  FIDA_RAY_V4: {\n    symbol: \"FIDA-RAY\",\n    name: \"FIDA-RAY V4 LP\",\n    mint: \"DsBuznXRTmzvEdb36Dx3aVLVo1XmH7r1PRZUFugLPTFv\",\n\n    base: MAINNET_SPL_TOKENS.FIDA,\n    quote: MAINNET_SPL_TOKENS.RAY,\n    decimals: MAINNET_SPL_TOKENS.FIDA.decimals,\n\n    version: 4,\n  },\n  OXY_RAY_V4: {\n    symbol: \"OXY-RAY\",\n    name: \"OXY-RAY V4 LP\",\n    mint: \"FwaX9W7iThTZH5MFeasxdLpxTVxRcM7ZHieTCnYog8Yb\",\n\n    base: MAINNET_SPL_TOKENS.OXY,\n    quote: MAINNET_SPL_TOKENS.RAY,\n    decimals: MAINNET_SPL_TOKENS.OXY.decimals,\n\n    version: 4,\n  },\n  MAPS_RAY_V4: {\n    symbol: \"MAPS-RAY\",\n    name: \"MAPS-RAY V4 LP\",\n    mint: \"CcKK8srfVdTSsFGV3VLBb2YDbzF4T4NM2C3UEjC39RLP\",\n\n    base: MAINNET_SPL_TOKENS.MAPS,\n    quote: MAINNET_SPL_TOKENS.RAY,\n    decimals: MAINNET_SPL_TOKENS.MAPS.decimals,\n\n    version: 4,\n  },\n  KIN_RAY_V4: {\n    symbol: \"KIN-RAY\",\n    name: \"KIN-RAY V4 LP\",\n    mint: \"CHT8sft3h3gpLYbCcZ9o27mT5s3Z6VifBVbUiDvprHPW\",\n\n    base: MAINNET_SPL_TOKENS.KIN,\n    quote: MAINNET_SPL_TOKENS.RAY,\n    // mistake, a special one\n    decimals: 6,\n\n    version: 4,\n  },\n  RAY_USDT_V4: {\n    symbol: \"RAY-USDT\",\n    name: \"RAY-USDT V4 LP\",\n    mint: \"C3sT1R3nsw4AVdepvLTLKr5Gvszr7jufyBWUCvy4TUvT\",\n\n    base: MAINNET_SPL_TOKENS.RAY,\n    quote: MAINNET_SPL_TOKENS.USDT,\n    decimals: MAINNET_SPL_TOKENS.RAY.decimals,\n\n    version: 4,\n  },\n  SOL_USDC_V4: {\n    symbol: \"SOL-USDC\",\n    name: \"SOL-USDC V4 LP\",\n    mint: \"8HoQnePLqPj4M7PUDzfw8e3Ymdwgc7NLGnaTUapubyvu\",\n\n    base: MAINNET_SPL_TOKENS.WSOL,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.WSOL.decimals,\n\n    version: 4,\n  },\n  YFI_USDC_V4: {\n    symbol: \"YFI-USDC\",\n    name: \"YFI-USDC V4 LP\",\n    mint: \"865j7iMmRRycSYUXzJ33ZcvLiX9JHvaLidasCyUyKaRE\",\n\n    base: MAINNET_SPL_TOKENS.YFI,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.YFI.decimals,\n\n    version: 4,\n  },\n  SRM_USDC_V4: {\n    symbol: \"SRM-USDC\",\n    name: \"SRM-USDC V4 LP\",\n    mint: \"9XnZd82j34KxNLgQfz29jGbYdxsYznTWRpvZE3SRE7JG\",\n\n    base: MAINNET_SPL_TOKENS.SRM,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.SRM.decimals,\n\n    version: 4,\n  },\n  FTT_USDC_V4: {\n    symbol: \"FTT-USDC\",\n    name: \"FTT-USDC V4 LP\",\n    mint: \"75dCoKfUHLUuZ4qEh46ovsxfgWhB4icc3SintzWRedT9\",\n\n    base: MAINNET_SPL_TOKENS.FTT,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.FTT.decimals,\n\n    version: 4,\n  },\n  BTC_USDC_V4: {\n    symbol: \"BTC-USDC\",\n    name: \"BTC-USDC V4 LP\",\n    mint: \"2hMdRdVWZqetQsaHG8kQjdZinEMBz75vsoWTCob1ijXu\",\n\n    base: MAINNET_SPL_TOKENS.BTC,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.BTC.decimals,\n\n    version: 4,\n  },\n  SUSHI_USDC_V4: {\n    symbol: \"SUSHI-USDC\",\n    name: \"SUSHI-USDC V4 LP\",\n    mint: \"2QVjeR9d2PbSf8em8NE8zWd8RYHjFtucDUdDgdbDD2h2\",\n\n    base: MAINNET_SPL_TOKENS.SUSHI,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.SUSHI.decimals,\n\n    version: 4,\n  },\n  TOMO_USDC_V4: {\n    symbol: \"TOMO-USDC\",\n    name: \"TOMO-USDC V4 LP\",\n    mint: \"CHyUpQFeW456zcr5XEh4RZiibH8Dzocs6Wbgz9aWpXnQ\",\n\n    base: MAINNET_SPL_TOKENS.TOMO,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.TOMO.decimals,\n\n    version: 4,\n  },\n  LINK_USDC_V4: {\n    symbol: \"LINK-USDC\",\n    name: \"LINK-USDC V4 LP\",\n    mint: \"BqjoYjqKrXtfBKXeaWeAT5sYCy7wsAYf3XjgDWsHSBRs\",\n\n    base: MAINNET_SPL_TOKENS.LINK,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.LINK.decimals,\n\n    version: 4,\n  },\n  ETH_USDC_V4: {\n    symbol: \"ETH-USDC\",\n    name: \"ETH-USDC V4 LP\",\n    mint: \"13PoKid6cZop4sj2GfoBeujnGfthUbTERdE5tpLCDLEY\",\n\n    base: MAINNET_SPL_TOKENS.ETH,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.ETH.decimals,\n\n    version: 4,\n  },\n  xCOPE_USDC_V4: {\n    symbol: \"xCOPE-USDC\",\n    name: \"xCOPE-USDC V4 LP\",\n    mint: \"2Vyyeuyd15Gp8aH6uKE72c4hxc8TVSLibxDP9vzspQWG\",\n\n    base: MAINNET_SPL_TOKENS.xCOPE,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.xCOPE.decimals,\n\n    version: 4,\n  },\n  SOL_USDT_V4: {\n    symbol: \"SOL-USDT\",\n    name: \"SOL-USDT V4 LP\",\n    mint: \"Epm4KfTj4DMrvqn6Bwg2Tr2N8vhQuNbuK8bESFp4k33K\",\n\n    base: MAINNET_SPL_TOKENS.WSOL,\n    quote: MAINNET_SPL_TOKENS.USDT,\n    decimals: MAINNET_SPL_TOKENS.WSOL.decimals,\n\n    version: 4,\n  },\n  YFI_USDT_V4: {\n    symbol: \"YFI-USDT\",\n    name: \"YFI-USDT V4 LP\",\n    mint: \"FA1i7fej1pAbQbnY8NbyYUsTrWcasTyipKreDgy1Mgku\",\n\n    base: MAINNET_SPL_TOKENS.YFI,\n    quote: MAINNET_SPL_TOKENS.USDT,\n    decimals: MAINNET_SPL_TOKENS.YFI.decimals,\n\n    version: 4,\n  },\n  SRM_USDT_V4: {\n    symbol: \"SRM-USDT\",\n    name: \"SRM-USDT V4 LP\",\n    mint: \"HYSAu42BFejBS77jZAZdNAWa3iVcbSRJSzp3wtqCbWwv\",\n\n    base: MAINNET_SPL_TOKENS.SRM,\n    quote: MAINNET_SPL_TOKENS.USDT,\n    decimals: MAINNET_SPL_TOKENS.SRM.decimals,\n\n    version: 4,\n  },\n  FTT_USDT_V4: {\n    symbol: \"FTT-USDT\",\n    name: \"FTT-USDT V4 LP\",\n    mint: \"2cTCiUnect5Lap2sk19xLby7aajNDYseFhC9Pigou11z\",\n\n    base: MAINNET_SPL_TOKENS.FTT,\n    quote: MAINNET_SPL_TOKENS.USDT,\n    decimals: MAINNET_SPL_TOKENS.FTT.decimals,\n\n    version: 4,\n  },\n  BTC_USDT_V4: {\n    symbol: \"BTC-USDT\",\n    name: \"BTC-USDT V4 LP\",\n    mint: \"DgGuvR9GSHimopo3Gc7gfkbKamLKrdyzWkq5yqA6LqYS\",\n\n    base: MAINNET_SPL_TOKENS.BTC,\n    quote: MAINNET_SPL_TOKENS.USDT,\n    decimals: MAINNET_SPL_TOKENS.BTC.decimals,\n\n    version: 4,\n  },\n  SUSHI_USDT_V4: {\n    symbol: \"SUSHI-USDT\",\n    name: \"SUSHI-USDT V4 LP\",\n    mint: \"Ba26poEYDy6P2o95AJUsewXgZ8DM9BCsmnU9hmC9i4Ki\",\n\n    base: MAINNET_SPL_TOKENS.SUSHI,\n    quote: MAINNET_SPL_TOKENS.USDT,\n    decimals: MAINNET_SPL_TOKENS.SUSHI.decimals,\n\n    version: 4,\n  },\n  TOMO_USDT_V4: {\n    symbol: \"TOMO-USDT\",\n    name: \"TOMO-USDT V4 LP\",\n    mint: \"D3iGro1vn6PWJXo9QAPj3dfta6dKkHHnmiiym2EfsAmi\",\n\n    base: MAINNET_SPL_TOKENS.TOMO,\n    quote: MAINNET_SPL_TOKENS.USDT,\n    decimals: MAINNET_SPL_TOKENS.TOMO.decimals,\n\n    version: 4,\n  },\n  LINK_USDT_V4: {\n    symbol: \"LINK-USDT\",\n    name: \"LINK-USDT V4 LP\",\n    mint: \"Dr12Sgt9gkY8WU5tRkgZf1TkVWJbvjYuPAhR3aDCwiiX\",\n\n    base: MAINNET_SPL_TOKENS.LINK,\n    quote: MAINNET_SPL_TOKENS.USDT,\n    decimals: MAINNET_SPL_TOKENS.LINK.decimals,\n\n    version: 4,\n  },\n  ETH_USDT_V4: {\n    symbol: \"ETH-USDT\",\n    name: \"ETH-USDT V4 LP\",\n    mint: \"nPrB78ETY8661fUgohpuVusNCZnedYCgghzRJzxWnVb\",\n\n    base: MAINNET_SPL_TOKENS.ETH,\n    quote: MAINNET_SPL_TOKENS.USDT,\n    decimals: MAINNET_SPL_TOKENS.ETH.decimals,\n\n    version: 4,\n  },\n  YFI_SRM_V4: {\n    symbol: \"YFI-SRM\",\n    name: \"YFI-SRM V4 LP\",\n    mint: \"EGJht91R7dKpCj8wzALkjmNdUUUcQgodqWCYweyKcRcV\",\n\n    base: MAINNET_SPL_TOKENS.YFI,\n    quote: MAINNET_SPL_TOKENS.SRM,\n    decimals: MAINNET_SPL_TOKENS.YFI.decimals,\n\n    version: 4,\n  },\n  FTT_SRM_V4: {\n    symbol: \"FTT-SRM\",\n    name: \"FTT-SRM V4 LP\",\n    mint: \"AsDuPg9MgPtt3jfoyctUCUgsvwqAN6RZPftqoeiPDefM\",\n\n    base: MAINNET_SPL_TOKENS.FTT,\n    quote: MAINNET_SPL_TOKENS.SRM,\n    decimals: MAINNET_SPL_TOKENS.FTT.decimals,\n\n    version: 4,\n  },\n  BTC_SRM_V4: {\n    symbol: \"BTC-SRM\",\n    name: \"BTC-SRM V4 LP\",\n    mint: \"AGHQxXb3GSzeiLTcLtXMS2D5GGDZxsB2fZYZxSB5weqB\",\n\n    base: MAINNET_SPL_TOKENS.BTC,\n    quote: MAINNET_SPL_TOKENS.SRM,\n    decimals: MAINNET_SPL_TOKENS.BTC.decimals,\n\n    version: 4,\n  },\n  SUSHI_SRM_V4: {\n    symbol: \"SUSHI-SRM\",\n    name: \"SUSHI-SRM V4 LP\",\n    mint: \"3HYhUnUdV67j1vn8fu7ExuVGy5dJozHEyWvqEstDbWwE\",\n\n    base: MAINNET_SPL_TOKENS.SUSHI,\n    quote: MAINNET_SPL_TOKENS.SRM,\n    decimals: MAINNET_SPL_TOKENS.SUSHI.decimals,\n\n    version: 4,\n  },\n  TOMO_SRM_V4: {\n    symbol: \"TOMO-SRM\",\n    name: \"TOMO-SRM V4 LP\",\n    mint: \"GgH9RnKrQpaMQeqmdbMvs5oo1A24hERQ9wuY2pSkeG7x\",\n\n    base: MAINNET_SPL_TOKENS.TOMO,\n    quote: MAINNET_SPL_TOKENS.SRM,\n    decimals: MAINNET_SPL_TOKENS.TOMO.decimals,\n\n    version: 4,\n  },\n  LINK_SRM_V4: {\n    symbol: \"LINK-SRM\",\n    name: \"LINK-SRM V4 LP\",\n    mint: \"GXN6yJv12o18skTmJXaeFXZVY1iqR18CHsmCT8VVCmDD\",\n\n    base: MAINNET_SPL_TOKENS.LINK,\n    quote: MAINNET_SPL_TOKENS.SRM,\n    decimals: MAINNET_SPL_TOKENS.LINK.decimals,\n\n    version: 4,\n  },\n  ETH_SRM_V4: {\n    symbol: \"ETH-SRM\",\n    name: \"ETH-SRM V4 LP\",\n    mint: \"9VoY3VERETuc2FoadMSYYizF26mJinY514ZpEzkHMtwG\",\n\n    base: MAINNET_SPL_TOKENS.ETH,\n    quote: MAINNET_SPL_TOKENS.SRM,\n    decimals: MAINNET_SPL_TOKENS.ETH.decimals,\n\n    version: 4,\n  },\n  SRM_SOL_V4: {\n    symbol: \"SRM-SOL\",\n    name: \"SRM-SOL V4 LP\",\n    mint: \"AKJHspCwDhABucCxNLXUSfEzb7Ny62RqFtC9uNjJi4fq\",\n\n    base: MAINNET_SPL_TOKENS.SRM,\n    quote: MAINNET_SPL_TOKENS.WSOL,\n    decimals: MAINNET_SPL_TOKENS.SRM.decimals,\n\n    version: 4,\n  },\n  STEP_USDC_V4: {\n    symbol: \"STEP-USDC\",\n    name: \"STEP-USDC V4 LP\",\n    mint: \"3k8BDobgihmk72jVmXYLE168bxxQUhqqyESW4dQVktqC\",\n\n    base: MAINNET_SPL_TOKENS.STEP,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.STEP.decimals,\n\n    version: 4,\n  },\n  MEDIA_USDC_V4: {\n    symbol: \"MEDIA-USDC\",\n    name: \"MEDIA-USDC V4 LP\",\n    mint: \"A5zanvgtioZGiJMdEyaKN4XQmJsp1p7uVxaq2696REvQ\",\n\n    base: MAINNET_SPL_TOKENS.MEDIA,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.MEDIA.decimals,\n\n    version: 4,\n  },\n  ROPE_USDC_V4: {\n    symbol: \"ROPE-USDC\",\n    name: \"ROPE-USDC V4 LP\",\n    mint: \"Cq4HyW5xia37tKejPF2XfZeXQoPYW6KfbPvxvw5eRoUE\",\n\n    base: MAINNET_SPL_TOKENS.ROPE,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.ROPE.decimals,\n\n    version: 4,\n  },\n  MER_USDC_V4: {\n    symbol: \"MER-USDC\",\n    name: \"MER-USDC V4 LP\",\n    mint: \"3H9NxvaZoxMZZDZcbBDdWMKbrfNj7PCF5sbRwDr7SdDW\",\n\n    base: MAINNET_SPL_TOKENS.MER,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.MER.decimals,\n\n    version: 4,\n  },\n  COPE_USDC_V4: {\n    symbol: \"COPE-USDC\",\n    name: \"COPE-USDC V4 LP\",\n    mint: \"Cz1kUvHw98imKkrqqu95GQB9h1frY8RikxPojMwWKGXf\",\n\n    base: MAINNET_SPL_TOKENS.COPE,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.COPE.decimals,\n\n    version: 4,\n  },\n  ALEPH_USDC_V4: {\n    symbol: \"ALEPH-USDC\",\n    name: \"ALEPH-USDC V4 LP\",\n    mint: \"iUDasAP2nXm5wvTukAHEKSdSXn8vQkRtaiShs9ceGB7\",\n\n    base: MAINNET_SPL_TOKENS.ALEPH,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.ALEPH.decimals,\n\n    version: 4,\n  },\n  TULIP_USDC_V4: {\n    symbol: \"TULIP-USDC\",\n    name: \"TULIP-USDC V4 LP\",\n    mint: \"2doeZGLJyACtaG9DCUyqMLtswesfje1hjNA11hMdj6YU\",\n\n    base: MAINNET_SPL_TOKENS.TULIP,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.TULIP.decimals,\n\n    version: 4,\n  },\n  WOO_USDC_V4: {\n    symbol: \"WOO-USDC\",\n    name: \"WOO-USDC V4 LP\",\n    mint: \"7cu42ao8Jgrd5A3y3bNQsCxq5poyGZNmTydkGfJYQfzh\",\n\n    base: MAINNET_SPL_TOKENS.WOO,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.WOO.decimals,\n\n    version: 4,\n  },\n  SNY_USDC_V4: {\n    symbol: \"SNY-USDC\",\n    name: \"SNY-USDC V4 LP\",\n    mint: \"G8qcfeFqxwbCqpxv5LpLWxUCd1PyMB5nWb5e5YyxLMKg\",\n\n    base: MAINNET_SPL_TOKENS.SNY,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.SNY.decimals,\n\n    version: 4,\n  },\n  BOP_RAY_V4: {\n    symbol: \"BOP-RAY\",\n    name: \"BOP-RAY V4 LP\",\n    mint: \"9nQPYJvysyfnXhQ6nkK5V7sZG26hmDgusfdNQijRk5LD\",\n\n    base: MAINNET_SPL_TOKENS.BOP,\n    quote: MAINNET_SPL_TOKENS.RAY,\n    decimals: MAINNET_SPL_TOKENS.BOP.decimals,\n\n    version: 4,\n  },\n  SLRS_USDC_V4: {\n    symbol: \"SLRS-USDC\",\n    name: \"SLRS-USDC V4 LP\",\n    mint: \"2Xxbm1hdv5wPeen5ponDSMT3VqhGMTQ7mH9stNXm9shU\",\n\n    base: MAINNET_SPL_TOKENS.SLRS,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.SLRS.decimals,\n\n    version: 4,\n  },\n  SAMO_RAY_V4: {\n    symbol: \"SAMO-RAY\",\n    name: \"SAMO-RAY V4 LP\",\n    mint: \"HwzkXyX8B45LsaHXwY8su92NoRBS5GQC32HzjQRDqPnr\",\n\n    base: MAINNET_SPL_TOKENS.SAMO,\n    quote: MAINNET_SPL_TOKENS.RAY,\n    decimals: MAINNET_SPL_TOKENS.SAMO.decimals,\n\n    version: 4,\n  },\n  renBTC_USDC_V4: {\n    symbol: \"renBTC-USDC\",\n    name: \"renBTC-USDC V4 LP\",\n    mint: \"CTEpsih91ZLo5gunvryLpJ3pzMjmt5jbS6AnSQrzYw7V\",\n\n    base: MAINNET_SPL_TOKENS.renBTC,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.renBTC.decimals,\n\n    version: 4,\n  },\n  renDOGE_USDC_V4: {\n    symbol: \"renDOGE-USDC\",\n    name: \"renDOGE-USDC V4 LP\",\n    mint: \"Hb8KnZNKvRxu7pgMRWJgoMSMcepfvNiBFFDDrdf9o3wA\",\n\n    base: MAINNET_SPL_TOKENS.renDOGE,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.renDOGE.decimals,\n\n    version: 4,\n  },\n  RAY_USDC_V4: {\n    symbol: \"RAY-USDC\",\n    name: \"RAY-USDC V4 LP\",\n    mint: \"FbC6K13MzHvN42bXrtGaWsvZY9fxrackRSZcBGfjPc7m\",\n\n    base: MAINNET_SPL_TOKENS.RAY,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.RAY.decimals,\n\n    version: 4,\n  },\n  RAY_SRM_V4: {\n    symbol: \"RAY-SRM\",\n    name: \"RAY-SRM V4 LP\",\n    mint: \"7P5Thr9Egi2rvMmEuQkLn8x8e8Qro7u2U7yLD2tU2Hbe\",\n\n    base: MAINNET_SPL_TOKENS.RAY,\n    quote: MAINNET_SPL_TOKENS.SRM,\n    decimals: MAINNET_SPL_TOKENS.RAY.decimals,\n\n    version: 4,\n  },\n  RAY_ETH_V4: {\n    symbol: \"RAY-ETH\",\n    name: \"RAY-ETH V4 LP\",\n    mint: \"mjQH33MqZv5aKAbKHi8dG3g3qXeRQqq1GFcXceZkNSr\",\n\n    base: MAINNET_SPL_TOKENS.RAY,\n    quote: MAINNET_SPL_TOKENS.ETH,\n    decimals: MAINNET_SPL_TOKENS.RAY.decimals,\n\n    version: 4,\n  },\n  RAY_SOL_V4: {\n    symbol: \"RAY-SOL\",\n    name: \"RAY-SOL V4 LP\",\n    mint: \"89ZKE4aoyfLBe2RuV6jM3JGNhaV18Nxh8eNtjRcndBip\",\n\n    base: MAINNET_SPL_TOKENS.RAY,\n    quote: MAINNET_SPL_TOKENS.WSOL,\n    decimals: MAINNET_SPL_TOKENS.RAY.decimals,\n\n    version: 4,\n  },\n  DXL_USDC_V4: {\n    symbol: \"DXL-USDC\",\n    name: \"DXL-USDC V4 LP\",\n    mint: \"4HFaSvfgskipvrzT1exoVKsUZ174JyExEsA8bDfsAdY5\",\n\n    base: MAINNET_SPL_TOKENS.DXL,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.DXL.decimals,\n\n    version: 4,\n  },\n  LIKE_USDC_V4: {\n    symbol: \"LIKE-USDC\",\n    name: \"LIKE-USDC V4 LP\",\n    mint: \"cjZmbt8sJgaoyWYUttomAu5LJYU44ZrcKTbzTSEPDVw\",\n\n    base: MAINNET_SPL_TOKENS.LIKE,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.LIKE.decimals,\n\n    version: 4,\n  },\n  mSOL_USDC_V4: {\n    symbol: \"mSOL-USDC\",\n    name: \"mSOL-USDC V4 LP\",\n    mint: \"4xTpJ4p76bAeggXoYywpCCNKfJspbuRzZ79R7pRhbqSf\",\n\n    base: MAINNET_SPL_TOKENS.mSOL,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.mSOL.decimals,\n\n    version: 4,\n  },\n  mSOL_SOL_V4: {\n    symbol: \"mSOL-SOL\",\n    name: \"mSOL-SOL V4 LP\",\n    mint: \"5ijRoAHVgd5T5CNtK5KDRUBZ7Bffb69nktMj5n6ks6m4\",\n\n    base: MAINNET_SPL_TOKENS.mSOL,\n    quote: MAINNET_SPL_TOKENS.WSOL,\n    decimals: MAINNET_SPL_TOKENS.mSOL.decimals,\n\n    version: 4,\n  },\n  MER_PAI_V4: {\n    symbol: \"MER-PAI\",\n    name: \"MER-PAI V4 LP\",\n    mint: \"DU5RT2D9EviaSmX6Ta8MZwMm85HwSEqGMRdqUiuCGfmD\",\n\n    base: MAINNET_SPL_TOKENS.MER,\n    quote: MAINNET_SPL_TOKENS.PAI,\n    decimals: MAINNET_SPL_TOKENS.MER.decimals,\n\n    version: 4,\n  },\n  PORT_USDC_V4: {\n    symbol: \"PORT-USDC\",\n    name: \"PORT-USDC V4 LP\",\n    mint: \"9tmNtbUCrLS15qC4tEfr5NNeqcqpZ4uiGgi2vS5CLQBS\",\n\n    base: MAINNET_SPL_TOKENS.PORT,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.PORT.decimals,\n\n    version: 4,\n  },\n  MNGO_USDC_V4: {\n    symbol: \"MNGO-USDC\",\n    name: \"MNGO-USDC V4 LP\",\n    mint: \"DkiqCQ792n743xjWQVCbBUaVtkdiuvQeYndM53ReWnCC\",\n\n    base: MAINNET_SPL_TOKENS.MNGO,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.MNGO.decimals,\n\n    version: 4,\n  },\n  ATLAS_USDC_V4: {\n    symbol: \"ATLAS-USDC\",\n    name: \"ATLAS-USDC V4 LP\",\n    mint: \"9shGU9f1EsxAbiR567MYZ78WUiS6ZNCYbHe53WUULQ7n\",\n\n    base: MAINNET_SPL_TOKENS.ATLAS,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.ATLAS.decimals,\n\n    version: 4,\n  },\n  POLIS_USDC_V4: {\n    symbol: \"POLIS-USDC\",\n    name: \"POLIS-USDC V4 LP\",\n    mint: \"8MbKSBpyXs8fVneKgt71jfHrn5SWtX8n4wMLpiVfF9So\",\n\n    base: MAINNET_SPL_TOKENS.POLIS,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.POLIS.decimals,\n\n    version: 4,\n  },\n  ATLAS_RAY_V4: {\n    symbol: \"ATLAS-RAY\",\n    name: \"ATLAS-RAY V4 LP\",\n    mint: \"418MFhkaYQtbn529wmjLLqL6uKxDz7j4eZBaV1cobkyd\",\n\n    base: MAINNET_SPL_TOKENS.ATLAS,\n    quote: MAINNET_SPL_TOKENS.RAY,\n    decimals: MAINNET_SPL_TOKENS.ATLAS.decimals,\n\n    version: 4,\n  },\n  POLIS_RAY_V4: {\n    symbol: \"POLIS-RAY\",\n    name: \"POLIS-RAY V4 LP\",\n    mint: \"9ysGKUH6WqzjQEUT4dxqYCUaFNVK9QFEa24pGzjFq8xg\",\n\n    base: MAINNET_SPL_TOKENS.POLIS,\n    quote: MAINNET_SPL_TOKENS.RAY,\n    decimals: MAINNET_SPL_TOKENS.POLIS.decimals,\n\n    version: 4,\n  },\n  ALEPH_RAY_V4: {\n    symbol: \"ALEPH-RAY\",\n    name: \"ALEPH-RAY V4 LP\",\n    mint: \"n76skjqv4LirhdLok2zJELXNLdRpYDgVJQuQFbamscy\",\n\n    base: MAINNET_SPL_TOKENS.ALEPH,\n    quote: MAINNET_SPL_TOKENS.RAY,\n    decimals: MAINNET_SPL_TOKENS.ALEPH.decimals,\n\n    version: 4,\n  },\n  TULIP_RAY_V4: {\n    symbol: \"TULIP-RAY\",\n    name: \"TULIP-RAY V4 LP\",\n    mint: \"3AZTviji5qduMG2s4FfWGR3SSQmNUCyx8ao6UKCPg3oJ\",\n\n    base: MAINNET_SPL_TOKENS.TULIP,\n    quote: MAINNET_SPL_TOKENS.RAY,\n    decimals: MAINNET_SPL_TOKENS.TULIP.decimals,\n\n    version: 4,\n  },\n  SLRS_RAY_V4: {\n    symbol: \"SLRS-RAY\",\n    name: \"SLRS-RAY V4 LP\",\n    mint: \"2pk78vsKT3jfJAcN2zbpMUnrR57SZrxHqaZYyFgp92mM\",\n\n    base: MAINNET_SPL_TOKENS.SLRS,\n    quote: MAINNET_SPL_TOKENS.RAY,\n    decimals: MAINNET_SPL_TOKENS.SLRS.decimals,\n\n    version: 4,\n  },\n  MER_RAY_V4: {\n    symbol: \"MER-RAY\",\n    name: \"MER-RAY V4 LP\",\n    mint: \"214hxy3AbKoaEKgqcg2aC1cP5R67cGGAyDEg5GDwC7Ub\",\n\n    base: MAINNET_SPL_TOKENS.MER,\n    quote: MAINNET_SPL_TOKENS.RAY,\n    decimals: MAINNET_SPL_TOKENS.MER.decimals,\n\n    version: 4,\n  },\n  MEDIA_RAY_V4: {\n    symbol: \"MEDIA-RAY\",\n    name: \"MEDIA-RAY V4 LP\",\n    mint: \"9Aseg5A1JD1yCiFFdDaNNxCiJ7XzrpZFmcEmLjXFdPaH\",\n\n    base: MAINNET_SPL_TOKENS.MEDIA,\n    quote: MAINNET_SPL_TOKENS.RAY,\n    decimals: MAINNET_SPL_TOKENS.MEDIA.decimals,\n\n    version: 4,\n  },\n  SNY_RAY_V4: {\n    symbol: \"SNY-RAY\",\n    name: \"SNY-RAY V4 LP\",\n    mint: \"2k4quTuuLUxrSEhFH99qcoZzvgvVEc3b5sz3xz3qstfS\",\n\n    base: MAINNET_SPL_TOKENS.SNY,\n    quote: MAINNET_SPL_TOKENS.RAY,\n    decimals: MAINNET_SPL_TOKENS.SNY.decimals,\n\n    version: 4,\n  },\n  LIKE_RAY_V4: {\n    symbol: \"LIKE-RAY\",\n    name: \"LIKE-RAY V4 LP\",\n    mint: \"7xqDycbFSCpUpzkYapFeyPJWPwEpV7zdWbYf2MVHTNjv\",\n\n    base: MAINNET_SPL_TOKENS.LIKE,\n    quote: MAINNET_SPL_TOKENS.RAY,\n    decimals: MAINNET_SPL_TOKENS.LIKE.decimals,\n\n    version: 4,\n  },\n  COPE_RAY_V4: {\n    symbol: \"COPE-RAY\",\n    name: \"COPE-RAY V4 LP\",\n    mint: \"A7GCVHA8NSsbdFscHdoNU41tL1TRKNmCH4K94CgcLK9F\",\n\n    base: MAINNET_SPL_TOKENS.COPE,\n    quote: MAINNET_SPL_TOKENS.RAY,\n    decimals: MAINNET_SPL_TOKENS.COPE.decimals,\n\n    version: 4,\n  },\n  ETH_SOL_V4: {\n    symbol: \"ETH-SOL\",\n    name: \"ETH-SOL V4 LP\",\n    mint: \"GKfgC86iJoMjwAtcyiLu6nWnjggqUXsDQihXkP14fDez\",\n\n    base: MAINNET_SPL_TOKENS.ETH,\n    quote: MAINNET_SPL_TOKENS.WSOL,\n    decimals: MAINNET_SPL_TOKENS.ETH.decimals,\n\n    version: 4,\n  },\n  stSOL_USDC_V4: {\n    symbol: \"stSOL-USDC\",\n    name: \"stSOL-USDC V4 LP\",\n    mint: \"HDUJMwYZkjUZre63xUeDhdCi8c6LgUDiBqxmP3QC3VPX\",\n\n    base: MAINNET_SPL_TOKENS.stSOL,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.stSOL.decimals,\n\n    version: 4,\n  },\n  GRAPE_USDC_V4: {\n    symbol: \"GRAPE-USDC\",\n    name: \"GRAPE-USDC V4 LP\",\n    mint: \"A8ZYmnZ1vwxUa4wpJVUaJgegsuTEz5TKy5CiJXffvmpt\",\n\n    base: MAINNET_SPL_TOKENS.GRAPE,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.GRAPE.decimals,\n\n    version: 4,\n  },\n  LARIX_USDC_V4: {\n    symbol: \"LARIX-USDC\",\n    name: \"LARIX-USDC V4 LP\",\n    mint: \"7yieit4YsNsZ9CAK8H5ZEMvvk35kPEHHeXwp6naoWU9V\",\n\n    base: MAINNET_SPL_TOKENS.LARIX,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.LARIX.decimals,\n\n    version: 4,\n  },\n  RIN_USDC_V4: {\n    symbol: \"RIN-USDC\",\n    name: \"RIN-USDC V4 LP\",\n    mint: \"GfCWfrZez7BDmCSEeMERVDVUaaM2TEreyYUgb2cpuS3w\",\n\n    base: MAINNET_SPL_TOKENS.RIN,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.RIN.decimals,\n\n    version: 4,\n  },\n  APEX_USDC_V4: {\n    symbol: \"APEX-USDC\",\n    name: \"APEX-USDC V4 LP\",\n    mint: \"444cVqYyDxJNo6FqiMb9qQWFUd7tYzFRdDuJRFrSAGnU\",\n\n    base: MAINNET_SPL_TOKENS.APEX,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.APEX.decimals,\n\n    version: 4,\n  },\n  mSOL_RAY_V4: {\n    symbol: \"mSOL-RAY\",\n    name: \"mSOL-RAY V4 LP\",\n    mint: \"De2EHBAdkgfc72DpShqDGG42cV3iDWh8wvvZdPsiEcqP\",\n\n    base: MAINNET_SPL_TOKENS.mSOL,\n    quote: MAINNET_SPL_TOKENS.RAY,\n    decimals: MAINNET_SPL_TOKENS.mSOL.decimals,\n\n    version: 4,\n  },\n  MNDE_mSOL_V4: {\n    symbol: \"MNDE-mSOL\",\n    name: \"MNDE-mSOL V4 LP\",\n    mint: \"4bh8XCzTHSbqbWN8o1Jn4ueBdz1LvJFoEasN6K6CQ8Ny\",\n\n    base: MAINNET_SPL_TOKENS.MNDE,\n    quote: MAINNET_SPL_TOKENS.mSOL,\n    decimals: MAINNET_SPL_TOKENS.MNDE.decimals,\n\n    version: 4,\n  },\n  LARIX_RAY_V4: {\n    symbol: \"LARIX-RAY\",\n    name: \"LARIX-RAY V4 LP\",\n    mint: \"ZRDfSLgWGeaYSmhdPvFNKQQhDcYdZQaue2N8YDmHX4q\",\n\n    base: MAINNET_SPL_TOKENS.LARIX,\n    quote: MAINNET_SPL_TOKENS.RAY,\n    decimals: MAINNET_SPL_TOKENS.LARIX.decimals,\n\n    version: 4,\n  },\n  LIQ_USDC_V4: {\n    symbol: \"LIQ-USDC\",\n    name: \"LIQ-USDC V4 LP\",\n    mint: \"GWpD3eTfhJB5KDCcnE85dBQrjAk2CsrgDF9b52R9CrjV\",\n\n    base: MAINNET_SPL_TOKENS.LIQ,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.LIQ.decimals,\n\n    version: 4,\n  },\n  WAG_USDC_V4: {\n    symbol: \"WAG-USDC\",\n    name: \"WAG-USDC V4 LP\",\n    mint: \"4yykyPugitUVRewNPXXCviRvxGfsfsRMoP32z3b6FmUC\",\n\n    base: MAINNET_SPL_TOKENS.WAG,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.WAG.decimals,\n\n    version: 4,\n  },\n  ETH_mSOL_V4: {\n    symbol: \"ETH-mSOL\",\n    name: \"ETH-mSOL V4 LP\",\n    mint: \"HYv3grQfi8QbV7nG7EFgNK1aJSrsJ7HynXJKJVPLL2Uh\",\n\n    base: MAINNET_SPL_TOKENS.ETH,\n    quote: MAINNET_SPL_TOKENS.mSOL,\n    decimals: MAINNET_SPL_TOKENS.ETH.decimals,\n\n    version: 4,\n  },\n  mSOL_USDT_V4: {\n    symbol: \"mSOL-USDT\",\n    name: \"mSOL-USDT V4 LP\",\n    mint: \"69NCmEW9mGpiWLjAcAWHq51k4ionJZmzgRfRT3wQaCCf\",\n\n    base: MAINNET_SPL_TOKENS.mSOL,\n    quote: MAINNET_SPL_TOKENS.USDT,\n    decimals: MAINNET_SPL_TOKENS.mSOL.decimals,\n\n    version: 4,\n  },\n  BTC_mSOL_V4: {\n    symbol: \"BTC-mSOL\",\n    name: \"BTC-mSOL V4 LP\",\n    mint: \"92bcERNtUmuaJ6mwLSxYHZYSph37jdKxRdoYNxpcYNPp\",\n\n    base: MAINNET_SPL_TOKENS.BTC,\n    quote: MAINNET_SPL_TOKENS.mSOL,\n    decimals: MAINNET_SPL_TOKENS.BTC.decimals,\n\n    version: 4,\n  },\n  SLIM_SOL_V4: {\n    symbol: \"SLIM-SOL\",\n    name: \"SLIM-SOL V4 LP\",\n    mint: \"9X4EK8E59VAVi6ChnNvvd39m6Yg9RtkBbAPq1mDVJT57\",\n\n    base: MAINNET_SPL_TOKENS.SLIM,\n    quote: MAINNET_SPL_TOKENS.WSOL,\n    decimals: MAINNET_SPL_TOKENS.SLIM.decimals,\n\n    version: 4,\n  },\n  AURY_USDC_V4: {\n    symbol: \"AURY-USDC\",\n    name: \"AURY-USDC V4 LP\",\n    mint: \"Gub5dvTy4nzP82qpmpNkBxmRqjtqRddBTBqHSdNcf2oS\",\n\n    base: MAINNET_SPL_TOKENS.AURY,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.AURY.decimals,\n\n    version: 4,\n  },\n  PRT_SOL_V4: {\n    symbol: \"PRT-SOL\",\n    name: \"PRT-SOL V4 LP\",\n    mint: \"EcJ8Wgwt1AzSPiDpVr6aaSur8TKAsNTPmmzRACeqT68Z\",\n\n    base: MAINNET_SPL_TOKENS.PRT,\n    quote: MAINNET_SPL_TOKENS.WSOL,\n    decimals: MAINNET_SPL_TOKENS.PRT.decimals,\n\n    version: 4,\n  },\n  LIQ_RAY_V4: {\n    symbol: \"LIQ-RAY\",\n    name: \"LIQ-RAY V4 LP\",\n    mint: \"49YUsDrThJosHSagCn1F59Uc9NRxbr9thVrZikUnQDXy\",\n\n    base: MAINNET_SPL_TOKENS.LIQ,\n    quote: MAINNET_SPL_TOKENS.RAY,\n    decimals: MAINNET_SPL_TOKENS.LIQ.decimals,\n\n    version: 4,\n  },\n  SYP_SOL_V4: {\n    symbol: \"SYP-SOL\",\n    name: \"SYP-SOL V4 LP\",\n    mint: \"KHV6dfj2bDntzJ9z1S26cDfqWfUZdJRFmteLR6LxHwW\",\n\n    base: MAINNET_SPL_TOKENS.SYP,\n    quote: MAINNET_SPL_TOKENS.WSOL,\n    decimals: MAINNET_SPL_TOKENS.SYP.decimals,\n\n    version: 4,\n  },\n  SYP_RAY_V4: {\n    symbol: \"SYP-RAY\",\n    name: \"SYP-RAY V4 LP\",\n    mint: \"FT2KZqxxM8F2h9pZtTF4PyjK88bM4YbuBzd7ZPwQ5wMB\",\n\n    base: MAINNET_SPL_TOKENS.SYP,\n    quote: MAINNET_SPL_TOKENS.RAY,\n    decimals: MAINNET_SPL_TOKENS.SYP.decimals,\n\n    version: 4,\n  },\n  SYP_USDC_V4: {\n    symbol: \"SYP-USDC\",\n    name: \"SYP-USDC V4 LP\",\n    mint: \"2xJGuLAivAR1WkARRA6zP1v4jaA9jV2Qis8JfMNvrVyZ\",\n\n    base: MAINNET_SPL_TOKENS.SYP,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.SYP.decimals,\n\n    version: 4,\n  },\n  FAB_USDC_V4: {\n    symbol: \"FAB-USDC\",\n    name: \"FAB-USDC V4 LP\",\n    mint: \"5rTCvZq6BcApsC3VV1EEUuTJfaVd8uYhcGjwTy1By6P8\",\n\n    base: MAINNET_SPL_TOKENS.FAB,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.FAB.decimals,\n\n    version: 4,\n  },\n  WOOF_RAY_V4: {\n    symbol: \"WOOF-RAY\",\n    name: \"WOOF-RAY V4 LP\",\n    mint: \"H2FAnazDaGFutcmnrwDxhmdncR1Bd7GG4mhPCSUiamDX\",\n\n    base: MAINNET_SPL_TOKENS.WOOF,\n    quote: MAINNET_SPL_TOKENS.RAY,\n    decimals: MAINNET_SPL_TOKENS.WOOF.decimals,\n\n    version: 4,\n  },\n  WOOF_USDC_V4: {\n    symbol: \"WOOF-USDC\",\n    name: \"WOOF-USDC V4 LP\",\n    mint: \"EFSu5TMc1ijRevaYCxUkS7uGvbhsymDHEaTK3UVdNE3q\",\n\n    base: MAINNET_SPL_TOKENS.WOOF,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.WOOF.decimals,\n\n    version: 4,\n  },\n  SLND_USDC_V4: {\n    symbol: \"SLND-USDC\",\n    name: \"SLND-USDC V4 LP\",\n    mint: \"EunE9uDh2cGsyJcsGuGKc6wte7kBn8iye2gzC4w2ePHn\",\n\n    base: MAINNET_SPL_TOKENS.SLND,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.SLND.decimals,\n\n    version: 4,\n  },\n  FRKT_SOL_V4: {\n    symbol: \"FRKT-SOL\",\n    name: \"FRKT-SOL V4 LP\",\n    mint: \"HYUKXgpjaxMXHttyrFYtv3z2rdhZ1U9QDH8zEc8BooQC\",\n\n    base: MAINNET_SPL_TOKENS.FRKT,\n    quote: MAINNET_SPL_TOKENS.WSOL,\n    decimals: MAINNET_SPL_TOKENS.FRKT.decimals,\n\n    version: 4,\n  },\n  weWETH_SOL_V4: {\n    symbol: \"weWETH-SOL\",\n    name: \"weWETH-SOL V4 LP\",\n    mint: \"3hbozt2Por7bcrGod8N7kEeJNMocFFjCJrQR16TQGBrE\",\n\n    base: MAINNET_SPL_TOKENS.weWETH,\n    quote: MAINNET_SPL_TOKENS.WSOL,\n    decimals: MAINNET_SPL_TOKENS.weWETH.decimals,\n\n    version: 4,\n  },\n  weWETH_USDC_V4: {\n    symbol: \"weWETH-USDC\",\n    name: \"weWETH-USDC V4 LP\",\n    mint: \"3529SBnMCDW3S3xQ52aABbRHo7PcHvpQA4no8J12L5eK\",\n\n    base: MAINNET_SPL_TOKENS.weWETH,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.weWETH.decimals,\n\n    version: 4,\n  },\n  weUNI_USDC_V4: {\n    symbol: \"weUNI-USDC\",\n    name: \"weUNI-USDC V4 LP\",\n    mint: \"EEC4QnT41py39QaYnzQnoYQEtDUDNa6Se8SBDgfPSN2a\",\n\n    base: MAINNET_SPL_TOKENS.weUNI,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.weUNI.decimals,\n\n    version: 4,\n  },\n  weSUSHI_USDC_V4: {\n    symbol: \"weSUSHI-USDC\",\n    name: \"weSUSHI-USDC V4 LP\",\n    mint: \"3wVrtQZsiDNp5yTPyfEzQHPU6iuJoMmpnWg6CTt4V8sR\",\n\n    base: MAINNET_SPL_TOKENS.weSUSHI,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.weSUSHI.decimals,\n\n    version: 4,\n  },\n  CYS_USDC_V4: {\n    symbol: \"CYS-USDC\",\n    name: \"CYS-USDC V4 LP\",\n    mint: \"GfV3QDzzdVUwCNSdfn6PjhmyJvjw18tn51RingWZYwk3\",\n\n    base: MAINNET_SPL_TOKENS.CYS,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.CYS.decimals,\n\n    version: 4,\n  },\n  SAMO_USDC_V4: {\n    symbol: \"SAMO-USDC\",\n    name: \"SAMO-USDC V4 LP\",\n    mint: \"B2PjGEP3vPf1999fUD14pYdxvSDRVBk43hxB2rgthwEY\",\n\n    base: MAINNET_SPL_TOKENS.SAMO,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.SAMO.decimals,\n\n    version: 4,\n  },\n  ABR_USDC_V4: {\n    symbol: \"ABR-USDC\",\n    name: \"ABR-USDC V4 LP\",\n    mint: \"ECHfxkf5zjjZFTX95QfFahNyzG7feyEKcfTdjsdrMSGU\",\n\n    base: MAINNET_SPL_TOKENS.ABR,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.ABR.decimals,\n\n    version: 4,\n  },\n  IN_USDC_V4: {\n    symbol: \"IN-USDC\",\n    name: \"IN-USDC V4 LP\",\n    mint: \"GbmJtVgg9fRmmmjKUYGMZeSt8wZ47cDDXasg5Y3iF4kz\",\n\n    base: MAINNET_SPL_TOKENS.IN,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.IN.decimals,\n\n    version: 4,\n  },\n  weDYDX_USDC_V4: {\n    symbol: \"weDYDX-USDC\",\n    name: \"weDYDX-USDC V4 LP\",\n    mint: \"BjkkMZnnzmgLqzGErzDbkk15ozv48iVKQuunpeM2Hqnk\",\n\n    base: MAINNET_SPL_TOKENS.weDYDX,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.weDYDX.decimals,\n\n    version: 4,\n  },\n  STARS_USDC_V4: {\n    symbol: \"STARS-USDC\",\n    name: \"STARS-USDC V4 LP\",\n    mint: \"FJ68q7NChhETcGVdinMbM2FF1Cy79dpmUi6HC83K55Hv\",\n\n    base: MAINNET_SPL_TOKENS.STARS,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.STARS.decimals,\n\n    version: 4,\n  },\n  weAXS_USDC_V4: {\n    symbol: \"weAXS-USDC\",\n    name: \"weAXS-USDC V4 LP\",\n    mint: \"6PSoJQ7myQ1BJtbQC6oiWR8HSecQGyoWsPYTZRJo2ci3\",\n\n    base: MAINNET_SPL_TOKENS.weAXS,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.weAXS.decimals,\n\n    version: 4,\n  },\n  weSHIB_USDC_V4: {\n    symbol: \"weSHIB-USDC\",\n    name: \"weSHIB-USDC V4 LP\",\n    mint: \"AcjX5pmTMGSgxkdxc3r82r6WMKBvS6eQXXFz5ck5KKUa\",\n\n    base: MAINNET_SPL_TOKENS.weSHIB,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.weSHIB.decimals,\n\n    version: 4,\n  },\n  SBR_USDC_V4: {\n    symbol: \"SBR-USDC\",\n    name: \"SBR-USDC V4 LP\",\n    mint: \"9FC8xTFRbgTpuZZYAYnZLxgnQ8r7FwfSBM1SWvGwgF7s\",\n\n    base: MAINNET_SPL_TOKENS.SBR,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.SBR.decimals,\n\n    version: 4,\n  },\n  OXS_USDC_V4: {\n    symbol: \"OXS-USDC\",\n    name: \"OXS-USDC V4 LP\",\n    mint: \"et9pdjWm97rbmsJoN183GkFV5qzTGru79GE1Zhe7NTU\",\n\n    base: MAINNET_SPL_TOKENS.OXS,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.OXS.decimals,\n\n    version: 4,\n  },\n  CWAR_USDC_V4: {\n    symbol: \"CWAR-USDC\",\n    name: \"CWAR-USDC V4 LP\",\n    mint: \"HjR23bxn2gtRDB2P1Tm3DLepAPPZgazsWJpLG9wqjnYR\",\n\n    base: MAINNET_SPL_TOKENS.CWAR,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.CWAR.decimals,\n\n    version: 4,\n  },\n  UPS_USDC_V4: {\n    symbol: \"UPS-USDC\",\n    name: \"UPS-USDC V4 LP\",\n    mint: \"9hSUZdREEsbaYaKY4FouvXr7xyAqtpdHRDoYCb6Mb28a\",\n\n    base: MAINNET_SPL_TOKENS.UPS,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.UPS.decimals,\n\n    version: 4,\n  },\n  weSAND_USDC_V4: {\n    symbol: \"weSAND-USDC\",\n    name: \"weSAND-USDC V4 LP\",\n    mint: \"3dADrQa7utyiCsaFeVk9r7oebW1WheowhKo5soBYKBVT\",\n\n    base: MAINNET_SPL_TOKENS.weSAND,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.weSAND.decimals,\n\n    version: 4,\n  },\n  weMANA_USDC_V4: {\n    symbol: \"weMANA-USDC\",\n    name: \"weMANA-USDC V4 LP\",\n    mint: \"HpUkVAPRJ5zNRuJ1ZwMXEhbMHL3gSuPb2QuSER9YUd3a\",\n\n    base: MAINNET_SPL_TOKENS.weMANA,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.weMANA.decimals,\n\n    version: 4,\n  },\n  CAVE_USDC_V4: {\n    symbol: \"CAVE-USDC\",\n    name: \"CAVE-USDC V4 LP\",\n    mint: \"5Gba1k3fU7Vh7UtAiBmie9vhQNNq1JfEwgn1DPGZ7NKQ\",\n\n    base: MAINNET_SPL_TOKENS.CAVE,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.CAVE.decimals,\n\n    version: 4,\n  },\n  GENE_USDC_V4: {\n    symbol: \"GENE-USDC\",\n    name: \"GENE-USDC V4 LP\",\n    mint: \"7GKvfHEXenNiWYbJBKae89mdaMPr5gGMYwZmyC8gBNVG\",\n\n    base: MAINNET_SPL_TOKENS.GENE,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.GENE.decimals,\n\n    version: 4,\n  },\n  GENE_RAY_V4: {\n    symbol: \"GENE-RAY\",\n    name: \"GENE-RAY V4 LP\",\n    mint: \"3HzXnc1qZ8mGqun18Ck3KA616XnZNqF1RWbgYE2nGRMA\",\n\n    base: MAINNET_SPL_TOKENS.GENE,\n    quote: MAINNET_SPL_TOKENS.RAY,\n    decimals: MAINNET_SPL_TOKENS.GENE.decimals,\n\n    version: 4,\n  },\n  APT_USDC_V4: {\n    symbol: \"APT-USDC\",\n    name: \"APT-USDC V4 LP\",\n    mint: \"Hk8mDAJFq4E9kF3DtNgPFwzbo5kbeiusNFJgWmo3LoQ5\",\n\n    base: MAINNET_SPL_TOKENS.APT,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.APT.decimals,\n\n    version: 4,\n  },\n  GOFX_USDC_V4: {\n    symbol: \"GOFX-USDC\",\n    name: \"GOFX-USDC V4 LP\",\n    mint: \"4svqAwrLPGRDCQuuieYTmtLXF75wiahjeK2rEN9tY1YL\",\n\n    base: MAINNET_SPL_TOKENS.GOFX,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.GOFX.decimals,\n\n    version: 4,\n  },\n  SONAR_USDC_V4: {\n    symbol: \"SONAR-USDC\",\n    name: \"SONAR-USDC V4 LP\",\n    mint: \"2tAcfqJ1YYjpGLqwh76kyNt9VaNFDd4fJySfH6SmWfKt\",\n\n    base: MAINNET_SPL_TOKENS.SONAR,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.SONAR.decimals,\n\n    version: 4,\n  },\n  JSOL_SOL_V4: {\n    symbol: \"JSOL-SOL\",\n    name: \"JSOL-SOL V4 LP\",\n    mint: \"61z37rpHsU6d3Fq5sUjJ85K6tXGzkoYKDAG3kPJQNDRo\",\n\n    base: MAINNET_SPL_TOKENS.JSOL,\n    quote: MAINNET_SPL_TOKENS.WSOL,\n    decimals: MAINNET_SPL_TOKENS.JSOL.decimals,\n\n    version: 4,\n  },\n  JSOL_USDC_V4: {\n    symbol: \"JSOL-USDC\",\n    name: \"JSOL-USDC V4 LP\",\n    mint: \"3JZqf2VPNxj1kDZQsfzC7myM6spsGQbGuFv1gVfdYosN\",\n\n    base: MAINNET_SPL_TOKENS.JSOL,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.JSOL.decimals,\n\n    version: 4,\n  },\n  SHILL_USDC_V4: {\n    symbol: \"SHILL-USDC\",\n    name: \"SHILL-USDC V4 LP\",\n    mint: \"CnUhYBtQEbSBZ76bgxAouVCTCb8rofZzwerVF5z5LREJ\",\n\n    base: MAINNET_SPL_TOKENS.SHILL,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.SHILL.decimals,\n\n    version: 4,\n  },\n  DFL_USDC_V4: {\n    symbol: \"DFL-USDC\",\n    name: \"DFL-USDC V4 LP\",\n    mint: \"Fffijd6UVJdQeLVXhenS8YcsnMUdWJqpbBeH42LFkXgS\",\n\n    base: MAINNET_SPL_TOKENS.DFL,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.DFL.decimals,\n\n    version: 4,\n  },\n  BOKU_USDC_V4: {\n    symbol: \"BOKU-USDC\",\n    name: \"BOKU-USDC V4 LP\",\n    mint: \"8jjQn5Yagb6Nm2WGAxPW1bcGqrTWpg5adf6QukXEarcP\",\n\n    base: MAINNET_SPL_TOKENS.BOKU,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.BOKU.decimals,\n\n    version: 4,\n  },\n  MIMO_SOL_V4: {\n    symbol: \"MIMO-SOL\",\n    name: \"MIMO-SOL V4 LP\",\n    mint: \"HUJ1opSk8AiPfDT47r7n4hTiK2EXgrR3Msy7T8q1BywS\",\n\n    base: MAINNET_SPL_TOKENS.MIMO,\n    quote: MAINNET_SPL_TOKENS.WSOL,\n    decimals: MAINNET_SPL_TOKENS.MIMO.decimals,\n\n    version: 4,\n  },\n  wbWBNB_USDC_V4: {\n    symbol: \"wbWBNB-USDC\",\n    name: \"wbWBNB-USDC V4 LP\",\n    mint: \"FEsEfEJJSfiMQcshUgZ5UigfytfGRQ3z5puyF6DXDp9C\",\n\n    base: MAINNET_SPL_TOKENS.wbWBNB,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.wbWBNB.decimals,\n\n    version: 4,\n  },\n  wePEOPLE_USDC_V4: {\n    symbol: \"wePEOPLE-USDC\",\n    name: \"wePEOPLE-USDC V4 LP\",\n    mint: \"3e5ZCKi4etorpV4pv1fSckP5iJD67xcUkx3RtFCZhbzD\",\n\n    base: MAINNET_SPL_TOKENS.wePEOPLE,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.wePEOPLE.decimals,\n\n    version: 4,\n  },\n  ISOLA_USDT_V4: {\n    symbol: \"ISOLA-USDT\",\n    name: \"ISOLA-USDT V4 LP\",\n    mint: \"H8s1wQsZpRK61pyLF3XwyQc6E8vNUnwRDhy3TBDCDENQ\",\n\n    base: MAINNET_SPL_TOKENS.ISOLA,\n    quote: MAINNET_SPL_TOKENS.USDT,\n    decimals: MAINNET_SPL_TOKENS.ISOLA.decimals,\n\n    version: 4,\n  },\n  SPWN_USDC_V4: {\n    symbol: \"SPWN-USDC\",\n    name: \"SPWN-USDC V4 LP\",\n    mint: \"B5uyCAQcX6nAjZypLgiivbEKabSptgUb8JK9tkaSnqdW\",\n\n    base: MAINNET_SPL_TOKENS.SPWN,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.SPWN.decimals,\n\n    version: 4,\n  },\n  STR_USDC_V4: {\n    symbol: \"STR-USDC\",\n    name: \"STR-USDC V4 LP\",\n    mint: \"8uDVKmVwNmbXHDB7rNKqtpcT9VAsFHTJ5pPYxjyoBbNg\",\n\n    base: MAINNET_SPL_TOKENS.STR,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.STR.decimals,\n\n    version: 4,\n  },\n  SOLC_USDT_V4: {\n    symbol: \"SOLC-USDT\",\n    name: \"SOLC-USDT V4 LP\",\n    mint: \"2g9JzTWycLzK4KEBBHsponAtZRee2ii63bRrJ8tefEyt\",\n\n    base: MAINNET_SPL_TOKENS.SOLC,\n    quote: MAINNET_SPL_TOKENS.USDT,\n    decimals: MAINNET_SPL_TOKENS.SOLC.decimals,\n\n    version: 4,\n  },\n  VI_USDC_V4: {\n    symbol: \"VI-USDC\",\n    name: \"VI-USDC V4 LP\",\n    mint: \"3MwHyHCRfVqtH3ABFtdKXdY9dwemr9GGxQFaBkeq6NjY\",\n\n    base: MAINNET_SPL_TOKENS.VI,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.VI.decimals,\n\n    version: 4,\n  },\n  KKO_USDC_V4: {\n    symbol: \"KKO-USDC\",\n    name: \"KKO-USDC V4 LP\",\n    mint: \"7xr1Doc1NiMWbUg99YVFqQSLfYXNzo6YvacXUsSgBMNW\",\n\n    base: MAINNET_SPL_TOKENS.KKO,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.KKO.decimals,\n\n    version: 4,\n  },\n  XTAG_USDC_V4: {\n    symbol: \"XTAG-USDC\",\n    name: \"XTAG-USDC V4 LP\",\n    mint: \"GCEQbLg4ik5YJ4CMcbtuVqEc4sjLdSGy34rFk1CtGjdg\",\n\n    base: MAINNET_SPL_TOKENS.XTAG,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.XTAG.decimals,\n\n    version: 4,\n  },\n  TTT_USDC_V4: {\n    symbol: \"TTT-USDC\",\n    name: \"TTT-USDC V4 LP\",\n    mint: \"84fmrerHGohoRf4iLPDQ1KG4CjSjCRksYWGzjWfCRM8a\",\n\n    base: MAINNET_SPL_TOKENS.TTT,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.TTT.decimals,\n\n    version: 4,\n  },\n  RUN_USDC_V4: {\n    symbol: \"RUN-USDC\",\n    name: \"RUN-USDC V4 LP\",\n    mint: \"CjTLvvKSQdEujcSzeZRYgk4w1DpuXBbMppLHaxZyz11Y\",\n\n    base: MAINNET_SPL_TOKENS.RUN,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.RUN.decimals,\n\n    version: 4,\n  },\n  CRWNY_USDC_V4: {\n    symbol: \"CRWNY-USDC\",\n    name: \"CRWNY-USDC V4 LP\",\n    mint: \"H3D9Gyi4frRLW6bS9vBthDVDJyzyRJ6XhhpP6PJGWaDC\",\n\n    base: MAINNET_SPL_TOKENS.CRWNY,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.CRWNY.decimals,\n\n    version: 4,\n  },\n  CRWNY_RAY_V4: {\n    symbol: \"CRWNY-RAY\",\n    name: \"CRWNY-RAY V4 LP\",\n    mint: \"5Cz9wGStNjiUg81q8t6sJJeckuT2C14CYSfyQbtYirSX\",\n\n    base: MAINNET_SPL_TOKENS.CRWNY,\n    quote: MAINNET_SPL_TOKENS.RAY,\n    decimals: MAINNET_SPL_TOKENS.CRWNY.decimals,\n\n    version: 4,\n  },\n  BLOCK_USDC_V4: {\n    symbol: \"BLOCK-USDC\",\n    name: \"BLOCK-USDC V4 LP\",\n    mint: \"8i44Y23GkkwDYZ5iSkVEqmrXUfwNmwo9grguTDWKM8wg\",\n\n    base: MAINNET_SPL_TOKENS.BLOCK,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.BLOCK.decimals,\n\n    version: 4,\n  },\n  REAL_USDC_V4: {\n    symbol: \"REAL-USDC\",\n    name: \"REAL-USDC V4 LP\",\n    mint: \"EN43tp8xdkcM8RYSJ4msFHMPTJRXKhUteVYBDJLwTvr3\",\n\n    base: MAINNET_SPL_TOKENS.REAL,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.REAL.decimals,\n\n    version: 4,\n  },\n  FRKT_USDC_V4: {\n    symbol: \"FRKT-USDC\",\n    name: \"FRKT-USDC V4 LP\",\n    mint: \"7MgzqVTGeA4wENme81QPTrPy45NJMKVL9XGwxmNT87cG\",\n\n    base: MAINNET_SPL_TOKENS.FRKT,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.FRKT.decimals,\n\n    version: 4,\n  },\n  MBS_USDC_V4: {\n    symbol: \"MBS-USDC\",\n    name: \"MBS-USDC V4 LP\",\n    mint: \"BAgSWaPZpsQKyZJdvB5KyvmCNj6hzczzentt5FhDCVHb\",\n\n    base: MAINNET_SPL_TOKENS.MBS,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.MBS.decimals,\n\n    version: 4,\n  },\n  PRISM_USDC_V4: {\n    symbol: \"PRISM-USDC\",\n    name: \"PRISM-USDC V4 LP\",\n    mint: \"3baYkTcudvSFMe25UpZcBfdp4FA5kL2E4pfaeJ8AiYJB\",\n\n    base: MAINNET_SPL_TOKENS.PRISM,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.PRISM.decimals,\n\n    version: 4,\n  },\n  CHICKS_USDC_V4: {\n    symbol: \"CHICKS-USDC\",\n    name: \"CHICKS-USDC V4 LP\",\n    mint: \"CPzmcw81a6PDasSXhVLfDRKuTJXZPUqocS9VFf5zCFhs\",\n\n    base: MAINNET_SPL_TOKENS.CHICKS,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.CHICKS.decimals,\n\n    version: 4,\n  },\n  MEAN_RAY_V4: {\n    symbol: \"MEAN-RAY\",\n    name: \"MEAN-RAY V4 LP\",\n    mint: \"H9wUyrxpAErmdNVPitpHSXgwoomoh91ggJKPWtQQoCn1\",\n\n    base: MAINNET_SPL_TOKENS.MEAN,\n    quote: MAINNET_SPL_TOKENS.RAY,\n    decimals: MAINNET_SPL_TOKENS.MEAN.decimals,\n\n    version: 4,\n  },\n  TINY_USDC_V4: {\n    symbol: \"TINY-USDC\",\n    name: \"TINY-USDC V4 LP\",\n    mint: \"Hho6ZzRDj49L4z6zog8nQZFaxMSz6FX6wNzVpMeAMen\",\n\n    base: MAINNET_SPL_TOKENS.TINY,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.TINY.decimals,\n\n    version: 4,\n  },\n  SCY_USDC_V4: {\n    symbol: \"SCY-USDC\",\n    name: \"SCY-USDC V4 LP\",\n    mint: \"EcYk7t6Vw59HDnY2u6H1KDPkk8juMeA1NpGpHiGk1LDf\",\n\n    base: MAINNET_SPL_TOKENS.SCY,\n    quote: MAINNET_SPL_TOKENS.USDC,\n    decimals: MAINNET_SPL_TOKENS.SCY.decimals,\n\n    version: 4,\n  },\n};\n","import { WSOL } from \"./sol\";\nimport { LpTokens, SplTokens } from \"./type\";\n\nexport const DEVNET_SPL_TOKENS: SplTokens = {\n  *[Symbol.iterator]() {\n    yield* Object.values(this);\n  },\n  WSOL: { ...WSOL },\n};\n\nexport const DEVNET_LP_TOKENS: LpTokens = {\n  *[Symbol.iterator]() {\n    yield* Object.values(this);\n  },\n};\n","import { WSOL } from \"./sol\";\nimport { LpTokens, SplTokens } from \"./type\";\n\nexport const TESTNET_SPL_TOKENS: SplTokens = {\n  *[Symbol.iterator]() {\n    yield* Object.values(this);\n  },\n  WSOL: { ...WSOL },\n};\n\nexport const TESTNET_LP_TOKENS: LpTokens = {\n  *[Symbol.iterator]() {\n    yield* Object.values(this);\n  },\n};\n","import { Logger } from \"../common\";\n\nimport { LpTokenInfo, SplTokenInfo } from \"./type\";\n\nconst logger = Logger.from(\"token/util\");\n\n/**\n * Token list\n */\nexport class TokenList {\n  constructor(private tokenList: (SplTokenInfo | LpTokenInfo)[]) {}\n\n  /**\n   * Filter token by mint of token list.\n   *\n   * @param mint - Token's mint address\n   */\n  filterByMint = (mint: string) => {\n    return this.tokenList.filter((token) => token.mint === mint);\n  };\n\n  /**\n   * Filter unique token by mint of token list, must and can only have one result.\n   */\n  filterUniqueByMint = <T extends \"all\" | \"spl\" | \"lp\">(mint: string, tokenType: T | \"all\" | \"spl\" | \"lp\" = \"all\") => {\n    const result = this.tokenList.filter((token) => token.mint === mint);\n\n    if (result.length === 0) {\n      return logger.throwArgumentError(`No token found`, \"mint\", mint);\n    } else if (result.length > 1) {\n      return logger.throwArgumentError(`Multiple tokens found: ${result.length}`, \"mint\", mint);\n    }\n\n    const token = result[0];\n\n    if (tokenType === \"spl\" && \"version\" in token) {\n      return logger.throwArgumentError(\"invalid SPL token mint\", \"mint\", mint);\n    } else if (tokenType === \"lp\" && !(\"version\" in token)) {\n      return logger.throwArgumentError(\"invalid LP token mint\", \"mint\", mint);\n    }\n\n    return token as T extends \"all\" ? SplTokenInfo | LpTokenInfo : T extends \"spl\" ? SplTokenInfo : LpTokenInfo;\n  };\n\n  /**\n   * Get list of token list\n   */\n  getList = () => {\n    return this.tokenList;\n  };\n}\n","/* eslint-disable @typescript-eslint/ban-ts-comment */\n\nimport { PublicKey } from \"@solana/web3.js\";\n\nimport { PublicKeyish, validateAndParsePublicKey } from \"../common\";\nimport { SOL, WSOL } from \"../token\";\n\n/**\n * A currency is any fungible financial instrument on Solana, including SOL and all SPL tokens.\n *\n * The only instance of the base class `Currency` is SOL.\n */\nexport class Currency {\n  public readonly symbol?: string;\n  public readonly name?: string;\n\n  public readonly decimals: number;\n\n  /**\n   * The only instance of the base class `Currency`.\n   */\n  public static readonly SOL: Currency = new Currency(SOL.decimals, SOL.symbol, SOL.name);\n\n  /**\n   * Constructs an instance of the base class `Currency`. The only instance of the base class `Currency` is `Currency.SOL`.\n   * @param decimals - decimals of the currency\n   * @param symbol - symbol of the currency\n   * @param name - name of the currency\n   */\n  public constructor(decimals: number, symbol = \"UNKNOWN\", name = \"UNKNOWN\") {\n    this.decimals = decimals;\n    this.symbol = symbol;\n    this.name = name;\n  }\n}\n\nexport function inspectCurrency() {\n  if (typeof Symbol !== \"undefined\" && typeof Symbol.for === \"function\") {\n    try {\n      // @ts-ignore\n      Currency.prototype[Symbol.for(\"nodejs.util.inspect.custom\")] = function () {\n        return `<Currency: decimals=${this.decimals}, name=${this.name}, symbol=${this.symbol}>`;\n      };\n    } catch (e) {\n      // @ts-ignore\n      Currency.prototype.inspect = function () {\n        return `<Currency: decimals=${this.decimals}, name=${this.name}, symbol=${this.symbol}>`;\n      };\n    }\n  } else {\n    // @ts-ignore\n    Currency.prototype.inspect = function () {\n      return `<Currency: decimals=${this.decimals}, name=${this.name}, symbol=${this.symbol}>`;\n    };\n  }\n}\n\n/**\n * Represents an SPL token with a unique address and some metadata.\n */\nexport class Token extends Currency {\n  public readonly mint: PublicKey;\n\n  /**\n   * The only instance of the base class `Token`.\n   */\n  public static readonly WSOL: Token = new Token(WSOL.mint, WSOL.decimals, SOL.symbol, SOL.name);\n\n  public constructor(mint: PublicKeyish, decimals: number, symbol = \"UNKNOWN\", name = \"UNKNOWN\") {\n    super(decimals, symbol, name);\n\n    this.mint = validateAndParsePublicKey(mint);\n  }\n\n  /**\n   * Returns true if the two tokens are equivalent, i.e. have the same mint address.\n   * @param other - other token to compare\n   */\n  public equals(other: Token): boolean {\n    // short circuit on reference equality\n    if (this === other) {\n      return true;\n    }\n    return this.mint.equals(other.mint);\n  }\n}\n\nexport function inspectToken() {\n  if (typeof Symbol !== \"undefined\" && typeof Symbol.for === \"function\") {\n    try {\n      // @ts-ignore\n      Token.prototype[Symbol.for(\"nodejs.util.inspect.custom\")] = function () {\n        return `<Token: mint=${this.mint.toBase58()}, decimals=${this.decimals}, name=${this.name}, symbol=${\n          this.symbol\n        }>`;\n      };\n    } catch (e) {\n      // @ts-ignore\n      Token.prototype.inspect = function () {\n        return `<Token: mint=${this.mint.toBase58()}, decimals=${this.decimals}, name=${this.name}, symbol=${\n          this.symbol\n        }>`;\n      };\n    }\n  } else {\n    // @ts-ignore\n    Token.prototype.inspect = function () {\n      return `<Token: mint=${this.mint.toBase58()}, decimals=${this.decimals}, name=${this.name}, symbol=${\n        this.symbol\n      }>`;\n    };\n  }\n}\n\n/**\n * Compares two currencies for equality\n */\nexport function currencyEquals(currencyA: Currency, currencyB: Currency): boolean {\n  if (currencyA instanceof Token && currencyB instanceof Token) {\n    return currencyA.equals(currencyB);\n  } else if (currencyA instanceof Token || currencyB instanceof Token) {\n    return false;\n  } else {\n    return currencyA === currencyB;\n  }\n}\n","import _Big from \"big.js\";\nimport BN from \"bn.js\";\nimport _Decimal from \"decimal.js-light\";\n\nimport { Logger } from \"../common\";\n\nimport { BigNumberish, parseBigNumberish } from \"./bignumber\";\nimport { ONE, Rounding } from \"./constant\";\nimport toFormat, { WrappedBig } from \"./to-format\";\n\nconst logger = Logger.from(\"entity/fraction\");\n\nconst Big = toFormat(_Big);\ntype Big = WrappedBig;\n\nconst Decimal = toFormat(_Decimal);\n\nconst toSignificantRounding = {\n  [Rounding.ROUND_DOWN]: Decimal.ROUND_DOWN,\n  [Rounding.ROUND_HALF_UP]: Decimal.ROUND_HALF_UP,\n  [Rounding.ROUND_UP]: Decimal.ROUND_UP,\n};\n\nconst toFixedRounding = {\n  [Rounding.ROUND_DOWN]: Big.roundDown,\n  [Rounding.ROUND_HALF_UP]: Big.roundHalfUp,\n  [Rounding.ROUND_UP]: Big.roundUp,\n};\n\nexport class Fraction {\n  public readonly numerator: BN;\n  public readonly denominator: BN;\n\n  public constructor(numerator: BigNumberish, denominator: BigNumberish = ONE) {\n    this.numerator = parseBigNumberish(numerator);\n    this.denominator = parseBigNumberish(denominator);\n  }\n\n  // performs floor division\n  public get quotient() {\n    return this.numerator.div(this.denominator);\n  }\n\n  public invert(): Fraction {\n    return new Fraction(this.denominator, this.numerator);\n  }\n\n  // +\n  public add(other: Fraction | BigNumberish): Fraction {\n    const otherParsed = other instanceof Fraction ? other : new Fraction(parseBigNumberish(other));\n\n    if (this.denominator.eq(otherParsed.denominator)) {\n      return new Fraction(this.numerator.add(otherParsed.numerator), this.denominator);\n    }\n\n    return new Fraction(\n      this.numerator.mul(otherParsed.denominator).add(otherParsed.numerator.mul(this.denominator)),\n      this.denominator.mul(otherParsed.denominator),\n    );\n  }\n\n  // -\n  public sub(other: Fraction | BigNumberish): Fraction {\n    const otherParsed = other instanceof Fraction ? other : new Fraction(parseBigNumberish(other));\n\n    if (this.denominator.eq(otherParsed.denominator)) {\n      return new Fraction(this.numerator.sub(otherParsed.numerator), this.denominator);\n    }\n\n    return new Fraction(\n      this.numerator.mul(otherParsed.denominator).sub(otherParsed.numerator.mul(this.denominator)),\n      this.denominator.mul(otherParsed.denominator),\n    );\n  }\n\n  // ×\n  public mul(other: Fraction | BigNumberish) {\n    const otherParsed = other instanceof Fraction ? other : new Fraction(parseBigNumberish(other));\n\n    return new Fraction(this.numerator.mul(otherParsed.numerator), this.denominator.mul(otherParsed.denominator));\n  }\n\n  // ÷\n  public div(other: Fraction | BigNumberish) {\n    const otherParsed = other instanceof Fraction ? other : new Fraction(parseBigNumberish(other));\n\n    return new Fraction(this.numerator.mul(otherParsed.denominator), this.denominator.mul(otherParsed.numerator));\n  }\n\n  public toSignificant(\n    significantDigits: number,\n    format: object = { groupSeparator: \"\" },\n    rounding: Rounding = Rounding.ROUND_HALF_UP,\n  ): string {\n    logger.assert(Number.isInteger(significantDigits), `${significantDigits} is not an integer.`);\n    logger.assert(significantDigits > 0, `${significantDigits} is not positive.`);\n\n    Decimal.set({ precision: significantDigits + 1, rounding: toSignificantRounding[rounding] });\n    const quotient = new Decimal(this.numerator.toString())\n      .div(this.denominator.toString())\n      .toSignificantDigits(significantDigits);\n    return quotient.toFormat(quotient.decimalPlaces(), format);\n  }\n\n  public toFixed(\n    decimalPlaces: number,\n    format: object = { groupSeparator: \"\" },\n    rounding: Rounding = Rounding.ROUND_HALF_UP,\n  ): string {\n    logger.assert(Number.isInteger(decimalPlaces), `${decimalPlaces} is not an integer.`);\n    logger.assert(decimalPlaces >= 0, `${decimalPlaces} is negative.`);\n\n    Big.DP = decimalPlaces;\n    Big.RM = toFixedRounding[rounding];\n    return new Big(this.numerator.toString()).div(this.denominator.toString()).toFormat(decimalPlaces, format);\n  }\n}\n","import Big, { BigConstructor, BigSource, RoundingMode } from \"big.js\";\nimport Decimal, { Config, Numeric } from \"decimal.js-light\";\nimport _toFarmat from \"toformat\";\n\ntype TakeStatic<T> = { [P in keyof T]: T[P] };\ninterface FormatOptions {\n  decimalSeparator?: string;\n  groupSeparator?: string;\n  groupSize?: number;\n  fractionGroupSeparator?: string;\n  fractionGroupSize?: number;\n}\ninterface WrappedBigConstructor extends TakeStatic<BigConstructor> {\n  new (value: BigSource): WrappedBig;\n  (value: BigSource): WrappedBig;\n  (): WrappedBigConstructor;\n\n  format: FormatOptions;\n}\nexport interface WrappedBig extends Big {\n  add(n: BigSource): WrappedBig;\n  abs(): WrappedBig;\n  div(n: BigSource): WrappedBig;\n  minus(n: BigSource): WrappedBig;\n  mod(n: BigSource): WrappedBig;\n  mul(n: BigSource): WrappedBig;\n  plus(n: BigSource): WrappedBig;\n  pow(exp: number): WrappedBig;\n  round(dp?: number, rm?: RoundingMode): WrappedBig;\n  sqrt(): WrappedBig;\n  sub(n: BigSource): WrappedBig;\n  times(n: BigSource): WrappedBig;\n  toFormat(): string;\n  toFormat(options: FormatOptions): string;\n  toFormat(fractionLength: number): string;\n  toFormat(fractionLength: number, options: FormatOptions): string;\n  toFormat(fractionLength: number, missionUnknown: number): string;\n  toFormat(fractionLength: number, missionUnknown: number, options: FormatOptions): string;\n}\n\ntype DecimalConstructor = typeof Decimal;\ninterface WrappedDecimalConstructor extends TakeStatic<DecimalConstructor> {\n  new (value: Numeric): WrappedDecimal;\n  clone(config?: Config): WrappedDecimalConstructor;\n  config(config: Config): WrappedDecimal;\n  set(config: Config): WrappedDecimal;\n  format: FormatOptions;\n}\nexport interface WrappedDecimal extends Decimal {\n  absoluteValue(): WrappedDecimal;\n  abs(): WrappedDecimal;\n  dividedBy(y: Numeric): WrappedDecimal;\n  div(y: Numeric): WrappedDecimal;\n  dividedToIntegerBy(y: Numeric): WrappedDecimal;\n  idiv(y: Numeric): WrappedDecimal;\n  logarithm(base?: Numeric): WrappedDecimal;\n  log(base?: Numeric): WrappedDecimal;\n  minus(y: Numeric): WrappedDecimal;\n  sub(y: Numeric): WrappedDecimal;\n  modulo(y: Numeric): WrappedDecimal;\n  mod(y: Numeric): WrappedDecimal;\n  naturalExponetial(): WrappedDecimal;\n  exp(): WrappedDecimal;\n  naturalLogarithm(): WrappedDecimal;\n  ln(): WrappedDecimal;\n  negated(): WrappedDecimal;\n  neg(): WrappedDecimal;\n  plus(y: Numeric): WrappedDecimal;\n  add(y: Numeric): WrappedDecimal;\n  squareRoot(): WrappedDecimal;\n  sqrt(): WrappedDecimal;\n  times(y: Numeric): WrappedDecimal;\n  mul(y: Numeric): WrappedDecimal;\n  toWrappedDecimalPlaces(dp?: number, rm?: number): WrappedDecimal;\n  todp(dp?: number, rm?: number): WrappedDecimal;\n  toInteger(): WrappedDecimal;\n  toint(): WrappedDecimal;\n  toPower(y: Numeric): WrappedDecimal;\n  pow(y: Numeric): WrappedDecimal;\n  toSignificantDigits(sd?: number, rm?: number): WrappedDecimal;\n  tosd(sd?: number, rm?: number): WrappedDecimal;\n  toFormat(options: FormatOptions): string;\n  toFormat(fractionLength: number): string;\n  toFormat(fractionLength: number, options: FormatOptions): string;\n  toFormat(fractionLength: number, missionUnknown: number): string;\n  toFormat(fractionLength: number, missionUnknown: number, options: FormatOptions): string;\n}\n\nconst toFormat: {\n  (fn: BigConstructor): WrappedBigConstructor;\n  (fn: DecimalConstructor): WrappedDecimalConstructor;\n} = _toFarmat;\nexport default toFormat;\n","import { _100, Rounding } from \"./constant\";\nimport { Fraction } from \"./fraction\";\n\nexport const _100_PERCENT = new Fraction(_100);\n\nexport class Percent extends Fraction {\n  public toSignificant(significantDigits = 5, format?: object, rounding?: Rounding) {\n    return this.mul(_100_PERCENT).toSignificant(significantDigits, format, rounding);\n  }\n\n  public toFixed(decimalPlaces = 2, format?: object, rounding?: Rounding) {\n    return this.mul(_100_PERCENT).toFixed(decimalPlaces, format, rounding);\n  }\n}\n","import { Logger } from \"../common\";\n\nimport { BigNumberish, tenExponentiate } from \"./bignumber\";\nimport { Rounding } from \"./constant\";\nimport { Currency, currencyEquals } from \"./currency\";\nimport { Fraction } from \"./fraction\";\n\nconst logger = Logger.from(\"entity/price\");\n\nexport class Price extends Fraction {\n  public readonly baseCurrency: Currency; // input i.e. denominator\n  public readonly quoteCurrency: Currency; // output i.e. numerator\n  // used to adjust the raw fraction w/r/t the decimals of the {base,quote}Token\n  public readonly scalar: Fraction;\n\n  // denominator and numerator _must_ be raw, i.e. in the native representation\n  public constructor(\n    baseCurrency: Currency,\n    denominator: BigNumberish,\n    quoteCurrency: Currency,\n    numerator: BigNumberish,\n  ) {\n    super(numerator, denominator);\n\n    this.baseCurrency = baseCurrency;\n    this.quoteCurrency = quoteCurrency;\n    this.scalar = new Fraction(tenExponentiate(baseCurrency.decimals), tenExponentiate(quoteCurrency.decimals));\n  }\n\n  public get raw(): Fraction {\n    return new Fraction(this.numerator, this.denominator);\n  }\n\n  public get adjusted(): Fraction {\n    return super.mul(this.scalar);\n  }\n\n  public invert(): Price {\n    return new Price(this.quoteCurrency, this.numerator, this.baseCurrency, this.denominator);\n  }\n\n  public mul(other: Price): Price {\n    logger.assert(currencyEquals(this.quoteCurrency, other.baseCurrency), \"mul currency not equals\");\n\n    const fraction = super.mul(other);\n    return new Price(this.baseCurrency, fraction.denominator, other.quoteCurrency, fraction.numerator);\n  }\n\n  public toSignificant(significantDigits = this.quoteCurrency.decimals, format?: object, rounding?: Rounding): string {\n    return this.adjusted.toSignificant(significantDigits, format, rounding);\n  }\n\n  public toFixed(decimalPlaces = this.quoteCurrency.decimals, format?: object, rounding?: Rounding): string {\n    return this.adjusted.toFixed(decimalPlaces, format, rounding);\n  }\n}\n","import { GetStructureSchema, publicKey, struct, u32, u64, u8 } from \"../marshmallow\";\n\nexport const SPL_MINT_LAYOUT = struct([\n  u32(\"mintAuthorityOption\"),\n  publicKey(\"mintAuthority\"),\n  u64(\"supply\"),\n  u8(\"decimals\"),\n  u8(\"isInitialized\"),\n  u32(\"freezeAuthorityOption\"),\n  publicKey(\"freezeAuthority\"),\n]);\n\nexport type SplMintLayout = typeof SPL_MINT_LAYOUT;\n\nexport type SplMint = GetStructureSchema<SplMintLayout>;\n\n// 165 bytes\nexport const SPL_ACCOUNT_LAYOUT = struct([\n  publicKey(\"mint\"),\n  publicKey(\"owner\"),\n  u64(\"amount\"),\n  u32(\"delegateOption\"),\n  publicKey(\"delegate\"),\n  u8(\"state\"),\n  u32(\"isNativeOption\"),\n  u64(\"isNative\"),\n  u64(\"delegatedAmount\"),\n  u32(\"closeAuthorityOption\"),\n  publicKey(\"closeAuthority\"),\n]);\n\nexport type SplAccountLayout = typeof SPL_ACCOUNT_LAYOUT;\n\nexport type SplAccount = GetStructureSchema<SplAccountLayout>;\n","import { Token as _Token, u64 as _u64 } from \"@solana/spl-token\";\nimport {\n  Commitment, Connection, Keypair, PublicKey, Signer, SystemProgram, TransactionInstruction,\n} from \"@solana/web3.js\";\nimport BN from \"bn.js\";\n\nimport { ASSOCIATED_TOKEN_PROGRAM_ID, TOKEN_PROGRAM_ID, validateAndParsePublicKey } from \"../common\";\nimport { BigNumberish, parseBigNumberish } from \"../entity\";\nimport { u64 } from \"../marshmallow\";\nimport { WSOL } from \"../token\";\n\nimport { SPL_ACCOUNT_LAYOUT } from \"./layout\";\n\n// https://github.com/solana-labs/solana-program-library/tree/master/token/js/client\nexport class Spl {\n  static getAssociatedTokenAccount({ mint, owner }: { mint: PublicKey; owner: PublicKey }) {\n    return _Token.getAssociatedTokenAddress(ASSOCIATED_TOKEN_PROGRAM_ID, TOKEN_PROGRAM_ID, mint, owner, true);\n  }\n\n  static makeCreateAssociatedTokenAccountInstruction({\n    mint,\n    associatedAccount,\n    owner,\n    payer,\n  }: {\n    mint: PublicKey;\n    associatedAccount: PublicKey;\n    owner: PublicKey;\n    payer: PublicKey;\n  }) {\n    return _Token.createAssociatedTokenAccountInstruction(\n      ASSOCIATED_TOKEN_PROGRAM_ID,\n      TOKEN_PROGRAM_ID,\n      mint,\n      associatedAccount,\n      owner,\n      payer,\n    );\n  }\n\n  // https://github.com/solana-labs/solana-program-library/blob/master/token/js/client/token.js\n  static async makeCreateWrappedNativeAccountInstructions({\n    connection,\n    owner,\n    payer,\n    amount,\n    // baseRentExemption,\n    commitment,\n  }: {\n    connection: Connection;\n    owner: PublicKey;\n    payer: PublicKey;\n    amount: BigNumberish;\n    // baseRentExemption?: number;\n    commitment?: Commitment;\n  }) {\n    const instructions: TransactionInstruction[] = [];\n\n    // Allocate memory for the account\n    // baseRentExemption = getMinimumBalanceForRentExemption size is 0\n    // -X POST -H \"Content-Type: application/json\" -d '{\"jsonrpc\":\"2.0\", \"id\":1, \"method\":\"getMinimumBalanceForRentExemption\", \"params\":[0]}'\n    // baseRentExemption = perByteRentExemption * 128\n    // balanceNeeded = baseRentExemption / 128 * (dataSize + 128)\n    const balanceNeeded = await connection.getMinimumBalanceForRentExemption(SPL_ACCOUNT_LAYOUT.span, commitment);\n\n    // Create a new account\n    const lamports = parseBigNumberish(amount).add(new BN(balanceNeeded));\n    const newAccount = Keypair.generate();\n    instructions.push(\n      SystemProgram.createAccount({\n        fromPubkey: payer,\n        newAccountPubkey: newAccount.publicKey,\n        lamports: lamports.toNumber(),\n        space: SPL_ACCOUNT_LAYOUT.span,\n        programId: TOKEN_PROGRAM_ID,\n      }),\n    );\n\n    // * merge this instruction into SystemProgram.createAccount\n    // * will save transaction size ~17(441-424) bytes\n    // Send lamports to it (these will be wrapped into native tokens by the token program)\n    // instructions.push(\n    //   SystemProgram.transfer({\n    //     fromPubkey: payer,\n    //     toPubkey: newAccount.publicKey,\n    //     lamports: parseBigNumberish(amount).toNumber(),\n    //   }),\n    // );\n\n    // Assign the new account to the native token mint.\n    // the account will be initialized with a balance equal to the native token balance.\n    // (i.e. amount)\n    instructions.push(\n      this.makeInitAccountInstruction({\n        mint: validateAndParsePublicKey(WSOL.mint),\n        tokenAccount: newAccount.publicKey,\n        owner,\n      }),\n    );\n\n    return { newAccount, instructions };\n  }\n\n  static async insertCreateWrappedNativeAccountInstructions({\n    connection,\n    owner,\n    payer,\n    amount,\n    instructions,\n    signers,\n    commitment,\n  }: {\n    connection: Connection;\n    owner: PublicKey;\n    payer: PublicKey;\n    amount: BigNumberish;\n    instructions: TransactionInstruction[];\n    signers: Signer[];\n    commitment?: Commitment;\n  }) {\n    const { newAccount, instructions: newInstructions } = await this.makeCreateWrappedNativeAccountInstructions({\n      connection,\n      owner,\n      payer,\n      amount,\n      commitment,\n    });\n\n    instructions.push(...newInstructions);\n    signers.push(newAccount);\n\n    return newAccount.publicKey;\n  }\n\n  static makeInitMintInstruction({\n    mint,\n    decimals,\n    mintAuthority,\n    freezeAuthority = null,\n  }: {\n    mint: PublicKey;\n    decimals: number;\n    mintAuthority: PublicKey;\n    freezeAuthority?: PublicKey | null;\n  }) {\n    return _Token.createInitMintInstruction(TOKEN_PROGRAM_ID, mint, decimals, mintAuthority, freezeAuthority);\n  }\n\n  static makeMintToInstruction({\n    mint,\n    dest,\n    authority,\n    amount,\n    multiSigners = [],\n  }: {\n    mint: PublicKey;\n    dest: PublicKey;\n    authority: PublicKey;\n    amount: BigNumberish;\n    multiSigners?: Signer[];\n  }) {\n    const LAYOUT = u64(\"amount\");\n    const data = Buffer.alloc(LAYOUT.span);\n    LAYOUT.encode(parseBigNumberish(amount), data);\n\n    return _Token.createMintToInstruction(TOKEN_PROGRAM_ID, mint, dest, authority, multiSigners, _u64.fromBuffer(data));\n  }\n\n  static makeInitAccountInstruction({\n    mint,\n    tokenAccount,\n    owner,\n  }: {\n    mint: PublicKey;\n    tokenAccount: PublicKey;\n    owner: PublicKey;\n  }) {\n    return _Token.createInitAccountInstruction(TOKEN_PROGRAM_ID, mint, tokenAccount, owner);\n  }\n\n  static makeTransferInstruction({\n    source,\n    destination,\n    owner,\n    amount,\n    multiSigners = [],\n  }: {\n    source: PublicKey;\n    destination: PublicKey;\n    owner: PublicKey;\n    amount: BigNumberish;\n    multiSigners?: Signer[];\n  }) {\n    const LAYOUT = u64(\"amount\");\n    const data = Buffer.alloc(LAYOUT.span);\n    LAYOUT.encode(parseBigNumberish(amount), data);\n\n    return _Token.createTransferInstruction(\n      TOKEN_PROGRAM_ID,\n      source,\n      destination,\n      owner,\n      multiSigners,\n      _u64.fromBuffer(data),\n    );\n  }\n\n  static makeCloseAccountInstruction({\n    tokenAccount,\n    owner,\n    payer,\n    multiSigners = [],\n  }: {\n    tokenAccount: PublicKey;\n    owner: PublicKey;\n    payer: PublicKey;\n    multiSigners?: Signer[];\n  }) {\n    return _Token.createCloseAccountInstruction(TOKEN_PROGRAM_ID, tokenAccount, payer, owner, multiSigners);\n  }\n}\n","import { Connection, PublicKey, Signer, Transaction, TransactionInstruction } from \"@solana/web3.js\";\n\nimport { BigNumberish, Token } from \"../entity\";\nimport { Spl, SplAccount } from \"../spl\";\n\nexport interface TokenAccount {\n  pubkey: PublicKey;\n  accountInfo: SplAccount;\n}\n\nexport interface SelectTokenAccountParams {\n  tokenAccounts: TokenAccount[];\n  mint: PublicKey;\n  owner: PublicKey;\n  config?: { associatedOnly?: boolean };\n}\n\nexport interface HandleTokenAccountParams {\n  connection: Connection;\n  side: \"in\" | \"out\";\n  amount: BigNumberish;\n  mint: PublicKey;\n  tokenAccount: PublicKey | null;\n  owner: PublicKey;\n  payer?: PublicKey;\n  frontInstructions: TransactionInstruction[];\n  endInstructions?: TransactionInstruction[];\n  signers: Signer[];\n  bypassAssociatedCheck: boolean;\n}\n\nexport interface UnsignedTransactionAndSigners {\n  transaction: Transaction;\n  signers: Signer[];\n}\n\nexport class Base {\n  static async _selectTokenAccount(params: SelectTokenAccountParams) {\n    const { tokenAccounts, mint, owner, config } = params;\n\n    const { associatedOnly } = {\n      // default\n      ...{ associatedOnly: true },\n      // custom\n      ...config,\n    };\n\n    const _tokenAccounts = tokenAccounts\n      // filter by mint\n      .filter(({ accountInfo }) => accountInfo.mint.equals(mint))\n      // sort by balance\n      .sort((a, b) => (a.accountInfo.amount.lt(b.accountInfo.amount) ? 1 : -1));\n\n    const ata = await Spl.getAssociatedTokenAccount({ mint, owner });\n\n    for (const tokenAccount of _tokenAccounts) {\n      const { pubkey } = tokenAccount;\n\n      if (associatedOnly) {\n        // return ata only\n        if (ata.equals(pubkey)) return pubkey;\n      } else {\n        // return the first account\n        return pubkey;\n      }\n    }\n\n    return null;\n  }\n\n  static async _handleTokenAccount(params: HandleTokenAccountParams) {\n    const {\n      connection,\n      side,\n      amount,\n      mint,\n      tokenAccount,\n      owner,\n      payer = owner,\n      frontInstructions,\n      endInstructions,\n      signers,\n      bypassAssociatedCheck,\n    } = params;\n\n    const ata = await Spl.getAssociatedTokenAccount({ mint, owner });\n\n    if (Token.WSOL.mint.equals(mint)) {\n      const newTokenAccount = await Spl.insertCreateWrappedNativeAccountInstructions({\n        connection,\n        owner,\n        payer,\n        instructions: frontInstructions,\n        signers,\n        amount,\n      });\n      // if no endInstructions provide, no need to close\n      if (endInstructions) {\n        endInstructions.push(Spl.makeCloseAccountInstruction({ tokenAccount: newTokenAccount, owner, payer }));\n      }\n\n      return newTokenAccount;\n    } else if (!tokenAccount || (side === \"out\" && !ata.equals(tokenAccount) && !bypassAssociatedCheck)) {\n      frontInstructions.push(\n        Spl.makeCreateAssociatedTokenAccountInstruction({\n          mint,\n          associatedAccount: ata,\n          owner,\n          payer,\n        }),\n      );\n\n      return ata;\n    }\n\n    return tokenAccount;\n  }\n}\n","import { PublicKey } from \"@solana/web3.js\";\n\nimport { SerumVersion } from \"./type\";\n\n/* ================= program public keys ================= */\nexport const _SERUM_PROGRAM_ID_V3 = \"9xQeWvG816bUx9EPjHmaT23yvVM2ZWbrrpZb9PusVFin\";\nexport const SERUM_PROGRAM_ID_V3 = new PublicKey(_SERUM_PROGRAM_ID_V3);\n\n// serum program id string => serum version\nexport const SERUM_PROGRAMID_TO_VERSION: {\n  [key: string]: SerumVersion;\n} = {\n  [_SERUM_PROGRAM_ID_V3]: 3,\n};\n\n// serum version => serum program id\nexport const SERUM_VERSION_TO_PROGRAMID: { [key in SerumVersion]?: PublicKey } & {\n  [K: number]: PublicKey;\n} = {\n  3: SERUM_PROGRAM_ID_V3,\n};\n","import { blob, GetStructureSchema, publicKey, struct, u64 } from \"../marshmallow\";\n\n/* ================= state layouts ================= */\nexport const MARKET_STATE_LAYOUT_V3 = struct([\n  blob(5),\n\n  blob(8), // accountFlagsLayout('accountFlags'),\n\n  publicKey(\"ownAddress\"),\n\n  u64(\"vaultSignerNonce\"),\n\n  publicKey(\"baseMint\"),\n  publicKey(\"quoteMint\"),\n\n  publicKey(\"baseVault\"),\n  u64(\"baseDepositsTotal\"),\n  u64(\"baseFeesAccrued\"),\n\n  publicKey(\"quoteVault\"),\n  u64(\"quoteDepositsTotal\"),\n  u64(\"quoteFeesAccrued\"),\n\n  u64(\"quoteDustThreshold\"),\n\n  publicKey(\"requestQueue\"),\n  publicKey(\"eventQueue\"),\n\n  publicKey(\"bids\"),\n  publicKey(\"asks\"),\n\n  u64(\"baseLotSize\"),\n  u64(\"quoteLotSize\"),\n\n  u64(\"feeRateBps\"),\n\n  u64(\"referrerRebatesAccrued\"),\n\n  blob(7),\n]);\n\nexport type MarketStateLayoutV3 = typeof MARKET_STATE_LAYOUT_V3;\nexport type MarketStateLayout = MarketStateLayoutV3;\n\nexport type MarketStateV3 = GetStructureSchema<MarketStateLayoutV3>;\nexport type MarketState = MarketStateV3;\n\n/* ================= index ================= */\n// version => market state layout\nexport const MARKET_VERSION_TO_STATE_LAYOUT: {\n  [version: number]: MarketStateLayout;\n} = {\n  3: MARKET_STATE_LAYOUT_V3,\n};\n","import { PublicKey } from \"@solana/web3.js\";\n\nimport { Logger } from \"../common\";\n\nimport { SERUM_PROGRAMID_TO_VERSION, SERUM_VERSION_TO_PROGRAMID } from \"./id\";\nimport { MARKET_VERSION_TO_STATE_LAYOUT } from \"./layout\";\n\nconst logger = Logger.from(\"Serum\");\n\nexport class Market {\n  /* ================= get version and program id ================= */\n  static getProgramId(version: number) {\n    const programId = SERUM_VERSION_TO_PROGRAMID[version];\n    logger.assertArgument(!!programId, \"invalid version\", \"version\", version);\n\n    return programId;\n  }\n\n  static getVersion(programId: PublicKey) {\n    const programIdString = programId.toBase58();\n\n    const version = SERUM_PROGRAMID_TO_VERSION[programIdString];\n    logger.assertArgument(!!version, \"invalid program id\", \"programId\", programIdString);\n\n    return version;\n  }\n\n  /* ================= get layout ================= */\n  static getStateLayout(version: number) {\n    const STATE_LAYOUT = MARKET_VERSION_TO_STATE_LAYOUT[version];\n    logger.assertArgument(!!STATE_LAYOUT, \"invalid version\", \"version\", version);\n\n    return STATE_LAYOUT;\n  }\n\n  static getLayouts(version: number) {\n    return { state: this.getStateLayout(version) };\n  }\n\n  /* ================= get key ================= */\n  static async getAssociatedAuthority({ programId, marketId }: { programId: PublicKey; marketId: PublicKey }) {\n    const seeds = [marketId.toBuffer()];\n\n    let nonce = 0;\n    let publicKey: PublicKey;\n\n    while (nonce < 100) {\n      try {\n        // Buffer.alloc(7) nonce u64\n        const seedsWithNonce = seeds.concat(Buffer.from([nonce]), Buffer.alloc(7));\n        publicKey = await PublicKey.createProgramAddress(seedsWithNonce, programId);\n      } catch (err) {\n        if (err instanceof TypeError) {\n          throw err;\n        }\n        nonce++;\n        continue;\n      }\n      return { publicKey, nonce };\n    }\n\n    return logger.throwArgumentError(\"unable to find a viable program address nonce\", \"params\", {\n      programId,\n      marketId,\n    });\n  }\n}\n","import { PublicKey } from \"@solana/web3.js\";\n\nimport { seq, struct, u64 } from \"../marshmallow\";\n\nexport const ModelDataPubkey = new PublicKey(\"CDSr3ssLcRB6XYPJwAfFt18MZvEZp4LjHcvzBVZ45duo\");\nconst ELEMENT_SIZE = 50000;\n\nexport const DataElement = struct([u64(\"x\"), u64(\"y\"), u64(\"price\")]);\n\nexport const ModelDataInfo = struct([\n  u64(\"accountType\"),\n  u64(\"status\"),\n  u64(\"multiplier\"),\n  u64(\"validDataCount\"),\n  seq(DataElement, ELEMENT_SIZE, \"DataElement\"),\n]);\n\nexport interface stableModelLayout {\n  accountType: number;\n  status: number;\n  multiplier: number;\n  validDataCount: number;\n  DataElement: { x: number; y: number; price: number }[];\n}\n\nfunction estimateRangeByXyReal(_xReal: number, _yReal: number) {\n  return [0, ELEMENT_SIZE - 2];\n}\n\nfunction estimateRangeByX(_x: number) {\n  return [0, ELEMENT_SIZE - 2];\n}\n\nfunction estimateRangeByY(_y: number) {\n  return [0, ELEMENT_SIZE - 2];\n}\n\nfunction getMininumRangeByXyReal(\n  layoutData: stableModelLayout,\n  xReal: number,\n  yReal: number,\n): [number, number, boolean] {\n  const [min, max] = estimateRangeByXyReal(xReal, yReal);\n  let minRangeIdx = min;\n  let maxRangeIdx = max;\n  let mid = 0;\n  const target = (xReal * layoutData.multiplier) / yReal;\n  while (minRangeIdx <= maxRangeIdx) {\n    mid = Math.floor((maxRangeIdx + minRangeIdx) / 2);\n    if (mid === 0 || mid >= ELEMENT_SIZE - 2) {\n      return [mid, mid, false];\n    }\n    const cur = (layoutData.DataElement[mid].x * layoutData.multiplier) / layoutData.DataElement[mid].y;\n    const left = (layoutData.DataElement[mid - 1].x * layoutData.multiplier) / layoutData.DataElement[mid - 1].y;\n    const right = (layoutData.DataElement[mid + 1].x * layoutData.multiplier) / layoutData.DataElement[mid + 1].y;\n\n    if (target === cur) {\n      return [mid, mid, true];\n    } else if (target === left) {\n      return [mid - 1, mid - 1, true];\n    } else if (target === right) {\n      return [mid + 1, mid + 1, true];\n    } else if (target < left) {\n      maxRangeIdx = mid - 1;\n    } else if (target > left && target < cur) {\n      return [mid - 1, mid, true];\n    } else if (target > cur && target < right) {\n      return [mid, mid + 1, true];\n    } else {\n      minRangeIdx = mid + 1;\n    }\n  }\n  return [mid, mid, false];\n}\nfunction getRatio(layoutData: stableModelLayout, xReal: number, yReal: number) {\n  const [minRangeIdx, maxRangeIdx, find] = getMininumRangeByXyReal(layoutData, xReal, yReal);\n\n  if (!find) {\n    return 0;\n  }\n\n  if (minRangeIdx === maxRangeIdx) {\n    const x = layoutData.DataElement[minRangeIdx].x;\n    const ratio = (xReal * layoutData.multiplier) / x;\n    return ratio;\n  } else {\n    const x1 = layoutData.DataElement[minRangeIdx].x;\n    const y1 = layoutData.DataElement[minRangeIdx].y;\n    const x2 = layoutData.DataElement[maxRangeIdx].x;\n    const y2 = layoutData.DataElement[maxRangeIdx].y;\n\n    const xDenominator = yReal * (x2 * y1 - x1 * y2);\n    const xNumerator1 = x1 * xDenominator;\n    const xNumerator2 = (x2 - x1) * (xReal * y1 - x1 * yReal) * y2;\n\n    const xNumerator = xNumerator1 + xNumerator2;\n    const ratio = (xReal * layoutData.multiplier * xDenominator) / xNumerator;\n    return ratio;\n  }\n}\n\nfunction realToTable(layoutData: stableModelLayout, realValue: number, ratio: number): number {\n  return (realValue * layoutData.multiplier) / ratio;\n}\n\nfunction tableToReal(layoutData: stableModelLayout, tableValue: number, ratio: number): number {\n  return (tableValue * ratio) / layoutData.multiplier;\n}\n\nfunction getMinimumRangeByX(layoutData: stableModelLayout, x: number): [number, number, boolean] {\n  const [min, max] = estimateRangeByX(x);\n  let minRangeIdx = min;\n  let maxRangeIdx = max;\n  let mid = 0;\n  const target = x;\n  while (minRangeIdx < maxRangeIdx) {\n    mid = Math.floor((maxRangeIdx + minRangeIdx) / 2);\n\n    if (mid <= 0 || mid > ELEMENT_SIZE - 2) {\n      return [mid, mid, false];\n    }\n    const cur = layoutData.DataElement[mid].x;\n    const left = layoutData.DataElement[mid - 1].x;\n    const right = layoutData.DataElement[mid + 1].x;\n\n    if (target === cur) return [mid, mid, true];\n    else if (target === left) return [mid - 1, mid - 1, true];\n    else if (target === right) return [mid + 1, mid + 1, true];\n    else if (target < left) maxRangeIdx = mid - 1;\n    else if (target > left && target < cur) return [mid - 1, mid, true];\n    else if (target > cur && target < right) return [mid, mid + 1, true];\n    else minRangeIdx = mid + 1;\n  }\n  return [mid, mid, false];\n}\n\nfunction getMinimumRangeByY(layoutData: stableModelLayout, y: number): [number, number, boolean] {\n  const [min, max] = estimateRangeByY(y);\n  let minRangeIdx = min;\n  let maxRangeIdx = max;\n  let mid = 0;\n  const target = y;\n  while (minRangeIdx <= maxRangeIdx) {\n    mid = Math.floor((maxRangeIdx + minRangeIdx) / 2);\n    if (mid <= 0 || mid >= ELEMENT_SIZE - 2) {\n      return [mid, mid, false];\n    }\n\n    const cur = layoutData.DataElement[mid].y;\n    const left = layoutData.DataElement[mid - 1].y;\n    const right = layoutData.DataElement[mid + 1].y;\n    if (target === cur) return [mid, mid, true];\n    else if (target === left) return [mid - 1, mid - 1, true];\n    else if (target === right) return [mid + 1, mid + 1, true];\n    else if (target < right) {\n      minRangeIdx = mid + 1;\n    } else if (target < left && target > cur) return [mid - 1, mid, true];\n    else if (target < cur && target > right) return [mid, mid + 1, true];\n    else maxRangeIdx = mid - 1;\n  }\n  return [mid, mid, false];\n}\n\nfunction getDataByX(\n  layoutData: stableModelLayout,\n  x: number,\n  dx: number,\n  priceUp: boolean,\n): [number, number, boolean, boolean] {\n  const xWithDx = priceUp ? x + dx : x - dx;\n  const [minIdx, maxIdx, find] = getMinimumRangeByX(layoutData, xWithDx);\n  if (!find) return [0, 0, false, find];\n\n  if (minIdx === maxIdx) return [layoutData.DataElement[maxIdx].price, layoutData.DataElement[maxIdx].y, false, find];\n  else {\n    const x1 = layoutData.DataElement[minIdx].x;\n    const x2 = layoutData.DataElement[maxIdx].x;\n    const p1 = layoutData.DataElement[minIdx].price;\n    const p2 = layoutData.DataElement[maxIdx].price;\n    const y1 = layoutData.DataElement[minIdx].y;\n    const y2 = layoutData.DataElement[maxIdx].y;\n\n    if (x >= x1 && x <= x2) {\n      if (priceUp) return [p2, y2, true, find];\n      else return [p1, y1, true, find];\n    } else {\n      let p, y;\n      if (priceUp) {\n        p = p1 + ((p2 - p1) * (x - x1)) / (x2 - x1);\n        y = y1 - ((xWithDx - x1) * layoutData.multiplier) / p2;\n      } else {\n        p = p1 + ((p2 - p1) * (x - x1)) / (x2 - x1);\n        y = y2 + ((x2 - xWithDx) * layoutData.multiplier) / p1;\n      }\n      return [p, y, false, find];\n    }\n  }\n}\n\nfunction getDataByY(\n  layoutData: stableModelLayout,\n  y: number,\n  dy: number,\n  priceUp: boolean,\n): [number, number, boolean, boolean] {\n  const yWithDy = priceUp ? y - dy : y + dy;\n  const [minIdx, maxIdx, find] = getMinimumRangeByY(layoutData, yWithDy);\n  if (!find) return [0, 0, false, find];\n  if (minIdx === maxIdx) return [layoutData.DataElement[maxIdx].price, layoutData.DataElement[maxIdx].x, false, find];\n  else {\n    const x1 = layoutData.DataElement[minIdx].x;\n    const x2 = layoutData.DataElement[maxIdx].x;\n    const p1 = layoutData.DataElement[minIdx].price;\n    const p2 = layoutData.DataElement[maxIdx].price;\n    const y1 = layoutData.DataElement[minIdx].y;\n    const y2 = layoutData.DataElement[maxIdx].y;\n\n    if (y >= y2 && y <= y1) {\n      return priceUp ? [p2, x2, true, find] : [p1, x1, true, find];\n    } else {\n      let p, x;\n      if (priceUp) {\n        p = p1 + ((p2 - p1) * (y1 - y)) / (y1 - y2);\n        x = x1 + (p2 * (y1 - yWithDy)) / layoutData.multiplier;\n      } else {\n        p = p1 + ((p2 - p1) * (y1 - y)) / (y1 - y2);\n        x = x2 - (p1 * (yWithDy - y2)) / layoutData.multiplier;\n      }\n      return [p, x, false, find];\n    }\n  }\n}\n\nfunction getMidPrice(layoutData: stableModelLayout, x: number): number {\n  const ret = getDataByX(layoutData, x, 0, false);\n  if (ret[3]) return ret[0];\n  else return 0;\n}\n\nexport function getDyByDxBaseIn(layoutData: stableModelLayout, xReal: number, yReal: number, dxReal: number) {\n  const ratio = getRatio(layoutData, xReal, yReal);\n  const x = realToTable(layoutData, xReal, ratio);\n  const y = realToTable(layoutData, yReal, ratio);\n  const dx = realToTable(layoutData, dxReal, ratio);\n  const priceUp = true;\n  const [p, y2, lessTrade, find] = getDataByX(layoutData, x, dx, priceUp);\n  if (!find) return 0;\n  if (lessTrade) {\n    const dyReal = (dxReal * layoutData.multiplier) / p;\n    return dyReal;\n  } else {\n    const dy = y - y2;\n    const dyReal = tableToReal(layoutData, dy, ratio);\n    return dyReal;\n  }\n}\n\nexport function getDxByDyBaseIn(layoutData: stableModelLayout, xReal: number, yReal: number, dyReal: number) {\n  const ratio = getRatio(layoutData, xReal, yReal);\n  const x = realToTable(layoutData, xReal, ratio);\n  const y = realToTable(layoutData, yReal, ratio);\n  const dy = realToTable(layoutData, dyReal, ratio);\n  const priceUp = false;\n  const [p, x2, lessTrade, find] = getDataByY(layoutData, y, dy, priceUp);\n  if (!find) return 0;\n  if (lessTrade) {\n    const dxReal = (dyReal * p) / layoutData.multiplier;\n    return dxReal;\n  } else {\n    const dx = x - x2;\n    const dxReal = tableToReal(layoutData, dx, ratio);\n    return dxReal;\n  }\n}\n\nexport function formatLayout(buffer: Buffer): stableModelLayout {\n  const layoutInfo = ModelDataInfo.decode(buffer);\n  return {\n    accountType: layoutInfo.accountType.toNumber(),\n    status: layoutInfo.status.toNumber(),\n    multiplier: layoutInfo.multiplier.toNumber(),\n    validDataCount: layoutInfo.validDataCount.toNumber(),\n    DataElement: layoutInfo.DataElement.map((item: any) => ({\n      x: item.x.toNumber(),\n      y: item.y.toNumber(),\n      price: item.price.toNumber(),\n    })),\n  };\n}\n\nexport function getStablePrice(layoutData: stableModelLayout, coinReal: number, pcReal: number, baseCoin: boolean) {\n  const price =\n    getMidPrice(layoutData, realToTable(layoutData, coinReal, getRatio(layoutData, coinReal, pcReal))) /\n    layoutData.multiplier;\n  return baseCoin ? price : 1 / price;\n}\n","export const MAINNET_OFFICIAL_LIQUIDITY_POOLS = [\n  /* ================= v4 ================= */\n  // FIDA-RAY\n  \"2dRNngAm729NzLbb1pzgHtfHvPqR4XHFmFyYK78EfEeX\",\n  // OXY-RAY\n  \"B5ZguAWAGC3GXVtJZVfoMtzvEvDnDKBPCevsUKMy4DTZ\",\n  // MAPS-RAY\n  \"5VyLSjUvaRxsubirbvbfJMbrKZRx1b7JZzuCAfyqgimf\",\n  // KIN-RAY\n  \"6kmMMacvoCKBkBrqssLEdFuEZu2wqtLdNQxh9VjtzfwT\",\n  // RAY-USDT\n  \"DVa7Qmb5ct9RCpaU7UTpSaf3GVMYz17vNVU67XpdCRut\",\n  // SOL-USDC\n  \"58oQChx4yWmvKdwLLZzBi4ChoCc2fqCUWBkwMihLYQo2\",\n  // YFI-USDC\n  \"83xxjVczDseaCzd7D61BRo7LcP7cMXut5n7thhB4rL4d\",\n  // SRM-USDC\n  \"8tzS7SkUZyHPQY7gLqsMCXZ5EDCgjESUHcB17tiR1h3Z\",\n  // FTT-USDC\n  \"4C2Mz1bVqe42QDDTyJ4HFCFFGsH5YDzo91Cen5w5NGun\",\n  // BTC-USDC\n  \"6kbC5epG18DF2DwPEW34tBy5pGFS7pEGALR3v5MGxgc5\",\n  // SUSHI-USDC\n  \"5dHEPTgvscKkAc54R77xUeGdgShdG9Mf6gJ9bwBqyb3V\",\n  // TOMO-USDC\n  \"8mBJC9qdPNDyrpAbrdwGbBpEAjPqwtvZQVmbnKFXXY2P\",\n  // LINK-USDC\n  \"Hr8i6MAm4W5Lwb2fB2CD44A2t3Ag3gGc1rmd6amrWsWC\",\n  // ETH-USDC\n  \"AoPebtuJC4f2RweZSxcVCcdeTgaEXY64Uho8b5HdPxAR\",\n  // xCOPE-USDC\n  \"3mYsmBQLB8EZSjRwtWjPbbE8LiM1oCCtNZZKiVBKsePa\",\n  // SOL-USDT\n  \"7XawhbbxtsRcQA8KTkHT9f9nc6d69UwqCDh6U5EEbEmX\",\n  // YFI-USDT\n  \"81PmLJ8j2P8CC5EJAAhWGYA4HgJvoKs4Y94ALZF2uKKG\",\n  // SRM-USDT\n  \"af8HJg2ffWoKJ6vKvkWJUJ9iWbRR83WgXs8HPs26WGr\",\n  // FTT-USDT\n  \"4fgubfZVL6L8tc5x1j65S14P2Tnxr1YayKtKavQV5MBo\",\n  // BTC-USDT\n  \"AMMwkf57c7ZsbbDCXvBit9zFehMr1xRn8ZzaT1iDF18o\",\n  // SUSHI-USDT\n  \"DWvhPYVogsEKEsehHApUtjhP1UFtApkAPFJqFh2HPmWz\",\n  // TOMO-USDT\n  \"GjrXcSvwzGrz1RwKYGVWdbZyXzyotgichSHB95moDmf8\",\n  // LINK-USDT\n  \"E9EvurfzdSQaqCFBUaD4MgV93htuRQ93sghm922Pik88\",\n  // ETH-USDT\n  \"He3iAEV5rYjv6Xf7PxKro19eVrC3QAcdic5CF2D2obPt\",\n  // YFI-SRM\n  \"GDVhJmDTdSExwHeMT5RvUBUNKLwwXNKhH8ndm1tpTv6B\",\n  // FTT-SRM\n  \"21r2zeCacmm5YvbGoPZh9ZoGREuodhcbQHaP5tZmzY14\",\n  // BTC-SRM\n  \"DvxLb4NnQUYq1gErk35HVt9g8kxjNbviJfiZX1wqraMv\",\n  // SUSHI-SRM\n  \"BLVjPTgzyfiKSgDujTNKKNzW2GXx7HhdMxgr2LQ2g83s\",\n  // TOMO-SRM\n  \"DkMAuUCQHC6BNgVnjtM5ZTKm1T8MsriQ6bL3Umi6NBtG\",\n  // LINK-SRM\n  \"796pvggjoDCPUtUSVFSCLqPRyes5YPvRiu4zFWX582wf\",\n  // ETH-SRM\n  \"3XwxHcbyqcd1xkdczaPv3TNCZsevELD4Zux3pu4sF2D8\",\n  // SRM-SOL\n  \"EvWJC2mnmu9C9aQrsJLXw8FhUcwBzFEUQsP1E5Y6a5N7\",\n  // STEP-USDC\n  \"4Sx1NLrQiK4b9FdLKe2DhQ9FHvRzJhzKN3LoD6BrEPnf\",\n  // MEDIA-USDC\n  \"94CQopiGxxUXf2avyMZhAFaBdNatd62ttYGoTVQBRGdi\",\n  // ROPE-USDC\n  \"BuS4ScFcZjEBixF1ceCTiXs4rqt4WDfXLoth7VcM2Eoj\",\n  // MER-USDC\n  \"BkfGDk676QFtTiGxn7TtEpHayJZRr6LgNk9uTV2MH4bR\",\n  // COPE-USDC\n  \"DiWxV1SPXPNJRCt5Ao1mJRAxjw97hJVyj8qGzZwFbAFb\",\n  // ALEPH-USDC\n  \"GDHXjn9wF2zxW35DBkCegWQdoTfFBC9LXt7D5ovJxQ5B\",\n  // TULIP-USDC\n  \"96hPvuJ3SRT82m7BAc7G1AUVPVcoj8DABAa5gT7wjgzX\",\n  // WOO-USDC\n  \"DSkXJYPZqJ3yHQECyVyh3xiE3HBrt7ARmepwNDA9rREn\",\n  // SNY-USDC\n  \"5TgJXpv6H3KJhHCuP7KoDLSCmi8sM8nABizP7CmYAKm1\",\n  // BOP-RAY\n  \"SJmR8rJgzzCi4sPjGnrNsqY4akQb3jn5nsxZBhyEifC\",\n  // SLRS-USDC\n  \"7XXKU8oGDbeGrkPyK5yHKzdsrMJtB7J2TMugjbrXEhB5\",\n  // SAMO-RAY\n  \"EyDgEU9BdG7m6ZK4bYERxbN4NCJ129WzPtv23dBkfsLg\",\n  // renBTC-USDC\n  \"61JtCkTQKSeBU8ztEScByZiBhS6KAHSXfQduVyA4s1h7\",\n  // renDOGE-USDC\n  \"34oD4akb2DeNcCw1smKHPsD3iqQQQWmNy3cY81nz7HP8\",\n  // RAY-USDC\n  \"6UmmUiYoBjSrhakAobJw8BvkmJtDVxaeBtbt7rxWo1mg\",\n  // RAY-SRM\n  \"GaqgfieVmnmY4ZsZHHA6L5RSVzCGL3sKx4UgHBaYNy8m\",\n  // RAY-ETH\n  \"8iQFhWyceGREsWnLM8NkG9GC8DvZunGZyMzuyUScgkMK\",\n  // RAY-SOL\n  \"AVs9TA4nWDzfPJE9gGVNJMVhcQy3V9PGazuz33BfG2RA\",\n  // DXL-USDC\n  \"asdEJnE7osjgnSyQkSZJ3e5YezbmXuDQPiyeyiBxoUm\",\n  // LIKE-USDC\n  \"GmaDNMWsTYWjaXVBjJTHNmCWAKU6cn5hhtWWYEZt4odo\",\n  // mSOL-USDC\n  \"ZfvDXXUhZDzDVsapffUyXHj9ByCoPjP4thL6YXcZ9ix\",\n  // mSOL-SOL\n  \"EGyhb2uLAsRUbRx9dNFBjMVYnFaASWMvD6RE1aEf2LxL\",\n  // MER-PAI\n  \"6GUF8Qb5FWmifzYpRdKomFNbSQAsLShhT45GbTGg34VJ\",\n  // PORT-USDC\n  \"6nJes56KF999Q8VtQTrgWEHJGAfGMuJktGb8x2uWff2u\",\n  // MNGO-USDC\n  \"34tFULRrRwh4bMcBLPtJaNqqe5pVgGZACi5sR8Xz95KC\",\n  // ATLAS-USDC\n  \"2bnZ1edbvK3CK3LTNZ5jH9anvXYCmzPR4W2HQ6Ngsv5K\",\n  // POLIS-USDC\n  \"9xyCzsHi1wUWva7t5Z8eAvZDRmUCVhRrbaFfm3VbU4Mf\",\n  // ATLAS-RAY\n  \"F73euqPynBwrgcZn3fNSEneSnYasDQohPM5aZazW9hp2\",\n  // POLIS-RAY\n  \"5tho4By9RsqTF1rbm9Akiepik3kZBT7ffUzGg8bL1mD\",\n  // ALEPH-RAY\n  \"8Fr3wxZXLtiSozqms5nF4XXGHNSNqcMC6K6MvRqEfk4a\",\n  // TULIP-RAY\n  \"Dm1Q15216uRARmQTbo6VfnyEGVzRvLTm4TfCWWX4MF3F\",\n  // SLRS-RAY\n  \"J3CoGcJqHquUdSgS7qAwdGbp3so4EpLX8eVDdGuauvi\",\n  // MER-RAY\n  \"BKLCqnuk4qc5iHWuJuewMxuvsNZXuTBSUyRT5ftnRb6H\",\n  // MEDIA-RAY\n  \"5ZPBHzMr19iQjBaDgFDYGAx2bxaQ3TzWmSS7zAGrHtQJ\",\n  // SNY-RAY\n  \"Am9FpX73ctZ3HzohcRdyCCv84iT7nugevqLjY5yTSUQP\",\n  // LIKE-RAY\n  \"DGSnfcE1kw4uDC6jgrsZ3s5CMfsWKN7JNjDNasHdvKfq\",\n  // COPE-RAY\n  \"8hvVAhShYLPThcxrxwMNAWmgRCSjtxygj11EGHp2WHz8\",\n  // ETH-SOL\n  \"9Hm8QX7ZhE9uB8L2arChmmagZZBtBmnzBbpfxzkQp85D\",\n  // stSOL-USDC\n  \"6a1CsrpeZubDjEJE9s1CMVheB6HWM5d7m1cj2jkhyXhj\",\n  // GRAPE-USDC\n  \"vVXfY15WdPsCmLvbiP4hWWECPFeAvPTuPNq3Q4BXfhy\",\n  // LARIX-USDC\n  \"A21ui9aYTSs3CbkscaY6irEMQx3Z59dLrRuZQTt2hJwQ\",\n  // RIN-USDC\n  \"7qZJTK5NatxQJRTxZvHi3gRu4cZZsKr8ZPzs7BA5JMTC\",\n  // APEX-USDC\n  \"43UHp4TuwQ7BYsaULN1qfpktmg7GWs9GpR8TDb8ovu9c\",\n  // mSOL-RAY\n  \"6gpZ9JkLoYvpA5cwdyPZFsDw6tkbPyyXM5FqRqHxMCny\",\n  // MNDE-mSOL\n  \"2kPA9XUuHUifcCYTnjSuN7ZrC3ma8EKPrtzUhC86zj3m\",\n  // LARIX-RAY\n  \"EBqQdu9rGe6j3WGJQSyTvDjUMWcRd6uLcxSS4TbFT31t\",\n  // LIQ-USDC\n  \"33dWwj33J3NUzoTmkMAUq1VdXZL89qezxkdaHdN88vK2\",\n  // WAG-USDC\n  \"FEFzBbbEK8yDigqyJPgJKMR5X1xZARC25QTCskvudjuK\",\n  // ETH-mSOL\n  \"Ghj3v2qYbSp6XqmH4NV4KRu4Rrgqoh2Ra7L9jEdsbNzF\",\n  // mSOL-USDT\n  \"BhuMVCzwFVZMSuc1kBbdcAnXwFg9p4HJp7A9ddwYjsaF\",\n  // BTC-mSOL\n  \"ynV2H2b7FcRBho2TvE25Zc4gDeuu2N45rUw9DuJYjJ9\",\n  // SLIM-SOL\n  \"8idN93ZBpdtMp4672aS4GGMDy7LdVWCCXH7FKFdMw9P4\",\n  // AURY-USDC\n  \"Ek8uoHjADzbNk2yr2HysybwFk1h2j9XXDsWAjAJN38n1\",\n  // PRT-SOL\n  \"7rVAbPFzqaBmydukTDFAuBiuyBrTVhpa5LpfDRrjX9mr\",\n  // LIQ-RAY\n  \"HuMDhYhW1BmBjXoJZBdjqaqoD3ehQeCUMbDSiZsaXSDU\",\n  // SYP-SOL\n  \"D95EzH4ZsGLikvYzp7kmz1RM1xNMo1MXXiXaedQesA2m\",\n  // SYP-RAY\n  \"3hhSfFhbk7Kd8XrRYKCcGAyUVYRaW9MLhcqAaU9kx6SA\",\n  // SYP-USDC\n  \"2Tv6eMih3iqxHrLAWn372Nba4A8FT8AxFSbowBmmTuAd\",\n  // FAB-USDC\n  \"7eM9KWYiJmNfDfeztMoEZE1KPyWD54LRxM9GmRY9ske6\",\n  // WOOF-RAY\n  \"3HYhQC6ne6SAPVT5sPTKawRUxv9ZpYyLuk1ifrw8baov\",\n  // WOOF-USDC\n  \"EZRHhpvAP4zEX1wZtTQcf6NP4FLWjs9c6tMRBqfrXgFD\",\n  // SLND-USDC\n  \"GRM4jGMtx64sEocBFz6ZgdogF2fyTWiixht8thZoHjkK\",\n  // FRKT-SOL\n  \"H3dhkXcC5MRN7VRXNbWVSvogH8mUQPzpn8PYQL7HfBVg\",\n  // weWETH-SOL\n  \"4yrHms7ekgTBgJg77zJ33TsWrraqHsCXDtuSZqUsuGHb\",\n  // weWETH-USDC\n  \"EoNrn8iUhwgJySD1pHu8Qxm5gSQqLK3za4m8xzD2RuEb\",\n  // weUNI-USDC\n  \"8J5fa8WBGaDSv8AUpgtqdh9HM5AZuSf2ijvSkKoaCXCi\",\n  // weSUSHI-USDC\n  \"9SWy6nbSVZ44XuixEvHpona663pZPpVgzXQ3N7muG4ou\",\n  // CYS-USDC\n  \"661trVCzDWp114gy4PEK4etbjb3u3RNaP4aENa5uN8Vp\",\n  // SAMO-USDC\n  \"7oYaghDwJ6ZbZwzdzcPqQtW6r4cojSLJDKB6U7tqAK1x\",\n  // ABR-USDC\n  \"GQJjrG6f8HbxkE3ZVSRpzoyWhQ2RiivT68BybVK9DxME\",\n  // IN-USDC\n  \"5DECiJuqwmeCptoBEpyJtXKrVfiUrG9nBbBGkxGkPYyF\",\n  // weDYDX-USDC\n  \"CbGQojcizFEHn3woL7NPu3P9BLL1SWz5a8zkL9gks24q\",\n  // STARS-USDC\n  \"CWQVga1qUbpZXjrWQRj6U6tmL3HhrFiAT11VYnB8d3CF\",\n  // weAXS-USDC\n  \"HopVRTvFvRe1ED3dRCQrt1h5onkMvY3tKUHRVQMc7MMH\",\n  // weSHIB-USDC\n  \"SU7vPveBjEuR5tgQwidRqqTxn1WwraHpydHHBpM2W96\",\n  // SBR-USDC\n  \"5cmAS6Mj4pG2Vp9hhyu3kpK9yvC7P6ejh9HiobpTE6Jc\",\n  // OXS-USDC\n  \"8ekXiGjEjtWzd2us3rAsusKv7kKEhPENV7nvzS7RGRYY\",\n  // CWAR-USDC\n  \"13uCPybNakXHGVd2DDVB7o2uwXuf9GqPFkvJMVgKy6UJ\",\n  // UPS-USDC\n  \"FSSRqrGrDjDXnojhSDrDBknJeQ83pyACemnaMLaZDD1U\",\n  // weSAND-USDC\n  \"3cmPpX8kKzEra2umtLCDxMfjma82ELtAMaSYVmdaNLxi\",\n  // weMANA-USDC\n  \"7Z1c6GHutf3q2MNheyFE8KMNVEALuiPaqoEMyjbCbuku\",\n  // CAVE-USDC\n  \"2PfKnjEfoUoVDbDS1YwvZ8HuPGBCpN831mnTuqTAJZjH\",\n  // GENE-USDC\n  \"Enq8vJucRbkzKA1i1PahJNhMyUTzoVL5Cs8n5rC3NLGn\",\n  // GENE-RAY\n  \"8FrCybrh7UFznP1hVHg8kXZ8bhii37c7BGzmjkdcsGJp\",\n  // APT-USDC\n  \"4crhN3D8R5rnZd66q9b32P7K649e5XdzCfPMPiTzBceH\",\n  // GOFX-USDC\n  \"zoouer92idprkptX76yvhp4stK2keTzJpMNkeLqtxAx\",\n  // SONAR-USDC\n  \"CrWbfKwyAaUfYctXWF9iaDUP4AH5t6k6bbaWnXBL8nHm\",\n  // JSOL-SOL\n  \"D8pasgJWjP9wy39fzeD8BUjQMvYCZxABzPcnuoDSLHBB\",\n  // JSOL-USDC\n  \"7e8GrkwsRm5sS5UaKobLJUNu9esmrzg37dqX6aQyuver\",\n  // SHILL-USDC\n  \"FTyJCLwQ3YvVfanJp8mtC2eqmvZPpzSpmNLqWpaPaXbC\",\n  // DFL-USDC\n  \"8GJdzPuEBPP3BHJpcspBcfpRZV4moZMFwhTAuXebaPL8\",\n  // BOKU-USDC\n  \"FsERtRjCEQNyND3ccnMGrd61ntPmJ3tbZs4vvcCzMr1L\",\n  // MIMO-SOL\n  \"DqYSvijBXydSx9GfvVDjEzUg5StLLrkqZVPzsU2FeVZ2\",\n  // wbWBNB-USDC\n  \"Fb1WR1kYvG1tHu4pwAxXQpdKT8Grh9i7ES9rZusLg7D6\",\n  // wePEOPLE-USDC\n  \"GfvqUB36CPfqZDz5ntQ2YsoKRwg1MCewmurhc7jw3P5s\",\n  // XTAG-USDC\n  \"Hv1BFhyADPjYXTqEeMgwzoybnNwYrHXNv7U2VjcAuEDr\",\n  // KKO-USDC\n  \"FvN7dJz7GX1XB1BTk6jD5rEKRxQc3ZwNkWJKai5sBJWS\",\n  // VI-USDC\n  \"MphbxYtji1FSkm7G2FNGpUUz5AWn7iRPNFAvEqD4mzE\",\n  // SOLC-USDT\n  \"783kPvwHwDXaU32kV8NK5dB4JVeMWQwe8a3WUNZFpupr\",\n  // STR-USDC\n  \"E9Z2JeEKS2WGGyA18mGU33rnQskK9moPhM4tdzrv24fh\",\n  // SPWN-USDC\n  \"Bhw7DbVwWMcTBXoKaWgsCaofL6QqmQQ65FCSGfgCEawm\",\n  // ISOLA-USDT\n  \"69Mo81rUPDgru4UbigPQovx7cYBxpEm44qQok8wcut4M\",\n  // TTT-USDC\n  \"HcqHvH27wk42L1ND5YPhLDJu7oGsU7HGSreMiXdq5LNK\",\n  // RUN-USDC\n  \"zuivKkgkNFFkV9jfNpsU1p5tWNbDWUEx5XX16m4k2Ej\",\n  // CRWNY-USDC\n  \"4ELBQuq3ivhLamfCT36As5sXLkQDWRJw1pJ9JVFLp6gK\",\n  // CRWNY-RAY\n  \"HARRXESCwid3xMi2qThag1PXzmp6rDhAzMR9THhFRQGf\",\n  // BLOCK-USDC\n  \"CfBSfVTcYFJsD8vZ2fTiMGkUYFim2rv8weAoqHxUU2pn\",\n  // REAL-USDC\n  \"A7ZxDrK9LSkVXhfRTu2pRCinwYfdxW2kK6DaJk12jRWw\",\n  // PRISM-USDC\n  \"4ZYiiVakejxGyJ3tuBzYWoHyEV1rk7Hm7viydG6DNaUN\",\n  // MBS-USDC\n  \"6eRECBcCVP82AvAd6Di4rZApa2btLf8RDUqrTigt4hS4\",\n];\n\nexport const TESTNET_OFFICIAL_LIQUIDITY_POOLS = [];\n\nexport const DEVNET_OFFICIAL_LIQUIDITY_POOLS = [];\n"],"mappings":"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KAAM,MACN,KAAM,+CACN,SAAU,EACV,WAAY,CACV,YAAa,eACf,CACF,EACA,KAAM,CACJ,OAAQ,OACR,KAAM,YACN,KAAM,+CACN,SAAU,EACV,WAAY,CACV,YAAa,WACf,CACF,EACA,IAAK,CACH,OAAQ,MACR,KAAM,MACN,KAAM,+CACN,SAAU,EACV,WAAY,CACV,YAAa,QACf,CACF,EACA,MAAO,CACL,OAAQ,QACR,KAAM,QACN,KAAM,+CACN,SAAU,EACV,WAAY,CACV,YAAa,OACf,CACF,EACA,MAAO,CACL,OAAQ,QACR,KAAM,QACN,KAAM,+CACN,SAAU,EACV,WAAY,CACV,YAAa,OACf,CACF,EACA,IAAK,CACH,OAAQ,MACR,KAAM,MACN,KAAM,8CACN,SAAU,EACV,WAAY,CACV,YAAa,OACf,CACF,EACA,KAAM,CACJ,OAAQ,OACR,KAAM,OACN,KAAM,+CACN,SAAU,EACV,WAAY,CACV,YAAa,QACf,CACF,EACA,MAAO,CACL,OAAQ,QACR,KAAM,QACN,KAAM,+CACN,SAAU,EACV,WAAY,CACV,YAAa,SACf,CACF,EACA,IAAK,CACH,OAAQ,MACR,KAAM,MACN,KAAM,+CACN,SAAU,EACV,WAAY,CACV,YAAa,SACf,CACF,EACA,IAAK,CACH,OAAQ,MACR,KAAM,QACN,KAAM,8CACN,SAAU,EACV,WAAY,CACV,YAAa,OACf,CACF,EACA,IAAK,CACH,OAAQ,MACR,KAAM,YACN,KAAM,+CACN,SAAU,EACV,WAAY,CACV,YAAa,WACf,CACF,EACA,KAAM,CACJ,OAAQ,OACR,KAAM,YACN,KAAM,8CACN,SAAU,EACV,WAAY,CACV,YAAa,WACf,CACF,EACA,KAAM,CACJ,OAAQ,OACR,KAAM,OACN,KAAM,+CACN,SAAU,EACV,WAAY,CACV,YAAa,WACf,CACF,EACA,MAAO,CACL,OAAQ,QACR,KAAM,QACN,KAAM,+CACN,SAAU,EACV,WAAY,CACV,YAAa,WACf,CACF,EACA,IAAK,CACH,OAAQ,MACR,KAAM,MACN,KAAM,+CACN,SAAU,EACV,WAAY,CACV,YAAa,WACf,CACF,EACA,KAAM,CACJ,OAAQ,OACR,KAAM,OACN,KAAM,+CACN,SAAU,EACV,WAAY,CACV,YAAa,MACf,CACF,EACA,KAAM,CACJ,OAAQ,OACR,KAAM,OACN,KAAM,+CACN,SAAU,EACV,WAAY,CACV,YAAa,cACf,CACF,EACA,KAAM,CACJ,OAAQ,OACR,KAAM,OACN,KAAM,+CACN,SAAU,EACV,WAAY,CACV,YAAa,cACf,CACF,EACA,KAAM,CACJ,OAAQ,OACR,KAAM,UACN,KAAM,+CACN,SAAU,EACV,WAAY,CACV,YAAa,SACf,CACF,EACA,IAAK,CACH,OAAQ,MACR,KAAM,MACN,KAAM,8CACN,SAAU,EACV,WAAY,CACV,YAAa,KACf,CACF,EACA,KAAM,CACJ,OAAQ,OACR,KAAM,OACN,KAAM,8CACN,SAAU,EACV,WAAY,CACV,YAAa,MACf,CACF,EACA,IAAK,CACH,OAAQ,MACR,KAAM,SACN,KAAM,8CACN,SAAU,EACV,WAAY,CACV,YAAa,QACf,CACF,EACA,IAAK,CACH,OAAQ,MACR,KAAM,UACN,KAAM,+CACN,SAAU,EACV,WAAY,CACV,YAAa,SACf,CACF,EACA,MAAO,CACL,OAAQ,QACR,KAAM,QACN,KAAM,+CACN,SAAU,EACV,WAAY,CACV,YAAa,MACf,CACF,EACA,KAAM,CACJ,OAAQ,OACR,KAAM,OACN,KAAM,+CACN,SAAU,EACV,WAAY,CACV,YAAa,MACf,CACF,EACA,KAAM,CACJ,OAAQ,OACR,KAAM,eACN,KAAM,8CACN,SAAU,EACV,WAAY,CACV,YAAa,cACf,CACF,EACA,MAAO,CACL,OAAQ,QACR,KAAM,gBACN,KAAM,+CACN,SAAU,EACV,WAAY,CACV,YAAa,eACf,CACF,EACA,KAAM,CACJ,OAAQ,OACR,KAAM,aACN,KAAM,+CACN,SAAU,EACV,WAAY,CACV,YAAa,YACf,CACF,EACA,IAAK,CACH,OAAQ,MACR,KAAM,YACN,KAAM,8CACN,SAAU,EACV,WAAY,CACV,YAAa,WACf,CACF,EACA,MAAO,CACL,OAAQ,QACR,KAAM,iBACN,KAAM,8CACN,SAAU,EACV,WAAY,CACV,YAAa,SACf,CACF,EACA,IAAK,CACH,OAAQ,MACR,KAAM,MACN,KAAM,+CACN,SAAU,EACV,WAAY,CACV,YAAa,kBACf,CACF,EACA,KAAM,CACJ,OAAQ,OACR,KAAM,OACN,KAAM,8CACN,SAAU,EACV,WAAY,CACV,YAAa,iBACf,CACF,EACA,IAAK,CACH,OAAQ,MACR,KAAM,cACN,KAAM,+CACN,SAAU,EACV,WAAY,CACV,YAAa,aACf,CACF,EACA,IAAK,CACH,OAAQ,MACR,KAAM,kBACN,KAAM,+CACN,SAAU,EACV,WAAY,CACV,YAAa,iBACf,CACF,EACA,KAAM,CACJ,OAAQ,OACR,KAAM,cACN,KAAM,+CACN,SAAU,EACV,WAAY,CACV,YAAa,aACf,CACF,EACA,OAAQ,CACN,OAAQ,SACR,KAAM,SACN,KAAM,+CACN,SAAU,EACV,WAAY,CACV,YAAa,QACf,CACF,EACA,QAAS,CACP,OAAQ,UACR,KAAM,UACN,KAAM,+CACN,SAAU,EACV,WAAY,CACV,YAAa,SACf,CACF,EACA,KAAM,CACJ,OAAQ,OACR,KAAM,QACN,KAAM,+CACN,SAAU,EACV,WAAY,CACV,YAAa,OACf,CACF,EACA,IAAK,CACH,OAAQ,MACR,KAAM,SACN,KAAM,+CACN,SAAU,EACV,WAAY,CACV,YAAa,QACf,CACF,EACA,KAAM,CACJ,OAAQ,OACR,KAAM,sBACN,KAAM,8CACN,SAAU,EACV,WAAY,CACV,YAAa,MACf,CACF,EACA,IAAK,CACH,OAAQ,MACR,KAAM,aACN,KAAM,+CACN,SAAU,EACV,WAAY,CACV,YAAa,YACf,CACF,EACA,KAAM,CACJ,OAAQ,OACR,KAAM,eACN,KAAM,8CACN,SAAU,EACV,WAAY,CACV,YAAa,cACf,CACF,EACA,KAAM,CACJ,OAAQ,OACR,KAAM,QACN,KAAM,8CACN,SAAU,EACV,WAAY,CACV,YAAa,eACf,CACF,EACA,IAAK,CACH,OAAQ,MACR,KAAM,iBACN,KAAM,+CACN,SAAU,EACV,WAAY,CACV,YAAa,gBACf,CACF,EACA,MAAO,CACL,OAAQ,QACR,KAAM,aACN,KAAM,+CACN,SAAU,EACV,WAAY,CACV,YAAa,YACf,CACF,EACA,MAAO,CACL,OAAQ,QACR,KAAM,iBACN,KAAM,8CACN,SAAU,EACV,WAAY,CACV,YAAa,gBACf,CACF,EACA,MAAO,CACL,OAAQ,QACR,KAAM,iBACN,KAAM,+CACN,SAAU,EACV,WAAY,CACV,YAAa,SACf,CACF,EACA,KAAM,CACJ,OAAQ,OACR,KAAM,WACN,KAAM,+CACN,SAAU,EACV,WAAY,CACV,YAAa,UACf,CACF,EACA,IAAK,CACH,OAAQ,MACR,KAAM,YACN,KAAM,+CACN,SAAU,EACV,WAAY,CACV,YAAa,WACf,CACF,EACA,OAAQ,CACN,OAAQ,SACR,KAAM,SACN,KAAM,+CACN,SAAU,EACV,WAAY,CACV,YAAa,QACf,CACF,EACA,MAAO,CACL,OAAQ,QACR,KAAM,kBACN,KAAM,+CACN,SAAU,EACV,WAAY,CACV,YAAa,iBACf,CACF,EACA,MAAO,CACL,OAAQ,QACR,KAAM,QACN,KAAM,8CACN,SAAU,EACV,WAAY,CACV,YAAa,OACf,CACF,EACA,IAAK,CACH,OAAQ,MACR,KAAM,SACN,KAAM,+CACN,SAAU,EACV,WAAY,CACV,YAAa,QACf,CACF,EACA,KAAM,CACJ,OAAQ,OACR,KAAM,iBACN,KAAM,+CACN,SAAU,EACV,WAAY,CACV,YAAa,gBACf,CACF,EACA,KAAM,CACJ,OAAQ,OACR,KAAM,WACN,KAAM,8CACN,SAAU,EACV,WAAY,CACV,YAAa,UACf,CACF,EACA,IAAK,CACH,OAAQ,MACR,KAAM,eACN,KAAM,+CACN,SAAU,EACV,WAAY,CACV,YAAa,cACf,CACF,EACA,IAAK,CACH,OAAQ,MACR,KAAM,iBACN,KAAM,+CACN,SAAU,EACV,WAAY,CACV,YAAa,gBACf,CACF,EACA,KAAM,CACJ,OAAQ,OACR,KAAM,OACN,KAAM,+CACN,SAAU,EACV,WAAY,CAAC,CACf,EACA,KAAM,CACJ,OAAQ,OACR,KAAM,WACN,KAAM,8CACN,SAAU,EACV,WAAY,CACV,YAAa,UACf,CACF,EACA,IAAK,CACH,OAAQ,MACR,KAAM,kBACN,KA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","names":[]}
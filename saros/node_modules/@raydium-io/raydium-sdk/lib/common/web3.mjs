var k=Object.defineProperty,B=Object.defineProperties;var K=Object.getOwnPropertyDescriptors;var w=Object.getOwnPropertySymbols;var W=Object.prototype.hasOwnProperty,j=Object.prototype.propertyIsEnumerable;var O=(n,r,t)=>r in n?k(n,r,{enumerable:!0,configurable:!0,writable:!0,value:t}):n[r]=t,p=(n,r)=>{for(var t in r||(r={}))W.call(r,t)&&O(n,t,r[t]);if(w)for(var t of w(r))j.call(r,t)&&O(n,t,r[t]);return n},b=(n,r)=>B(n,K(r));import{PACKET_DATA_SIZE as $,PublicKey as G,Transaction as T}from"@solana/web3.js";function d(n,r=1,t=[]){let e=[...n];if(r<=0)return t;for(;e.length;)t.push(e.splice(0,r));return t}import{PublicKey as z}from"@solana/web3.js";var y="1.1.0-beta.5";import"@colors/colors";var U=!1,S=!1,R={debug:1,default:2,info:2,warning:3,error:4,off:5},P={},I;function J(){try{let n=[];if(["NFD","NFC","NFKD","NFKC"].forEach(r=>{try{if("test".normalize(r)!=="test")throw new Error("bad normalize")}catch{n.push(r)}}),n.length)throw new Error("missing "+n.join(", "));if(String.fromCharCode(233).normalize("NFD")!==String.fromCharCode(101,769))throw new Error("broken implementation")}catch(n){if(n instanceof Error)return n.message}return""}var _=J(),F=(s=>(s.DEBUG="DEBUG",s.INFO="INFO",s.WARNING="WARNING",s.ERROR="ERROR",s.OFF="OFF",s))(F||{}),x=(l=>(l.UNKNOWN_ERROR="UNKNOWN_ERROR",l.NOT_IMPLEMENTED="NOT_IMPLEMENTED",l.UNSUPPORTED_OPERATION="UNSUPPORTED_OPERATION",l.NETWORK_ERROR="NETWORK_ERROR",l.RPC_ERROR="RPC_ERROR",l.TIMEOUT="TIMEOUT",l.BUFFER_OVERRUN="BUFFER_OVERRUN",l.NUMERIC_FAULT="NUMERIC_FAULT",l.MISSING_NEW="MISSING_NEW",l.INVALID_ARGUMENT="INVALID_ARGUMENT",l.MISSING_ARGUMENT="MISSING_ARGUMENT",l.UNEXPECTED_ARGUMENT="UNEXPECTED_ARGUMENT",l.INSUFFICIENT_FUNDS="INSUFFICIENT_FUNDS",l))(x||{}),M="0123456789abcdef";function C(n,r=!1){let t=n;try{if(n instanceof Uint8Array){let e="";for(let o=0;o<n.length;o++)e+=M[n[o]>>4],e+=M[n[o]&15];t=`Uint8Array(0x${e})`}else if(n instanceof z)t=`PublicKey(${n.toBase58()})`;else if(n instanceof Object&&!r){let e={};Object.entries(n).forEach(([o,s])=>{e[o]=C(s,!0)}),t=JSON.stringify(e)}else r||(t=JSON.stringify(n))}catch{t=JSON.stringify(n.toString())}return t}var i=class{constructor(r){this.version=y;this.moduleName=r}_log(r,t){let e=r.toLowerCase();R[e]==null&&this.throwArgumentError("invalid log level name","logLevel",r),!((P[this.moduleName]||R.default)>R[e])&&console.log(...t)}debug(...r){this._log(i.levels.DEBUG,["[DEBUG]".blue,...r])}info(...r){this._log(i.levels.INFO,["[INFO]".green,...r])}warn(...r){this._log(i.levels.WARNING,["[WARN]".yellow,...r])}makeError(r,t,e){if(S)return this.makeError("censored error",t,{});t||(t=i.errors.UNKNOWN_ERROR),e||(e={});let o=[];Object.entries(e).forEach(([c,a])=>{o.push(`${c}=${C(a)})`)}),o.push(`code=${t}`),o.push(`module=${this.moduleName}`),o.push(`version=${this.version}`);let s=r;o.length&&(r+=" ("+o.join(", ")+")");let u=new Error(r);return u.reason=s,u.code=t,Object.entries(e).forEach(([c,a])=>{u[c]=a}),u}throwError(r,t,e){throw this.makeError(r,t,e)}throwArgumentError(r,t,e){return this.throwError(r,i.errors.INVALID_ARGUMENT,{argument:t,value:e})}assert(r,t,e,o){r||this.throwError(t,e,o)}assertArgument(r,t,e,o){r||this.throwArgumentError(t,e,o)}checkNormalize(r){r==null&&(r="platform missing String.prototype.normalize"),_&&this.throwError("platform missing String.prototype.normalize",i.errors.UNSUPPORTED_OPERATION,{operation:"String.prototype.normalize",form:_})}checkSafeUint53(r,t){typeof r=="number"&&(t==null&&(t="value not safe"),(r<0||r>=9007199254740991)&&this.throwError(t,i.errors.NUMERIC_FAULT,{operation:"checkSafeInteger",fault:"out-of-safe-range",value:r}),r%1&&this.throwError(t,i.errors.NUMERIC_FAULT,{operation:"checkSafeInteger",fault:"non-integer",value:r}))}checkArgumentCount(r,t,e){e?e=": "+e:e="",r<t&&this.throwError("missing argument"+e,i.errors.MISSING_ARGUMENT,{count:r,expectedCount:t}),r>t&&this.throwError("too many arguments"+e,i.errors.UNEXPECTED_ARGUMENT,{count:r,expectedCount:t})}checkNew(r,t){(r===Object||r==null)&&this.throwError("missing new",i.errors.MISSING_NEW,{name:t.name})}checkAbstract(r,t){r===t?this.throwError("cannot instantiate abstract class "+JSON.stringify(t.name)+" directly; use a sub-class",i.errors.UNSUPPORTED_OPERATION,{name:r.name,operation:"new"}):(r===Object||r==null)&&this.throwError("missing new",i.errors.MISSING_NEW,{name:t.name})}static globalLogger(){return I||(I=new i(y)),I}static setCensorship(r,t){if(!r&&t&&this.globalLogger().throwError("cannot permanently disable censorship",i.errors.UNSUPPORTED_OPERATION,{operation:"setCensorship"}),U){if(!r)return;this.globalLogger().throwError("error censorship permanent",i.errors.UNSUPPORTED_OPERATION,{operation:"setCensorship"})}S=!!r,U=!!t}static setLogLevel(r,t){let e=R[t.toLowerCase()];if(e==null){i.globalLogger().warn("invalid log level - "+t);return}P[r]=e}static from(r){return new i(r)}},m=i;m.errors=x,m.levels=F;var f=m.from("common/web3");async function V(n,r,t){let{batchRequest:e,commitment:o}=p({batchRequest:!1},t),s=d(r,100),u=new Array(s.length).fill([]);if(e){let c=s.map(g=>{let E=n._buildArgs([g.map(h=>h.toBase58())],o,"base64");return{methodName:"getMultipleAccounts",args:E}});u=(await n._rpcBatchRequest(c)).map(g=>g.error?f.throwError("failed to get info for multiple accounts",m.errors.RPC_ERROR,{message:g.error.message}):g.result.value.map(E=>{if(E){let{data:h,executable:D,lamports:l,owner:v,rentEpoch:L}=E;return h.length!==2&&h[1]!=="base64"?f.throwError("info must be base64 encoded",m.errors.RPC_ERROR):{data:Buffer.from(h[0],"base64"),executable:D,lamports:l,owner:new G(v),rentEpoch:L}}else return null}))}else try{u=await Promise.all(s.map(c=>n.getMultipleAccountsInfo(c,o)))}catch(c){if(c instanceof Error)return f.throwError("failed to get info for multiple accounts",m.errors.RPC_ERROR,{message:c.message})}return u.flat()}async function fr(n,r,t){let e=await V(n,r.map(o=>o.pubkey),t);return r.map((o,s)=>b(p({},o),{accountInfo:e[s]}))}function q(n,r){if(n.length<1)return f.throwArgumentError("no instructions provided","instructions",n);if(r.length<1)return f.throwArgumentError("no signers provided","signers",r);let t=new T({recentBlockhash:"11111111111111111111111111111111",feePayer:r[0]});t.add(...n);let e=t.compileMessage().serialize();return r.length+r.length*64+e.length}async function mr(n,r,t){let e=new G("RaydiumSimuLateTransaction11111111111111111"),o=[],s=new T({feePayer:e});for(let a of r)q([...s.instructions,a],[e])>$&&(o.push(s),s=new T({feePayer:e})),s.add(a);s.instructions.length>0&&o.push(s);let u=[];try{u=await Promise.all(o.map(a=>n.simulateTransaction(a)))}catch(a){if(a instanceof Error)return f.throwError("failed to simulate for instructions",m.errors.RPC_ERROR,{message:a.message})}let c=[];for(let a of u){let{value:g}=a;if(f.debug("simulate result:",a),g.logs){let E=g.logs.filter(h=>h&&h.includes(t));f.debug("filteredLog:",c),f.assertArgument(E.length!==0,"simulate log not match keyword","keyword",t),c.push(...E)}}return c}function gr(n,r){let t=n.match(/{["\w:,]+}/g);return!t||t.length!==1?f.throwArgumentError("simulate log fail to match json","keyword",r):t[0]}function hr(n,r){let e=new RegExp(`"${r}":(\\d+)`,"g").exec(n);return!e||e.length!==2?f.throwArgumentError("simulate log fail to match key","key",r):e[1]}export{q as forecastTransactionSize,V as getMultipleAccountsInfo,fr as getMultipleAccountsInfoWithCustomFlags,gr as parseSimulateLogToJson,hr as parseSimulateValue,mr as simulateMultipleInstruction};
//# sourceMappingURL=web3.mjs.map
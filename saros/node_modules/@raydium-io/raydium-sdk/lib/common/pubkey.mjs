import{PublicKey as N,SystemProgram as w}from"@solana/web3.js";import{PublicKey as T}from"@solana/web3.js";var h="1.1.0-beta.5";import"@colors/colors";var y=!1,O=!1,E={debug:1,default:2,info:2,warning:3,error:4,off:5},A={},g;function _(){try{let n=[];if(["NFD","NFC","NFKD","NFKC"].forEach(r=>{try{if("test".normalize(r)!=="test")throw new Error("bad normalize")}catch{n.push(r)}}),n.length)throw new Error("missing "+n.join(", "));if(String.fromCharCode(233).normalize("NFD")!==String.fromCharCode(101,769))throw new Error("broken implementation")}catch(n){if(n instanceof Error)return n.message}return""}var I=_(),b=(a=>(a.DEBUG="DEBUG",a.INFO="INFO",a.WARNING="WARNING",a.ERROR="ERROR",a.OFF="OFF",a))(b||{}),S=(s=>(s.UNKNOWN_ERROR="UNKNOWN_ERROR",s.NOT_IMPLEMENTED="NOT_IMPLEMENTED",s.UNSUPPORTED_OPERATION="UNSUPPORTED_OPERATION",s.NETWORK_ERROR="NETWORK_ERROR",s.RPC_ERROR="RPC_ERROR",s.TIMEOUT="TIMEOUT",s.BUFFER_OVERRUN="BUFFER_OVERRUN",s.NUMERIC_FAULT="NUMERIC_FAULT",s.MISSING_NEW="MISSING_NEW",s.INVALID_ARGUMENT="INVALID_ARGUMENT",s.MISSING_ARGUMENT="MISSING_ARGUMENT",s.UNEXPECTED_ARGUMENT="UNEXPECTED_ARGUMENT",s.INSUFFICIENT_FUNDS="INSUFFICIENT_FUNDS",s))(S||{}),U="0123456789abcdef";function p(n,r=!1){let t=n;try{if(n instanceof Uint8Array){let e="";for(let i=0;i<n.length;i++)e+=U[n[i]>>4],e+=U[n[i]&15];t=`Uint8Array(0x${e})`}else if(n instanceof T)t=`PublicKey(${n.toBase58()})`;else if(n instanceof Object&&!r){let e={};Object.entries(n).forEach(([i,a])=>{e[i]=p(a,!0)}),t=JSON.stringify(e)}else r||(t=JSON.stringify(n))}catch{t=JSON.stringify(n.toString())}return t}var o=class{constructor(r){this.version=h;this.moduleName=r}_log(r,t){let e=r.toLowerCase();E[e]==null&&this.throwArgumentError("invalid log level name","logLevel",r),!((A[this.moduleName]||E.default)>E[e])&&console.log(...t)}debug(...r){this._log(o.levels.DEBUG,["[DEBUG]".blue,...r])}info(...r){this._log(o.levels.INFO,["[INFO]".green,...r])}warn(...r){this._log(o.levels.WARNING,["[WARN]".yellow,...r])}makeError(r,t,e){if(O)return this.makeError("censored error",t,{});t||(t=o.errors.UNKNOWN_ERROR),e||(e={});let i=[];Object.entries(e).forEach(([c,R])=>{i.push(`${c}=${p(R)})`)}),i.push(`code=${t}`),i.push(`module=${this.moduleName}`),i.push(`version=${this.version}`);let a=r;i.length&&(r+=" ("+i.join(", ")+")");let f=new Error(r);return f.reason=a,f.code=t,Object.entries(e).forEach(([c,R])=>{f[c]=R}),f}throwError(r,t,e){throw this.makeError(r,t,e)}throwArgumentError(r,t,e){return this.throwError(r,o.errors.INVALID_ARGUMENT,{argument:t,value:e})}assert(r,t,e,i){r||this.throwError(t,e,i)}assertArgument(r,t,e,i){r||this.throwArgumentError(t,e,i)}checkNormalize(r){r==null&&(r="platform missing String.prototype.normalize"),I&&this.throwError("platform missing String.prototype.normalize",o.errors.UNSUPPORTED_OPERATION,{operation:"String.prototype.normalize",form:I})}checkSafeUint53(r,t){typeof r=="number"&&(t==null&&(t="value not safe"),(r<0||r>=9007199254740991)&&this.throwError(t,o.errors.NUMERIC_FAULT,{operation:"checkSafeInteger",fault:"out-of-safe-range",value:r}),r%1&&this.throwError(t,o.errors.NUMERIC_FAULT,{operation:"checkSafeInteger",fault:"non-integer",value:r}))}checkArgumentCount(r,t,e){e?e=": "+e:e="",r<t&&this.throwError("missing argument"+e,o.errors.MISSING_ARGUMENT,{count:r,expectedCount:t}),r>t&&this.throwError("too many arguments"+e,o.errors.UNEXPECTED_ARGUMENT,{count:r,expectedCount:t})}checkNew(r,t){(r===Object||r==null)&&this.throwError("missing new",o.errors.MISSING_NEW,{name:t.name})}checkAbstract(r,t){r===t?this.throwError("cannot instantiate abstract class "+JSON.stringify(t.name)+" directly; use a sub-class",o.errors.UNSUPPORTED_OPERATION,{name:r.name,operation:"new"}):(r===Object||r==null)&&this.throwError("missing new",o.errors.MISSING_NEW,{name:t.name})}static globalLogger(){return g||(g=new o(h)),g}static setCensorship(r,t){if(!r&&t&&this.globalLogger().throwError("cannot permanently disable censorship",o.errors.UNSUPPORTED_OPERATION,{operation:"setCensorship"}),y){if(!r)return;this.globalLogger().throwError("error censorship permanent",o.errors.UNSUPPORTED_OPERATION,{operation:"setCensorship"})}O=!!r,y=!!t}static setLogLevel(r,t){let e=E[t.toLowerCase()];if(e==null){o.globalLogger().warn("invalid log level - "+t);return}A[r]=e}static from(r){return new o(r)}},l=o;l.errors=S,l.levels=b;import{ASSOCIATED_TOKEN_PROGRAM_ID as V,TOKEN_PROGRAM_ID as $}from"@solana/spl-token";import{SYSVAR_CLOCK_PUBKEY as X,SYSVAR_RENT_PUBKEY as Y}from"@solana/web3.js";var P=l.from("common/pubkey"),x=w.programId,k=new N("Memo1UhkJRfHyvLMcVucJwxXeuD728EqVDDwQDxFMNo");function L(n){if(n instanceof N)return n;if(typeof n=="string")try{return new N(n)}catch{return P.throwArgumentError("invalid public key","publicKey",n)}return P.throwArgumentError("invalid public key","publicKey",n)}async function W(n,r){let[t,e]=await N.findProgramAddress(n,r);return{publicKey:t,nonce:e}}function C(n,r){return{pubkey:n,isWritable:!0,isSigner:r}}function B(n,r){return{pubkey:n,isWritable:!1,isSigner:r}}export{V as ASSOCIATED_TOKEN_PROGRAM_ID,C as AccountMeta,B as AccountMetaReadonly,k as MEMO_PROGRAM_ID,x as SYSTEM_PROGRAM_ID,X as SYSVAR_CLOCK_PUBKEY,Y as SYSVAR_RENT_PUBKEY,$ as TOKEN_PROGRAM_ID,W as findProgramAddress,L as validateAndParsePublicKey};
//# sourceMappingURL=pubkey.mjs.map
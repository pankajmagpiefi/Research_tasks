{"version":3,"sources":["../../src/common/logger.ts","../../src/version.ts"],"sourcesContent":["import { PublicKey } from \"@solana/web3.js\";\n\nimport { version } from \"../version\";\n\n// https://github.com/DABH/colors.js\nimport \"@colors/colors\";\n\nlet _permanentCensorErrors = false;\nlet _censorErrors = false;\n\nconst LogLevels: { [name: string]: number } = { debug: 1, default: 2, info: 2, warning: 3, error: 4, off: 5 };\nconst _moduleLogLevel: { [name: string]: number } = {};\n\nlet _globalLogger: Logger;\n\nfunction _checkNormalize(): string {\n  try {\n    const missing: Array<string> = [];\n\n    // Make sure all forms of normalization are supported\n    [\"NFD\", \"NFC\", \"NFKD\", \"NFKC\"].forEach((form) => {\n      try {\n        if (\"test\".normalize(form) !== \"test\") {\n          throw new Error(\"bad normalize\");\n        }\n      } catch (error) {\n        missing.push(form);\n      }\n    });\n\n    if (missing.length) {\n      throw new Error(\"missing \" + missing.join(\", \"));\n    }\n\n    if (String.fromCharCode(0xe9).normalize(\"NFD\") !== String.fromCharCode(0x65, 0x0301)) {\n      throw new Error(\"broken implementation\");\n    }\n  } catch (error) {\n    if (error instanceof Error) {\n      return error.message;\n    }\n  }\n\n  return \"\";\n}\n\nconst _normalizeError = _checkNormalize();\n\nexport enum LogLevel {\n  DEBUG = \"DEBUG\",\n  INFO = \"INFO\",\n  WARNING = \"WARNING\",\n  ERROR = \"ERROR\",\n  OFF = \"OFF\",\n}\n\nexport enum ErrorCode {\n  ///////////////////\n  // Generic Errors\n\n  // Unknown Error\n  UNKNOWN_ERROR = \"UNKNOWN_ERROR\",\n\n  // Not Implemented\n  NOT_IMPLEMENTED = \"NOT_IMPLEMENTED\",\n\n  // Unsupported Operation\n  //   - operation\n  UNSUPPORTED_OPERATION = \"UNSUPPORTED_OPERATION\",\n\n  // Network Error (i.e. Ethereum Network, such as an invalid chain ID)\n  //   - event (\"noNetwork\" is not re-thrown in provider.ready; otherwise thrown)\n  NETWORK_ERROR = \"NETWORK_ERROR\",\n\n  // Some sort of bad response from the server\n  RPC_ERROR = \"RPC_ERROR\",\n\n  // Timeout\n  TIMEOUT = \"TIMEOUT\",\n\n  ///////////////////\n  // Operational  Errors\n\n  // Buffer Overrun\n  BUFFER_OVERRUN = \"BUFFER_OVERRUN\",\n\n  // Numeric Fault\n  //   - operation: the operation being executed\n  //   - fault: the reason this faulted\n  NUMERIC_FAULT = \"NUMERIC_FAULT\",\n\n  ///////////////////\n  // Argument Errors\n\n  // Missing new operator to an object\n  //  - name: The name of the class\n  MISSING_NEW = \"MISSING_NEW\",\n\n  // Invalid argument (e.g. value is incompatible with type) to a function:\n  //   - argument: The argument name that was invalid\n  //   - value: The value of the argument\n  INVALID_ARGUMENT = \"INVALID_ARGUMENT\",\n\n  // Missing argument to a function:\n  //   - count: The number of arguments received\n  //   - expectedCount: The number of arguments expected\n  MISSING_ARGUMENT = \"MISSING_ARGUMENT\",\n\n  // Too many arguments\n  //   - count: The number of arguments received\n  //   - expectedCount: The number of arguments expected\n  UNEXPECTED_ARGUMENT = \"UNEXPECTED_ARGUMENT\",\n\n  ///////////////////\n  // Blockchain Errors\n\n  // Insufficien funds (< value + gasLimit * gasPrice)\n  //   - transaction: the transaction attempted\n  INSUFFICIENT_FUNDS = \"INSUFFICIENT_FUNDS\",\n}\n\nconst HEX = \"0123456789abcdef\";\n\nfunction perfectDisplay(value: any, deeping = false) {\n  let _value = value;\n\n  try {\n    if (value instanceof Uint8Array) {\n      let hex = \"\";\n      for (let i = 0; i < value.length; i++) {\n        hex += HEX[value[i] >> 4];\n        hex += HEX[value[i] & 0x0f];\n      }\n      _value = `Uint8Array(0x${hex})`;\n    } else if (value instanceof PublicKey) {\n      _value = `PublicKey(${value.toBase58()})`;\n    } else if (value instanceof Object && !deeping) {\n      const obj = {};\n      Object.entries(value).forEach(([k, v]) => {\n        obj[k] = perfectDisplay(v, true);\n      });\n      _value = JSON.stringify(obj);\n    } else if (!deeping) {\n      _value = JSON.stringify(value);\n    }\n  } catch (error) {\n    _value = JSON.stringify(value.toString());\n  }\n\n  return _value;\n}\n\nexport class Logger {\n  readonly version: string = version;\n  readonly moduleName: string;\n\n  static errors = ErrorCode;\n\n  static levels = LogLevel;\n\n  constructor(moduleName: string) {\n    this.moduleName = moduleName;\n  }\n\n  _log(logLevel: LogLevel, args: Array<any>): void {\n    const level = logLevel.toLowerCase();\n    if (LogLevels[level] == null) {\n      this.throwArgumentError(\"invalid log level name\", \"logLevel\", logLevel);\n    }\n    const _logLevel = _moduleLogLevel[this.moduleName] || LogLevels[\"default\"];\n    if (_logLevel > LogLevels[level]) {\n      return;\n    }\n    console.log(...args);\n  }\n\n  debug(...args: Array<any>): void {\n    this._log(Logger.levels.DEBUG, [\"[DEBUG]\".blue, ...args]);\n  }\n\n  info(...args: Array<any>): void {\n    this._log(Logger.levels.INFO, [\"[INFO]\".green, ...args]);\n  }\n\n  warn(...args: Array<any>): void {\n    this._log(Logger.levels.WARNING, [\"[WARN]\".yellow, ...args]);\n  }\n\n  makeError(message: string, code?: ErrorCode, params?: any): Error {\n    // Errors are being censored\n    if (_censorErrors) {\n      return this.makeError(\"censored error\", code, {});\n    }\n\n    if (!code) {\n      code = Logger.errors.UNKNOWN_ERROR;\n    }\n    if (!params) {\n      params = {};\n    }\n\n    const messageDetails: Array<string> = [];\n    Object.entries(params).forEach(([key, value]) => {\n      messageDetails.push(`${key}=${perfectDisplay(value)})`);\n    });\n    messageDetails.push(`code=${code}`);\n    messageDetails.push(`module=${this.moduleName}`);\n    messageDetails.push(`version=${this.version}`);\n\n    const reason = message;\n    if (messageDetails.length) {\n      message += \" (\" + messageDetails.join(\", \") + \")\";\n    }\n\n    // @TODO: Any??\n    const error: any = new Error(message);\n    error.reason = reason;\n    error.code = code;\n\n    Object.entries(params).forEach(([key, value]) => {\n      error[key] = value;\n    });\n\n    return error;\n  }\n\n  throwError(message: string, code?: ErrorCode, params?: any): never {\n    throw this.makeError(message, code, params);\n  }\n\n  throwArgumentError(message: string, name: string, value: any): never {\n    return this.throwError(message, Logger.errors.INVALID_ARGUMENT, {\n      argument: name,\n      value,\n    });\n  }\n\n  assert(condition: any, message: string, code?: ErrorCode, params?: any): void {\n    if (condition) {\n      return;\n    }\n    this.throwError(message, code, params);\n  }\n\n  assertArgument(condition: any, message: string, name: string, value: any): void {\n    if (condition) {\n      return;\n    }\n    this.throwArgumentError(message, name, value);\n  }\n\n  checkNormalize(message?: string): void {\n    if (message == null) {\n      message = \"platform missing String.prototype.normalize\";\n    }\n    if (_normalizeError) {\n      this.throwError(\"platform missing String.prototype.normalize\", Logger.errors.UNSUPPORTED_OPERATION, {\n        operation: \"String.prototype.normalize\",\n        form: _normalizeError,\n      });\n    }\n  }\n\n  checkSafeUint53(value: number, message?: string): void {\n    if (typeof value !== \"number\") {\n      return;\n    }\n\n    if (message == null) {\n      message = \"value not safe\";\n    }\n\n    if (value < 0 || value >= 0x1fffffffffffff) {\n      this.throwError(message, Logger.errors.NUMERIC_FAULT, {\n        operation: \"checkSafeInteger\",\n        fault: \"out-of-safe-range\",\n        value,\n      });\n    }\n\n    if (value % 1) {\n      this.throwError(message, Logger.errors.NUMERIC_FAULT, {\n        operation: \"checkSafeInteger\",\n        fault: \"non-integer\",\n        value,\n      });\n    }\n  }\n\n  checkArgumentCount(count: number, expectedCount: number, message?: string): void {\n    if (message) {\n      message = \": \" + message;\n    } else {\n      message = \"\";\n    }\n\n    if (count < expectedCount) {\n      this.throwError(\"missing argument\" + message, Logger.errors.MISSING_ARGUMENT, {\n        count,\n        expectedCount,\n      });\n    }\n\n    if (count > expectedCount) {\n      this.throwError(\"too many arguments\" + message, Logger.errors.UNEXPECTED_ARGUMENT, {\n        count,\n        expectedCount,\n      });\n    }\n  }\n\n  checkNew(target: any, kind: any): void {\n    if (target === Object || target == null) {\n      this.throwError(\"missing new\", Logger.errors.MISSING_NEW, { name: kind.name });\n    }\n  }\n\n  checkAbstract(target: any, kind: any): void {\n    if (target === kind) {\n      this.throwError(\n        \"cannot instantiate abstract class \" + JSON.stringify(kind.name) + \" directly; use a sub-class\",\n        Logger.errors.UNSUPPORTED_OPERATION,\n        { name: target.name, operation: \"new\" },\n      );\n    } else if (target === Object || target == null) {\n      this.throwError(\"missing new\", Logger.errors.MISSING_NEW, { name: kind.name });\n    }\n  }\n\n  static globalLogger(): Logger {\n    if (!_globalLogger) {\n      _globalLogger = new Logger(version);\n    }\n    return _globalLogger;\n  }\n\n  static setCensorship(censorship: boolean, permanent?: boolean): void {\n    if (!censorship && permanent) {\n      this.globalLogger().throwError(\"cannot permanently disable censorship\", Logger.errors.UNSUPPORTED_OPERATION, {\n        operation: \"setCensorship\",\n      });\n    }\n\n    if (_permanentCensorErrors) {\n      if (!censorship) {\n        return;\n      }\n      this.globalLogger().throwError(\"error censorship permanent\", Logger.errors.UNSUPPORTED_OPERATION, {\n        operation: \"setCensorship\",\n      });\n    }\n\n    _censorErrors = !!censorship;\n    _permanentCensorErrors = !!permanent;\n  }\n\n  static setLogLevel(moduleName: string, logLevel: \"DEBUG\" | \"INFO\" | \"WARNING\" | \"ERROR\" | \"OFF\"): void {\n    const level = LogLevels[logLevel.toLowerCase()];\n    if (level == null) {\n      Logger.globalLogger().warn(\"invalid log level - \" + logLevel);\n      return;\n    }\n    _moduleLogLevel[moduleName] = level;\n  }\n\n  static from(version: string): Logger {\n    return new Logger(version);\n  }\n}\n","export const version = \"1.1.0-beta.5\";\n"],"mappings":"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","names":[]}
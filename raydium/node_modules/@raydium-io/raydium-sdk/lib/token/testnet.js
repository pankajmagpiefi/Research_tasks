var S=Object.defineProperty;var p=Object.getOwnPropertyDescriptor;var r=Object.getOwnPropertyNames,i=Object.getOwnPropertySymbols;var T=Object.prototype.hasOwnProperty,L=Object.prototype.propertyIsEnumerable;var l=(e,o,n)=>o in e?S(e,o,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[o]=n,a=(e,o)=>{for(var n in o||(o={}))T.call(o,n)&&l(e,n,o[n]);if(i)for(var n of i(o))L.call(o,n)&&l(e,n,o[n]);return e};var O=(e,o)=>{for(var n in o)S(e,n,{get:o[n],enumerable:!0})},c=(e,o,n,s)=>{if(o&&typeof o=="object"||typeof o=="function")for(let t of r(o))!T.call(e,t)&&t!==n&&S(e,t,{get:()=>o[t],enumerable:!(s=p(o,t))||s.enumerable});return e};var k=e=>c(S({},"__esModule",{value:!0}),e);var y={};O(y,{TESTNET_LP_TOKENS:()=>d,TESTNET_SPL_TOKENS:()=>b});module.exports=k(y);var m={symbol:"WSOL",name:"Wrapped SOL",mint:"So11111111111111111111111111111111111111112",decimals:9,extensions:{coingeckoId:"solana"}};var b={*[Symbol.iterator](){yield*Object.values(this)},WSOL:a({},m)},d={*[Symbol.iterator](){yield*Object.values(this)}};0&&(module.exports={TESTNET_LP_TOKENS,TESTNET_SPL_TOKENS});
//# sourceMappingURL=testnet.js.map
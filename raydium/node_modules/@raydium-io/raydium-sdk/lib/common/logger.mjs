import{PublicKey as w}from"@solana/web3.js";var R="1.1.0-beta.5";import"@colors/colors";var g=!1,m=!1,l={debug:1,default:2,info:2,warning:3,error:4,off:5},O={},c;function b(){try{let o=[];if(["NFD","NFC","NFKD","NFKC"].forEach(r=>{try{if("test".normalize(r)!=="test")throw new Error("bad normalize")}catch{o.push(r)}}),o.length)throw new Error("missing "+o.join(", "));if(String.fromCharCode(233).normalize("NFD")!==String.fromCharCode(101,769))throw new Error("broken implementation")}catch(o){if(o instanceof Error)return o.message}return""}var U=b(),u=(a=>(a.DEBUG="DEBUG",a.INFO="INFO",a.WARNING="WARNING",a.ERROR="ERROR",a.OFF="OFF",a))(u||{}),y=(s=>(s.UNKNOWN_ERROR="UNKNOWN_ERROR",s.NOT_IMPLEMENTED="NOT_IMPLEMENTED",s.UNSUPPORTED_OPERATION="UNSUPPORTED_OPERATION",s.NETWORK_ERROR="NETWORK_ERROR",s.RPC_ERROR="RPC_ERROR",s.TIMEOUT="TIMEOUT",s.BUFFER_OVERRUN="BUFFER_OVERRUN",s.NUMERIC_FAULT="NUMERIC_FAULT",s.MISSING_NEW="MISSING_NEW",s.INVALID_ARGUMENT="INVALID_ARGUMENT",s.MISSING_ARGUMENT="MISSING_ARGUMENT",s.UNEXPECTED_ARGUMENT="UNEXPECTED_ARGUMENT",s.INSUFFICIENT_FUNDS="INSUFFICIENT_FUNDS",s))(y||{}),I="0123456789abcdef";function A(o,r=!1){let t=o;try{if(o instanceof Uint8Array){let n="";for(let i=0;i<o.length;i++)n+=I[o[i]>>4],n+=I[o[i]&15];t=`Uint8Array(0x${n})`}else if(o instanceof w)t=`PublicKey(${o.toBase58()})`;else if(o instanceof Object&&!r){let n={};Object.entries(o).forEach(([i,a])=>{n[i]=A(a,!0)}),t=JSON.stringify(n)}else r||(t=JSON.stringify(o))}catch{t=JSON.stringify(o.toString())}return t}var e=class{constructor(r){this.version=R;this.moduleName=r}_log(r,t){let n=r.toLowerCase();l[n]==null&&this.throwArgumentError("invalid log level name","logLevel",r),!((O[this.moduleName]||l.default)>l[n])&&console.log(...t)}debug(...r){this._log(e.levels.DEBUG,["[DEBUG]".blue,...r])}info(...r){this._log(e.levels.INFO,["[INFO]".green,...r])}warn(...r){this._log(e.levels.WARNING,["[WARN]".yellow,...r])}makeError(r,t,n){if(m)return this.makeError("censored error",t,{});t||(t=e.errors.UNKNOWN_ERROR),n||(n={});let i=[];Object.entries(n).forEach(([f,h])=>{i.push(`${f}=${A(h)})`)}),i.push(`code=${t}`),i.push(`module=${this.moduleName}`),i.push(`version=${this.version}`);let a=r;i.length&&(r+=" ("+i.join(", ")+")");let N=new Error(r);return N.reason=a,N.code=t,Object.entries(n).forEach(([f,h])=>{N[f]=h}),N}throwError(r,t,n){throw this.makeError(r,t,n)}throwArgumentError(r,t,n){return this.throwError(r,e.errors.INVALID_ARGUMENT,{argument:t,value:n})}assert(r,t,n,i){r||this.throwError(t,n,i)}assertArgument(r,t,n,i){r||this.throwArgumentError(t,n,i)}checkNormalize(r){r==null&&(r="platform missing String.prototype.normalize"),U&&this.throwError("platform missing String.prototype.normalize",e.errors.UNSUPPORTED_OPERATION,{operation:"String.prototype.normalize",form:U})}checkSafeUint53(r,t){typeof r=="number"&&(t==null&&(t="value not safe"),(r<0||r>=9007199254740991)&&this.throwError(t,e.errors.NUMERIC_FAULT,{operation:"checkSafeInteger",fault:"out-of-safe-range",value:r}),r%1&&this.throwError(t,e.errors.NUMERIC_FAULT,{operation:"checkSafeInteger",fault:"non-integer",value:r}))}checkArgumentCount(r,t,n){n?n=": "+n:n="",r<t&&this.throwError("missing argument"+n,e.errors.MISSING_ARGUMENT,{count:r,expectedCount:t}),r>t&&this.throwError("too many arguments"+n,e.errors.UNEXPECTED_ARGUMENT,{count:r,expectedCount:t})}checkNew(r,t){(r===Object||r==null)&&this.throwError("missing new",e.errors.MISSING_NEW,{name:t.name})}checkAbstract(r,t){r===t?this.throwError("cannot instantiate abstract class "+JSON.stringify(t.name)+" directly; use a sub-class",e.errors.UNSUPPORTED_OPERATION,{name:r.name,operation:"new"}):(r===Object||r==null)&&this.throwError("missing new",e.errors.MISSING_NEW,{name:t.name})}static globalLogger(){return c||(c=new e(R)),c}static setCensorship(r,t){if(!r&&t&&this.globalLogger().throwError("cannot permanently disable censorship",e.errors.UNSUPPORTED_OPERATION,{operation:"setCensorship"}),g){if(!r)return;this.globalLogger().throwError("error censorship permanent",e.errors.UNSUPPORTED_OPERATION,{operation:"setCensorship"})}m=!!r,g=!!t}static setLogLevel(r,t){let n=l[t.toLowerCase()];if(n==null){e.globalLogger().warn("invalid log level - "+t);return}O[r]=n}static from(r){return new e(r)}},E=e;E.errors=y,E.levels=u;export{y as ErrorCode,u as LogLevel,E as Logger};
//# sourceMappingURL=logger.mjs.map